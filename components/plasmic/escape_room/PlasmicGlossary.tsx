/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7WvC14QG9b5jXarkiBh2yY
// Component: 1PO-hqhnLxDk

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectcss
import sty from "./PlasmicGlossary.module.css"; // plasmic-import: 1PO-hqhnLxDk/css

createPlasmicElementProxy;

export type PlasmicGlossary__VariantMembers = {};
export type PlasmicGlossary__VariantsArgs = {};
type VariantPropType = keyof PlasmicGlossary__VariantsArgs;
export const PlasmicGlossary__VariantProps = new Array<VariantPropType>();

export type PlasmicGlossary__ArgsType = {};
type ArgPropType = keyof PlasmicGlossary__ArgsType;
export const PlasmicGlossary__ArgProps = new Array<ArgPropType>();

export type PlasmicGlossary__OverridesType = {
  root?: Flex__<"div">;
  copyThis35?: Flex__<"div">;
  copyThis2?: Flex__<"div">;
  copyThis3?: Flex__<"div">;
  copyThis4?: Flex__<"div">;
  copyThis5?: Flex__<"div">;
  copyThis6?: Flex__<"div">;
  copyThis7?: Flex__<"div">;
  copyThis8?: Flex__<"div">;
  copyThis9?: Flex__<"div">;
  copyThis10?: Flex__<"div">;
  copyThis11?: Flex__<"div">;
  copyThis12?: Flex__<"div">;
  copyThis13?: Flex__<"div">;
  copyThis14?: Flex__<"div">;
  copyThis15?: Flex__<"div">;
  copyThis16?: Flex__<"div">;
  copyThis17?: Flex__<"div">;
  copyThis18?: Flex__<"div">;
  copyThis19?: Flex__<"div">;
  copyThis20?: Flex__<"div">;
  copyThis21?: Flex__<"div">;
  copyThis22?: Flex__<"div">;
  copyThis23?: Flex__<"div">;
  copyThis24?: Flex__<"div">;
  copyThis25?: Flex__<"div">;
  copyThis26?: Flex__<"div">;
  copyThis27?: Flex__<"div">;
  copyThis28?: Flex__<"div">;
  copyThis29?: Flex__<"div">;
  copyThis30?: Flex__<"div">;
  copyThis31?: Flex__<"div">;
  copyThis32?: Flex__<"div">;
  copyThis33?: Flex__<"div">;
};

export interface DefaultGlossaryProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicGlossary__RenderFunc(props: {
  variants: PlasmicGlossary__VariantsArgs;
  args: PlasmicGlossary__ArgsType;
  overrides: PlasmicGlossary__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__lg78X)}>
        <div
          data-plasmic-name={"copyThis35"}
          data-plasmic-override={overrides.copyThis35}
          className={classNames(projectcss.all, sty.copyThis35)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__hDVx
            )}
          >
            {"ACG"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___5HkPz
            )}
          >
            {"American College of Gastroenterology"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis2"}
          data-plasmic-override={overrides.copyThis2}
          className={classNames(projectcss.all, sty.copyThis2)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__yuFcs
            )}
          >
            {"ALT"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__j5Dpr
            )}
          >
            {"Alanine aminotransferase"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis3"}
          data-plasmic-override={overrides.copyThis3}
          className={classNames(projectcss.all, sty.copyThis3)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__hSd2A
            )}
          >
            {"AST"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__y0Mp9
            )}
          >
            {"Aspartate aminotransferase"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis4"}
          data-plasmic-override={overrides.copyThis4}
          className={classNames(projectcss.all, sty.copyThis4)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__uDr2H
            )}
          >
            {"BOS"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eK6ZQ
            )}
          >
            {"Budesonide oral suspension"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis5"}
          data-plasmic-override={overrides.copyThis5}
          className={classNames(projectcss.all, sty.copyThis5)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__l7FDg
            )}
          >
            {"BOT"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__sIcmI
            )}
          >
            {"Budesonide orodispersible tablets"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis6"}
          data-plasmic-override={overrides.copyThis6}
          className={classNames(projectcss.all, sty.copyThis6)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___45Ibr
            )}
          >
            {"BUN"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___8YYv1
            )}
          >
            {"Blood urea nitrogen"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis7"}
          data-plasmic-override={overrides.copyThis7}
          className={classNames(projectcss.all, sty.copyThis7)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__cUbL7
            )}
          >
            {"BZH"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__dwPD
            )}
          >
            {"Basal zone hyperplasia"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis8"}
          data-plasmic-override={overrides.copyThis8}
          className={classNames(projectcss.all, sty.copyThis8)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__hrUoO
            )}
          >
            {"CBC"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__q8XiA
            )}
          >
            {"Complete blood count"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis9"}
          data-plasmic-override={overrides.copyThis9}
          className={classNames(projectcss.all, sty.copyThis9)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rsf4
            )}
          >
            {"CMP"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__bgvqo
            )}
          >
            {"Comprehensive metabolic panel"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis10"}
          data-plasmic-override={overrides.copyThis10}
          className={classNames(projectcss.all, sty.copyThis10)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lfkm9
            )}
          >
            {"COPD"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__qje6B
            )}
          >
            {"Chronic obstructive pulmonary disease"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis11"}
          data-plasmic-override={overrides.copyThis11}
          className={classNames(projectcss.all, sty.copyThis11)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__hXCiA
            )}
          >
            {"CV"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rJab0
            )}
          >
            {"Common variable immunodeficiency"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis12"}
          data-plasmic-override={overrides.copyThis12}
          className={classNames(projectcss.all, sty.copyThis12)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__vjMck
            )}
          >
            {"CVID"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__di7Gi
            )}
          >
            {"Common variable immunodeficiency"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis13"}
          data-plasmic-override={overrides.copyThis13}
          className={classNames(projectcss.all, sty.copyThis13)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__o1Dd4
            )}
          >
            {"DEC/SEA"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___1Ri0
            )}
          >
            {"Dyskeratotic epithelial cell/surface epithelial alteration"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis14"}
          data-plasmic-override={overrides.copyThis14}
          className={classNames(projectcss.all, sty.copyThis14)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__uEvEo
            )}
          >
            {"EGD"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__hw5ZT
            )}
          >
            {"Esophagogastroduodenoscopy"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis15"}
          data-plasmic-override={overrides.copyThis15}
          className={classNames(projectcss.all, sty.copyThis15)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lEAb
            )}
          >
            {"EGID"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__vdca6
            )}
          >
            {"Eosinophilic gastrointestinal disease"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis16"}
          data-plasmic-override={overrides.copyThis16}
          className={classNames(projectcss.all, sty.copyThis16)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__p8Wbl
            )}
          >
            {"EMR"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ukdxM
            )}
          >
            {"Electronic medical record"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis17"}
          data-plasmic-override={overrides.copyThis17}
          className={classNames(projectcss.all, sty.copyThis17)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__toTbe
            )}
          >
            {"EoE"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__cGy3
            )}
          >
            {"Eosinophilic esophagitis"}
          </div>
        </div>
      </div>
      <div className={classNames(projectcss.all, sty.freeBox__y7ZgZ)}>
        <div
          data-plasmic-name={"copyThis18"}
          data-plasmic-override={overrides.copyThis18}
          className={classNames(projectcss.all, sty.copyThis18)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___7S7Ke
            )}
          >
            {"ER"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__sepYs
            )}
          >
            {"Emergency room"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis19"}
          data-plasmic-override={overrides.copyThis19}
          className={classNames(projectcss.all, sty.copyThis19)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__kRd3K
            )}
          >
            {"EREFS"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__lNxz
            )}
          >
            {
              "Endoscopic Reference Score (edema, rings,\rexudates, furrows, strictures)"
            }
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis20"}
          data-plasmic-override={overrides.copyThis20}
          className={classNames(projectcss.all, sty.copyThis20)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__qeDtc
            )}
          >
            {"EST"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__m0MMp
            )}
          >
            {"Esophageal String Test"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis21"}
          data-plasmic-override={overrides.copyThis21}
          className={classNames(projectcss.all, sty.copyThis21)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___20A7P
            )}
          >
            {"FDA"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__dMea1
            )}
          >
            {"Food and Drug Administration"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis22"}
          data-plasmic-override={overrides.copyThis22}
          className={classNames(projectcss.all, sty.copyThis22)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__r3NDf
            )}
          >
            {"FDRs"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__mJOpZ
            )}
          >
            {"First-degree relatives"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis23"}
          data-plasmic-override={overrides.copyThis23}
          className={classNames(projectcss.all, sty.copyThis23)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__vkgF3
            )}
          >
            {"GERD"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rig7K
            )}
          >
            {"Gastroesophageal reflux disease"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis24"}
          data-plasmic-override={overrides.copyThis24}
          className={classNames(projectcss.all, sty.copyThis24)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___7AKzv
            )}
          >
            {"HEENT"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wiswm
            )}
          >
            {"Head, eyes, ears, nose, and throat"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis25"}
          data-plasmic-override={overrides.copyThis25}
          className={classNames(projectcss.all, sty.copyThis25)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__pjvH
            )}
          >
            {"IgA-tTg"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__o4P40
            )}
          >
            {"Immunoglobulin A tissue transglutaminase"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis26"}
          data-plasmic-override={overrides.copyThis26}
          className={classNames(projectcss.all, sty.copyThis26)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__m79SJ
            )}
          >
            {"IL"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__inYda
            )}
          >
            {"Interleukin"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis27"}
          data-plasmic-override={overrides.copyThis27}
          className={classNames(projectcss.all, sty.copyThis27)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__qfWav
            )}
          >
            {"I-SEE"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ei44
            )}
          >
            {"Index of Severity for Eosinophilic Esophagitis"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis28"}
          data-plasmic-override={overrides.copyThis28}
          className={classNames(projectcss.all, sty.copyThis28)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__skvVh
            )}
          >
            {"LP"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eJeIx
            )}
          >
            {"Lamina propria"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis29"}
          data-plasmic-override={overrides.copyThis29}
          className={classNames(projectcss.all, sty.copyThis29)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__e4Aic
            )}
          >
            {"LPF"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___74WlB
            )}
          >
            {"Lamina propria fibrosis"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis30"}
          data-plasmic-override={overrides.copyThis30}
          className={classNames(projectcss.all, sty.copyThis30)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rpt8Y
            )}
          >
            {"PCP"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__xobD1
            )}
          >
            {"Primary care provider"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis31"}
          data-plasmic-override={overrides.copyThis31}
          className={classNames(projectcss.all, sty.copyThis31)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__gis8U
            )}
          >
            {"PPI"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eWLrz
            )}
          >
            {"Proton pump inhibitor"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis32"}
          data-plasmic-override={overrides.copyThis32}
          className={classNames(projectcss.all, sty.copyThis32)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rWqU6
            )}
          >
            {"SFED"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__fUF
            )}
          >
            {"Six-food elimination diet"}
          </div>
        </div>
        <div
          data-plasmic-name={"copyThis33"}
          data-plasmic-override={overrides.copyThis33}
          className={classNames(projectcss.all, sty.copyThis33)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__dlTbJ
            )}
          >
            {"STC"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___4DIxk
            )}
          >
            {"Swallowed topical corticosteroid"}
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "copyThis35",
    "copyThis2",
    "copyThis3",
    "copyThis4",
    "copyThis5",
    "copyThis6",
    "copyThis7",
    "copyThis8",
    "copyThis9",
    "copyThis10",
    "copyThis11",
    "copyThis12",
    "copyThis13",
    "copyThis14",
    "copyThis15",
    "copyThis16",
    "copyThis17",
    "copyThis18",
    "copyThis19",
    "copyThis20",
    "copyThis21",
    "copyThis22",
    "copyThis23",
    "copyThis24",
    "copyThis25",
    "copyThis26",
    "copyThis27",
    "copyThis28",
    "copyThis29",
    "copyThis30",
    "copyThis31",
    "copyThis32",
    "copyThis33"
  ],
  copyThis35: ["copyThis35"],
  copyThis2: ["copyThis2"],
  copyThis3: ["copyThis3"],
  copyThis4: ["copyThis4"],
  copyThis5: ["copyThis5"],
  copyThis6: ["copyThis6"],
  copyThis7: ["copyThis7"],
  copyThis8: ["copyThis8"],
  copyThis9: ["copyThis9"],
  copyThis10: ["copyThis10"],
  copyThis11: ["copyThis11"],
  copyThis12: ["copyThis12"],
  copyThis13: ["copyThis13"],
  copyThis14: ["copyThis14"],
  copyThis15: ["copyThis15"],
  copyThis16: ["copyThis16"],
  copyThis17: ["copyThis17"],
  copyThis18: ["copyThis18"],
  copyThis19: ["copyThis19"],
  copyThis20: ["copyThis20"],
  copyThis21: ["copyThis21"],
  copyThis22: ["copyThis22"],
  copyThis23: ["copyThis23"],
  copyThis24: ["copyThis24"],
  copyThis25: ["copyThis25"],
  copyThis26: ["copyThis26"],
  copyThis27: ["copyThis27"],
  copyThis28: ["copyThis28"],
  copyThis29: ["copyThis29"],
  copyThis30: ["copyThis30"],
  copyThis31: ["copyThis31"],
  copyThis32: ["copyThis32"],
  copyThis33: ["copyThis33"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  copyThis35: "div";
  copyThis2: "div";
  copyThis3: "div";
  copyThis4: "div";
  copyThis5: "div";
  copyThis6: "div";
  copyThis7: "div";
  copyThis8: "div";
  copyThis9: "div";
  copyThis10: "div";
  copyThis11: "div";
  copyThis12: "div";
  copyThis13: "div";
  copyThis14: "div";
  copyThis15: "div";
  copyThis16: "div";
  copyThis17: "div";
  copyThis18: "div";
  copyThis19: "div";
  copyThis20: "div";
  copyThis21: "div";
  copyThis22: "div";
  copyThis23: "div";
  copyThis24: "div";
  copyThis25: "div";
  copyThis26: "div";
  copyThis27: "div";
  copyThis28: "div";
  copyThis29: "div";
  copyThis30: "div";
  copyThis31: "div";
  copyThis32: "div";
  copyThis33: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicGlossary__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicGlossary__VariantsArgs;
    args?: PlasmicGlossary__ArgsType;
    overrides?: NodeOverridesType<T>;
  } &
    // Specify variants directly as props
    Omit<PlasmicGlossary__VariantsArgs, ReservedPropsType> &
    // Specify args directly as props
    Omit<PlasmicGlossary__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicGlossary__ArgProps,
          internalVariantPropNames: PlasmicGlossary__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicGlossary__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicGlossary";
  } else {
    func.displayName = `PlasmicGlossary.${nodeName}`;
  }
  return func;
}

export const PlasmicGlossary = Object.assign(
  // Top-level PlasmicGlossary renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    copyThis35: makeNodeComponent("copyThis35"),
    copyThis2: makeNodeComponent("copyThis2"),
    copyThis3: makeNodeComponent("copyThis3"),
    copyThis4: makeNodeComponent("copyThis4"),
    copyThis5: makeNodeComponent("copyThis5"),
    copyThis6: makeNodeComponent("copyThis6"),
    copyThis7: makeNodeComponent("copyThis7"),
    copyThis8: makeNodeComponent("copyThis8"),
    copyThis9: makeNodeComponent("copyThis9"),
    copyThis10: makeNodeComponent("copyThis10"),
    copyThis11: makeNodeComponent("copyThis11"),
    copyThis12: makeNodeComponent("copyThis12"),
    copyThis13: makeNodeComponent("copyThis13"),
    copyThis14: makeNodeComponent("copyThis14"),
    copyThis15: makeNodeComponent("copyThis15"),
    copyThis16: makeNodeComponent("copyThis16"),
    copyThis17: makeNodeComponent("copyThis17"),
    copyThis18: makeNodeComponent("copyThis18"),
    copyThis19: makeNodeComponent("copyThis19"),
    copyThis20: makeNodeComponent("copyThis20"),
    copyThis21: makeNodeComponent("copyThis21"),
    copyThis22: makeNodeComponent("copyThis22"),
    copyThis23: makeNodeComponent("copyThis23"),
    copyThis24: makeNodeComponent("copyThis24"),
    copyThis25: makeNodeComponent("copyThis25"),
    copyThis26: makeNodeComponent("copyThis26"),
    copyThis27: makeNodeComponent("copyThis27"),
    copyThis28: makeNodeComponent("copyThis28"),
    copyThis29: makeNodeComponent("copyThis29"),
    copyThis30: makeNodeComponent("copyThis30"),
    copyThis31: makeNodeComponent("copyThis31"),
    copyThis32: makeNodeComponent("copyThis32"),
    copyThis33: makeNodeComponent("copyThis33"),

    // Metadata about props expected for PlasmicGlossary
    internalVariantProps: PlasmicGlossary__VariantProps,
    internalArgProps: PlasmicGlossary__ArgProps
  }
);

export default PlasmicGlossary;
/* prettier-ignore-end */
