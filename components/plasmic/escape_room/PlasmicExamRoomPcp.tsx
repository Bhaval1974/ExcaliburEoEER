/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7WvC14QG9b5jXarkiBh2yY
// Component: 5O6nPL2eakEM

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import RoomMap from "../../RoomMap"; // plasmic-import: QwShmI9xWLXM/component
import Hotspot from "../../Hotspot"; // plasmic-import: Fhh6u1WI2G9i/component
import InstructionBanner from "../../InstructionBanner"; // plasmic-import: XeE2UeZFWwVr/component
import ReferencePanel from "../../ReferencePanel"; // plasmic-import: dm8P2fnSqnl1/component
import QuestionModal from "../../QuestionModal"; // plasmic-import: k8q3s-VwBO0i/component
import WrongAnswer from "../../WrongAnswer"; // plasmic-import: N85BHE1JruFS/component
import FinalTest from "../../FinalTest"; // plasmic-import: hYHCVxAKLCEX/component
import BottomToolbar from "../../BottomToolbar"; // plasmic-import: 2RFJUesBV3VF/component
import ClueModal from "../../ClueModal"; // plasmic-import: 0lm5ubHxYbp_/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectcss
import sty from "./PlasmicExamRoomPcp.module.css"; // plasmic-import: 5O6nPL2eakEM/css

createPlasmicElementProxy;

export type PlasmicExamRoomPcp__VariantMembers = {
  modal:
    | "rm1Hs1"
    | "rm1Hs2"
    | "rm1Hs3"
    | "rm1Hs4"
    | "rm2Hs1"
    | "rm2Hs2"
    | "rm2Hs3"
    | "rm2Hs4"
    | "shareseDoor"
    | "rm3Hs1"
    | "rm3Hs2"
    | "rm3Hs3"
    | "rm3Hs4"
    | "ivanDoor"
    | "lamp"
    | "kelvinPcp1"
    | "kelvinPcp2"
    | "kelvinPcp3"
    | "kelvinPcp4"
    | "sharesePcp2"
    | "sharesePcp3"
    | "sharesePcp4"
    | "ivanPcp42"
    | "ivanPcp2"
    | "ivanPcp3"
    | "unnamedVariant";
  room: "kelvin" | "sharese" | "ivan";
  kelvinFinal:
    | "kelvinDoorFour"
    | "kelvinDoorThree"
    | "kelvinDoorTwo"
    | "kelvinDoorOne";
};
export type PlasmicExamRoomPcp__VariantsArgs = {
  modal?: SingleChoiceArg<
    | "rm1Hs1"
    | "rm1Hs2"
    | "rm1Hs3"
    | "rm1Hs4"
    | "rm2Hs1"
    | "rm2Hs2"
    | "rm2Hs3"
    | "rm2Hs4"
    | "shareseDoor"
    | "rm3Hs1"
    | "rm3Hs2"
    | "rm3Hs3"
    | "rm3Hs4"
    | "ivanDoor"
    | "lamp"
    | "kelvinPcp1"
    | "kelvinPcp2"
    | "kelvinPcp3"
    | "kelvinPcp4"
    | "sharesePcp2"
    | "sharesePcp3"
    | "sharesePcp4"
    | "ivanPcp42"
    | "ivanPcp2"
    | "ivanPcp3"
    | "unnamedVariant"
  >;
  room?: SingleChoiceArg<"kelvin" | "sharese" | "ivan">;
  kelvinFinal?: SingleChoiceArg<
    "kelvinDoorFour" | "kelvinDoorThree" | "kelvinDoorTwo" | "kelvinDoorOne"
  >;
};
type VariantPropType = keyof PlasmicExamRoomPcp__VariantsArgs;
export const PlasmicExamRoomPcp__VariantProps = new Array<VariantPropType>(
  "modal",
  "room",
  "kelvinFinal"
);

export type PlasmicExamRoomPcp__ArgsType = { questions?: any };
type ArgPropType = keyof PlasmicExamRoomPcp__ArgsType;
export const PlasmicExamRoomPcp__ArgProps = new Array<ArgPropType>("questions");

export type PlasmicExamRoomPcp__OverridesType = {
  root?: Flex__<"div">;
  roomPlan?: Flex__<"div">;
  roomMap?: Flex__<typeof RoomMap>;
  roomScene?: Flex__<"div">;
  kelvinTitleBanner?: Flex__<"div">;
  kelvinPcp?: Flex__<"div">;
  bookshelf6?: Flex__<"div">;
  kf?: Flex__<typeof Hotspot>;
  sharesePcp?: Flex__<"div">;
  hotspot42?: Flex__<"div">;
  bookshelf5?: Flex__<"div">;
  shareseBookshelf2?: Flex__<typeof PlasmicImg__>;
  hotspot32?: Flex__<"div">;
  hotspot22?: Flex__<"div">;
  hotspot12?: Flex__<"div">;
  ivanPcp?: Flex__<"div">;
  bookshelf7?: Flex__<"div">;
  referencePanel?: Flex__<typeof ReferencePanel>;
  questionContainer?: Flex__<"div">;
  computer?: Flex__<typeof QuestionModal>;
  ivanPcp42?: Flex__<typeof QuestionModal>;
  ivanPcp2?: Flex__<typeof QuestionModal>;
  ivanPcp3?: Flex__<typeof QuestionModal>;
  ivanPcp4?: Flex__<typeof QuestionModal>;
  sharesePcp1?: Flex__<typeof QuestionModal>;
  sharesePcp2?: Flex__<typeof QuestionModal>;
  sharesePcp3?: Flex__<typeof QuestionModal>;
  sharesePcp4?: Flex__<typeof QuestionModal>;
  kelvinPcp1?: Flex__<typeof QuestionModal>;
  kelvinPcp2?: Flex__<typeof QuestionModal>;
  kelvinPcp3?: Flex__<typeof QuestionModal>;
  kelvinPcp4?: Flex__<typeof QuestionModal>;
  ivanBed?: Flex__<typeof QuestionModal>;
  sharese1?: Flex__<typeof QuestionModal>;
  sharese2?: Flex__<typeof QuestionModal>;
  sharese3?: Flex__<typeof QuestionModal>;
  diagram?: Flex__<typeof QuestionModal>;
  sharese4?: Flex__<typeof QuestionModal>;
  bookshelf?: Flex__<typeof QuestionModal>;
  bed?: Flex__<typeof QuestionModal>;
  kelvinModal?: Flex__<typeof FinalTest>;
  bottomToolbar?: Flex__<typeof BottomToolbar>;
  clueModal?: Flex__<typeof ClueModal>;
};

export interface DefaultExamRoomPcpProps {
  questions?: any;
  modal?: SingleChoiceArg<
    | "rm1Hs1"
    | "rm1Hs2"
    | "rm1Hs3"
    | "rm1Hs4"
    | "rm2Hs1"
    | "rm2Hs2"
    | "rm2Hs3"
    | "rm2Hs4"
    | "shareseDoor"
    | "rm3Hs1"
    | "rm3Hs2"
    | "rm3Hs3"
    | "rm3Hs4"
    | "ivanDoor"
    | "lamp"
    | "kelvinPcp1"
    | "kelvinPcp2"
    | "kelvinPcp3"
    | "kelvinPcp4"
    | "sharesePcp2"
    | "sharesePcp3"
    | "sharesePcp4"
    | "ivanPcp42"
    | "ivanPcp2"
    | "ivanPcp3"
    | "unnamedVariant"
  >;
  room?: SingleChoiceArg<"kelvin" | "sharese" | "ivan">;
  kelvinFinal?: SingleChoiceArg<
    "kelvinDoorFour" | "kelvinDoorThree" | "kelvinDoorTwo" | "kelvinDoorOne"
  >;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicExamRoomPcp__RenderFunc(props: {
  variants: PlasmicExamRoomPcp__VariantsArgs;
  args: PlasmicExamRoomPcp__ArgsType;
  overrides: PlasmicExamRoomPcp__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {
          questions: {
            questions: [
              {
                id: "Kelvin-PCP-q1",
                questionText:
                  "Which of the following is a risk factor for the development of eosinophilic esophagitis (EoE)?",
                options: [
                  { id: "A", text: "Female sex" },
                  { id: "B", text: "Birth via C-section" },
                  { id: "C", text: "Smoking" },
                  {
                    id: "D",
                    text: "A diet high in caffeine, alcohol, and/or fat"
                  }
                ],
                correctAnswer: "B",
                rationale:
                  "Studies have found that individuals born prematurely or via C-section, those not exclusively breastfed, and infants who received antibiotics have a higher risk of developing EoE. These factors are also believed to contribute to the development of other conditions that are part of the \u201callergic march,\u201d including allergies, asthma, and eczema. Males are three times more likely to be diagnosed with EoE than females. Smoking and an unbalanced diet have not been shown to increase an individual\u2019s risk of developing EoE."
              },
              {
                id: "Kelvin-PCP-q2",
                questionText:
                  "Which of the following is a symptom of EoE that commonly manifests in school-aged children (ages 6-14 years)?",
                options: [
                  {
                    id: "A",
                    text: "Weight gain >10 pounds in the last 6 months"
                  },
                  { id: "B", text: "Persistent sore throat" },
                  { id: "C", text: "Heartburn" },
                  { id: "D", text: "Chronic diarrhea" }
                ],
                correctAnswer: "C",
                rationale:
                  "EoE signs and symptoms vary across age groups. The primary symptoms in infants and young children (ages \u22645 years) include sore throat, poor growth, and feeding issues. In school-aged children (ages 6-14 years), abdominal pain, vomiting, and heartburn are common. Adults who develop EoE often present with dysphagia and food impaction. Weight gain and chronic diarrhea are not typically associated with EoE at any age. However, EoE symptoms are often nonspecific and may be consistent with other conditions, making the diagnosis challenging. In younger children, feeding difficulties may be mistaken for \u201ctypical\u201d fussy eating, while in older individuals, symptoms of dysphagia may be masked by adaptive behaviors and food avoidance. These sorts of issues can all contribute to the delayed diagnosis of EoE, which has been frequently cited as a problem across the healthcare spectrum. Tools such as the IMPACT behavioral assessment can be used to distinguish EoE from other diagnoses with overlapping presentation patterns."
              },
              {
                id: "Kelvin-PCP-q3",
                questionText:
                  "Which of the following biologics is currently approved by the U.S. Food and Drug Administration for the treatment of EoE?",
                options: [
                  { id: "A", text: "Cendakimab" },
                  { id: "B", text: "Dupilumab" },
                  { id: "C", text: "Tezepelumab" },
                  { id: "D", text: "Mepolizumab" }
                ],
                correctAnswer: "B",
                rationale:
                  "Dupilumab, a fully human monoclonal antibody targeting IL-4Ra, reduces type 2 inflammation by blocking interleukin-4 and interleukin-13 signaling (these cytokines play a role in the development of allergic and inflammatory diseases such as EoE). Dupilumab is currently FDA approved for use in children with EoE ages 1 year and older. A three-part, phase 3 trial showed that EoE patients treated with dupilumab weekly were significantly more likely to achieve histologic remission and see amelioration of symptoms compared to those treated with placebo."
              },
              {
                id: "Kelvin-PCP-q4",
                questionText:
                  "Which of the following food groups is the most common trigger for the development of EoE?",
                options: [
                  { id: "A", text: "Red meat" },
                  { id: "B", text: "Poultry" },
                  { id: "C", text: "Wheat" },
                  { id: "D", text: "Stone fruits" }
                ],
                correctAnswer: "C",
                rationale:
                  "Wheat is among the most common food triggers for EoE and is typically included as part of a food elimination diet to identify potential food triggers in patients with EoE. There are several approaches to a food elimination diet, ranging from eliminating one food or food ingredient at a time to up to six foods or ingredients simultaneously. This is then followed by reintroduction of those foods/food ingredients to identify triggers. Other common food allergens that may trigger EoE include dairy, soy, eggs, and nuts. Red meat, poultry, and stone fruits are not considered to be common food allergens associated with EoE."
              },
              {
                id: "Kelvin-PCP-q5",
                questionText:
                  "Following consultation with a pediatric gastroenterologist, Kelvin is formally diagnosed with EoE. A food elimination trial is initially suggested to identify triggers for Kelvin\u2019s disease. However, Kelvin\u2019s parents are concerned that this will be a challenge given their son\u2019s feeding difficulties. What is the best approach to manage this issue?",
                options: [
                  {
                    id: "A",
                    text: "Refer to an allergist for food allergy testing (IgE and skin prick) to identify triggers"
                  },
                  {
                    id: "B",
                    text: "Refer to a feeding therapist to support the family in addressing feeding behaviors"
                  },
                  {
                    id: "C",
                    text: "Prescribe an elemental formula diet for 12 weeks"
                  },
                  {
                    id: "D",
                    text: "Refer for aeroallergen testing prior to initiating a food elimination trial"
                  }
                ],
                correctAnswer: "B",
                rationale:
                  "According to the 2025 ACG guidelines, treatment goals for EoE in pediatric patients include monitoring growth, development (including eating skills), and nutrition. Feeding therapy is a recommended adjunctive therapeutic intervention to address food avoidance and maladaptive feeding behaviors. While histologic response to an elemental formula diet is high, it is only recommended in cases of EoE where other treatment options have failed. Skin prick, patch, and serum Ig allergy tests are not recommended to guide food elimination diets for patients with EoE. Aeroallergen testing is not a recommended replacement for a food elimination diet in patients with EoE. Furthermore, the typical course of the atopic march involves food allergies in younger children; older children and adults are more likely to have aeroallergen allergies."
              },
              {
                id: "Kelvin-PCP-q6",
                questionText:
                  "Kelvin\u2019s parents express relief after meeting with a feeding specialist and agree to a 6-food elimination diet but remain a bit apprehensive about their son\u2019s future. \u201cHow are we going to explain to Kelvin why he can\u2019t enjoy the same treats and foods as his friends? What happens when he goes to birthday parties, and they serve cake to all of the kids?\u201d What is the best recommendation to address these concerns?",
                options: [
                  {
                    id: "A",
                    text: "Recommend \u201cdiet holidays\u201d where Kelvin can enjoy restricted foods to accommodate social events"
                  },
                  {
                    id: "B",
                    text: "Temporarily introduce use of an inhaled or swallowed corticosteroid during periods when Kelvin may be unable or unwilling to follow a food elimination diet"
                  },
                  {
                    id: "C",
                    text: "Explain that, unfortunately, nothing can be done and that Kelvin will have to cope with these sorts of situations"
                  },
                  {
                    id: "D",
                    text: "Refer Kelvin and his family to behavioral health support to manage any psychosocial adjustments and coping issues related to his EoE"
                  }
                ],
                correctAnswer: "D",
                rationale:
                  "Psychosocial problems such as social difficulties, anxiety, and depression related to EoE can be evaluated by a behavioral health specialist, and effective coping mechanisms can be built to support a child with EoE and his family that helps them adhere to their treatment plan with minimal mental and behavioral detriments. While the ACG guidelines suggest that \u201cdiet holidays\u201d can be considered periodically for adult patients to accommodate life or social events (usually accompanied by medical therapy), this approach is more challenging for children as they may be unwilling to return to a more restrictive diet once the \u201choliday\u201d expires."
              },
              {
                id: "Kelvin-PCP-q7",
                questionText:
                  "Twelve weeks after the start of a restrictive 6-food elimination diet (SFED), Kelvin\u2019s EoE symptoms are re-evaluated via endoscopy by a pediatric gastroenterologist. Results show the presence of active disease, with loss of vascular markings, linear furrows, and mild white plaques. Esophageal biopsies reveal persistently high eosinophils, confirming that Kelvin\u2019s EoE is not in remission despite SFED. Based on these results, which of the following would be the next best treatment suggestion from Kelvin\u2019s gastroenterologist?",
                options: [
                  {
                    id: "A",
                    text: "Fluticasone 122 \u03bcg in 2 puffs 4 times daily"
                  },
                  {
                    id: "B",
                    text: "Budesonide oral suspension 1 mg/d twice a day"
                  },
                  { id: "C", text: "Dupilumab 100 mg subcutaneously Q2W" },
                  { id: "D", text: "Omeprazole 15 mg twice a day" }
                ],
                correctAnswer: "D",
                rationale:
                  "The 2025 ACG Guidelines recommend PPIs such as omeprazole as frontline therapy for pediatric patients with EoE due to their low cost and acceptable long-term safety. A meta-analysis of 33 studies of PPI use in children and adults with EoE (variable reported duration of treatment) found that 50% of patients achieved histologic remission. Current guidelines suggest that cost of treatment and insurance coverage should be a consideration within the shared decision-making process, particularly when dealing with potential off-label use of therapies such as fluticasone. One more important item to note here: The listed doses of budesonide, fluticasone, and dupilumab are all inappropriate for a toddler. More commonly, they would be given as follows in toddlers: budesonide 0.5 mg BID, fluticasone 44 \u03bcg in 2 puffs BID, dupilumab 200 mg subcutaneously Q2W."
              },
              {
                id: "Kelvin-PCP-q8",
                questionText:
                  "Three months after starting on omeprazole, Kelvin is scheduled for a routine well visit at your practice, and you ask about his EoE symptoms. His parents report that Kelvin\u2019s symptoms are not improving, and he continues to have difficulties with eating. His eczema has also gotten significantly worse. You suggest to Kelvin\u2019s parents that they call his pediatric gastroenterologist for modifications to his treatment. Assuming that Kelvin\u2019s next endoscopy shows EoE that is refractory to a PPI, which of the following options would be the best treatment recommendation?",
                options: [
                  {
                    id: "A",
                    text: "Continue omeprazole at current dosage and re-evaluate in 12 weeks"
                  },
                  {
                    id: "B",
                    text: "Increase omeprazole dosage to 30 mg once a day and re-evaluate in 12 weeks"
                  },
                  {
                    id: "C",
                    text: "Switch to dupilumab 200 mg subcutaneously Q2W"
                  },
                  {
                    id: "D",
                    text: "Switch to fluticasone via multi-dose inhaler preparation, 115 \u03bcg in 2 puffs, 4 times daily"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "The presence of severe atopic comorbidities such as eczema that may also improve with dupilumab warrant its use at this time rather than a swallowed topical corticosteroid in this patient who has not responded to an initial PPI. In addition to EoE, dupilumab is currently FDA approved for the following conditions: Moderate-to-severe atopic dermatitis (eczema) Moderate-to-severe asthma COPD Chronic rhinosinusitis with nasal polyps Chronic spontaneous urticaria Prurigo nodularis"
              },
              {
                id: "Sharese-PCP-q1",
                questionText:
                  "The risk of developing EoE is elevated if a patient or first-degree family member is diagnosed with which of the following conditions?",
                options: [
                  { id: "A", text: "Kidney disease" },
                  { id: "B", text: "Type 1 diabetes" },
                  { id: "C", text: "Hashimoto\u2019s thyroiditis" },
                  { id: "D", text: "Leukocytosis" }
                ],
                correctAnswer: "C",
                rationale:
                  "EoE can be associated with autoimmune and connective tissue diseases. According to studies, patients or patients with first-degree family members diagnosed with Celiac disease, Crohn\u2019s disease, ulcerative colitis, rheumatoid arthritis, IgA deficiency, common variable immunodeficiency (CVID), multiple sclerosis, and Hashimoto\u2019s thyroiditis are at increased risk of developing EoE. A personal or family history of kidney disease, type 1 diabetes, and leukocytosis are not known to increase an individual\u2019s risk of developing EoE."
              },
              {
                id: "Sharese-PCP-q2",
                questionText:
                  "The IMPACT acronym for assessing behavioral adaptations of patients with potential or diagnosed EoE includes all of the following EXCEPT:",
                options: [
                  { id: "A", text: "Imbibe fluids with meals" },
                  { id: "B", text: "Medicate for symptoms" },
                  { id: "C", text: "Prolong meal times" },
                  { id: "D", text: "Avoid hard texture foods" }
                ],
                correctAnswer: "B",
                rationale:
                  "EoE patients with longstanding dysphagia may develop coping behaviors to manage their eating difficulties. This may result in minimization of symptoms and delayed diagnosis. Clinicians should evaluate patients with suspected and diagnosed EoE for behaviors using the IMPACT acronym: Imbibe fluids with meals; Modify food; Prolong meal times; Avoid hard texture foods; Chew excessively; Turn away tablets/pills."
              },
              {
                id: "Sharese-PCP-q3",
                questionText:
                  "Budenoside oral suspension (BOS) is an immediate-release topical corticosteroid that is FDA approved for use in individuals with EoE of which ages?",
                options: [
                  { id: "A", text: "Ages 2 years and older" },
                  { id: "B", text: "Ages 6 years and older" },
                  { id: "C", text: "Ages 11 years and older" },
                  { id: "D", text: "Ages 16 years and older" }
                ],
                correctAnswer: "C",
                rationale:
                  "BOS is an immediate-release topical corticosteroid given as a viscous suspension to lengthen its survival time on the esophageal mucosal surface following oral administration. BOS is currently approved for the treatment of EoE in individuals aged 11 years and older based on data from a pair of phase 3 trials showing that patients treated with BOS 2 mg twice daily were significantly more likely than those treated with placebo to achieve both stringent histological and symptom response at 12 weeks. Improved endoscopic outcomes were also seen in these trials."
              },
              {
                id: "Sharese-PCP-q4",
                questionText:
                  "Which of the following physical features found via endoscopy strongly indicates a likely diagnosis of EoE?",
                options: [
                  { id: "A", text: "A. Gastric erosions" },
                  { id: "B", text: "B. Normal-appearing mucosa" },
                  { id: "C", text: "C. Linear furrows" },
                  { id: "D", text: "D. Dysplasia" }
                ],
                correctAnswer: "C",
                rationale:
                  "Key features of EoE that are typically found upon endoscopy include Edema, Rings, Exudates, Furrows, and Strictures (commonly abbreviated as EREFS). A scoring system of severity known as the EREFS Index is often used by gastroenterologists to assess severity of disease. Gastric erosions and dysplasia may be indicators of other conditions such as GERD and Barrett\u2019s esophagus but are not indicative of a diagnosis of EoE."
              },
              {
                id: "Sharese-PCP-q5",
                questionText:
                  "An upper endoscopy is performed by Sharese\u2019s gastroenterologist, a critical stricture is identified, and dilation is performed. Based on her disease status and current life circumstances, which of the following would be the best immediate treatment suggestion from Sharese\u2019s gastroenterologist?",
                options: [
                  {
                    id: "A",
                    text: "Continue on omeprazole 20 mg twice daily and reassess in 12 weeks"
                  },
                  {
                    id: "B",
                    text: "Increase dose of omeprazole to 30 mg twice daily and reassess in 12 weeks"
                  },
                  {
                    id: "C",
                    text: "Add budesonide oral suspension 2 mg/d twice a day to omeprazole 20 mg twice daily"
                  },
                  {
                    id: "D",
                    text: "Replace omeprazole 20 mg twice daily with esomeprazole 40 mg once daily"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "Budesonide oral suspension (BOS) is an appropriate option given Sharese\u2019s disease status and self-reported challenges with adhering to her food elimination diet. Approximately two-thirds of patients treated with PPIs fail to achieve histologic remission, and therefore use of a different PPI is less likely to improve Sharese\u2019s condition. Swallowed topical corticosteroids (STCs) such as BOS may be prescribed as monotherapy or in combination with PPIs. The 2025 ACG Guidelines strongly recommend the use of corticosteroids (the only therapy to receive this level of support) based on multiple trials showing that approximately two-thirds of EoE patients will achieve a histologic response with corticosteroid use. Omeprazole at 30 mg twice daily is not a recommended dosage for patients with EoE."
              },
              {
                id: "Sharese-PCP-q6",
                questionText:
                  "Sharese wants to know how soon after starting BOS that she might know if it is improving her condition. In consultation with Sharese\u2019s gastroenterologist, what should you tell her is the best timeframe for conducting a repeat endoscopy to assess any potential improvement in her condition?",
                options: [
                  { id: "A", text: "4-7 weeks after the initiation of BOS" },
                  { id: "B", text: "8-12 weeks after the initiation of BOS" },
                  { id: "C", text: "13-16 weeks after the initiation of BOS" },
                  { id: "D", text: "17-20 weeks after the initiation of BOS" }
                ],
                correctAnswer: "B",
                rationale:
                  "According to the 2025 ACG Guidelines, a repeat endoscopy to assess treatment response to PPIs, swallowed topical steroids, or food elimination diet is recommended in 8-12 weeks. Clinical trial findings indicate that repeat endoscopy following treatment initiation with dupilumab may range between 12 and 24 weeks. However, monitoring times may vary depending on patient features."
              },
              {
                id: "Sharese-PCP-q7",
                questionText:
                  "Before she begins on her new treatment regimen of BOS + omeprazole, Sharese expresses some concern about side effects of STCs that may impact her social life at college (\u201cThis has been hard enough the last few weeks,\u201d she tells you). Which of the following side effects should you emphasize as most likely to occur?",
                options: [
                  { id: "A", text: "Mild esophageal candidiasis" },
                  { id: "B", text: "Adrenal insufficiency" },
                  { id: "C", text: "Weight gain" },
                  { id: "D", text: "Diarrhea" }
                ],
                correctAnswer: "A",
                rationale:
                  "Oral and/or esophageal candidiasis is the most reported side effect of STCs, including BOS. Rates of candidal infection ranged from 3.8% during a phase 3 trial of BOS to 23.7% in a European randomized trial of budesonide orodispersible tablets (BOT). However, most cases of candidiasis are asymptomatic and manageable with intermittent use of antifungal agents. Weight gain and diarrhea were not reported as frequent side effects in studies of STCs in patients with EoE. Induction trials of BOS and BOT in adults, along with a pediatric observational study, found adrenal insufficiency in <5% of patients. The ACG 2025 Guidelines note that an assessment of adrenal function prior to prescribing corticosteroids may be considered in patients who are candidates for its continuous, long-term administration."
              },
              {
                id: "Sharese-PCP-q8",
                questionText:
                  "As Sharese nears the completion of her college studies, you discuss with her the need to transition care from your pediatric practice to an adult practice near where she has accepted a job (it\u2019s about a 45-drive from your office). According to Got Transition\u00ae protocols, which of the following should be the first element within your transition planning?",
                options: [
                  {
                    id: "A",
                    text: "Assess Sharese\u2019s health care transition readiness skills"
                  },
                  {
                    id: "B",
                    text: "Develop a flowsheet within your EMR to track the transition"
                  },
                  {
                    id: "C",
                    text: "Create a written transition and care policy/guide within your practice"
                  },
                  {
                    id: "D",
                    text: "Identify an adult clinician for the transfer of care"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "Got Transition\u00ae is a program of The National Alliance to Advance Adolescent Health that was established to improve the transition from pediatric to adult healthcare through the use of evidence-driven strategies for clinicians and other health care professionals. There are six core elements laid out to assist adolescent patients and their providers in transitioning from a pediatric to an adult healthcare practice that should be completed in sequence. These elements involve the following steps: Develop a written transition and care policy/guide within your practice Develop a process to track receipt of the six core elements, integrating with your EMR when possible Develop and regularly update the plan of care Conduct regular transition readiness assessments with your patients as they enter adolescence and/or early adulthood Complete the care transfer package once transition readiness is confirmed Contact the patient and/or parent 3-6 months after the last pediatric visit to confirm attendance at first adult appointment"
              },
              {
                id: "Ivan-PCP-q1",
                questionText:
                  "According to the 2025 ACG Guidelines, diagnosis of EoE requires all of the following EXCEPT:",
                options: [
                  {
                    id: "A",
                    text: "PPI trial followed by repeat endoscopy with biopsy"
                  },
                  {
                    id: "B",
                    text: "Upper endoscopy with biopsy showing \u226515 eos/hpf (or ~60 eos/mm2) on biopsy"
                  },
                  {
                    id: "C",
                    text: "Evaluation of non-EoE causes of esophageal eosinophilia"
                  },
                  {
                    id: "D",
                    text: "Evaluation of chronic symptoms indicative of esophageal dysfunction"
                  }
                ],
                correctAnswer: "A",
                rationale:
                  "The 2025 ACG guidelines update eliminated the requirement for a PPI trial before diagnosing EoE to rule out inflammation related to GERD. This change was based on extensive data indicating that patients responding to PPIs exhibit similar clinical, endoscopic, histological, immunological, and molecular characteristics as those with EoE who do not respond to PPIs. This suggests that PPIs are an effective treatment for EoE through novel mechanisms and not solely through gastric acid suppression. Furthermore, research shows a complex relationship between EoE and GERD, and not an independent disease course as previously suspected."
              },
              {
                id: "Ivan-PCP-q2",
                questionText:
                  "Which of the following features is commonly seen both in patients with EoE and GERD?",
                options: [
                  { id: "A", text: "Hiatal hernia" },
                  { id: "B", text: "Erosive esophagitis" },
                  { id: "C", text: "Seasonal allergy symptoms" },
                  { id: "D", text: "Dysphagia" }
                ],
                correctAnswer: "D",
                rationale:
                  "Dysphagia is a hallmark symptom of EoE and is also frequently experienced by GERD patients, especially if the reflux leads to inflammation or narrowing of the esophagus. Other clinical presentations listed here, including erosive esophagitis or hiatal hernia, indicate a likely diagnosis of GERD but are not commonly seen in patients with EoE. Alternately, there is no underlying allergic mechanism present in GERD patients; however, seasonal allergies are considered part of the \u201callergic march\u201d commonly seen in patients with EoE."
              },
              {
                id: "Ivan-PCP-q3",
                questionText:
                  "Which of the following comorbidities is found most commonly in patients with EoE?",
                options: [
                  { id: "A", text: "Eczema" },
                  { id: "B", text: "Irritable bowel syndrome" },
                  { id: "C", text: "Type 1 diabetes" },
                  { id: "D", text: "Obesity" }
                ],
                correctAnswer: "A",
                rationale:
                  "According the studies, 60-80% of individuals with EoE also suffer from various allergic conditions, including seasonal allergies, asthma, eczema, and/or food allergies. EoE is a feature of the allergic (or atopic) march, which describes the typical progression of allergic conditions that starts in childhood and intensifies over time. Irritable bowel syndrome, type 1 diabetes, and obesity are not associated with EoE."
              },
              {
                id: "Ivan-PCP-q4",
                questionText:
                  "Which of the following statements about PPIs is true?",
                options: [
                  {
                    id: "A",
                    text: "PPIs are ineffective in the majority of patients with EoE"
                  },
                  {
                    id: "B",
                    text: "PPIs are recommended in EoE patients only after diet elimination therapy has failed"
                  },
                  {
                    id: "C",
                    text: "PPIs are used as part of a diagnostic trial to rule out GERD"
                  },
                  {
                    id: "D",
                    text: "PPIs can reduce inflammation in the esophagus"
                  }
                ],
                correctAnswer: "D",
                rationale:
                  "PPIs work to treat EoE by blocking the chemical signals that summon eosinophils to the esophagus, thereby reducing inflammation. The acid-suppressive actions of PPIs also support healing of the esophageal lining. Studies show that use of PPIs result in remission of EoE in approximately 50% of patients, and several studies show maintained response in 70-85% of patients after one year. A PPI trial is no longer recommended to diagnose EoE. PPIs are considered a first-line treatment and may be used before or after a dietary elimination trial based on patient preference."
              },
              {
                id: "Ivan-PCP-q5",
                questionText:
                  "How should Ivan\u2019s current medications be managed prior to conducting a diagnostic upper EGD with biopsy?",
                options: [
                  {
                    id: "A",
                    text: "Continue on esomeprazole only prior to procedure"
                  },
                  {
                    id: "B",
                    text: "Continue on fluticasone only prior to procedure"
                  },
                  {
                    id: "C",
                    text: "Continue both current medications prior to procedure"
                  },
                  {
                    id: "D",
                    text: "Pause both esomeprazole and fluticasone for 8 weeks prior to procedure"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "Given the progressive nature of Ivan\u2019s dysphagia, expeditious workup with an upper endoscopy is advised. While a diagnostic endoscopy would ideally be performed prior to the initiation of PPI therapy, given that Ivan is already taking esomeprazole for his ongoing reflux symptoms and fluticasone for his seasonal allergies, in addition to the fact that he continues to have active symptoms, both of his medications can be continued prior to endoscopy. In fact, if biopsies demonstrate esophageal eosinophilia, that will suggest non-response to PPI and allow more expeditious transition to another treatment."
              },
              {
                id: "Ivan-PCP-q6",
                questionText:
                  "During Ivan\u2019s upper EGD with biopsy, the standard endoscope is able to pass easily into the esophageal lumen. Visible stricturing is present, and diameter as measured by endoscope is 13.2 mm (see imaging here). Additional testing demonstrates the presence of mild disease. Based on these results, which of the following would be the best treatment suggestion from Ivan\u2019s gastroenterologist?",
                options: [
                  {
                    id: "A",
                    text: "Schedule patient for a barium swallow esophagram to confirm the stricture prior to treatment"
                  },
                  {
                    id: "B",
                    text: "Proceed with diet or drug therapy without dilation, and repeat endoscopy after 8-12 weeks to reassess for narrowing"
                  },
                  {
                    id: "C",
                    text: "Proceed with conservative esophageal dilation in conjunction with the endoscopy and stop once mucosal disruption is seen; start immediate concomitant medical or dietary therapy"
                  },
                  {
                    id: "D",
                    text: "Proceed with conservative esophageal dilation in conjunction with the endoscopy and stop once mucosal disruption is seen; do not prescribe medical therapy until repeat endoscopy is performed"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "The 2025 ACG Guidelines recommend dilation as an adjunctive treatment to medication for esophageal strictures to treat both EoE disease pathogenesis as well as dysphagia symptoms. Studies show that the consistent use of PPIs and swallowed topical steroids can reduce the number and frequency of dilations, so introduction of medical therapy should also be a part of this patient\u2019s therapeutic plan. In cases where a stricture can be detected endoscopically, barium swallow esophagram is not warranted for confirmatory purposes; however, it may be offered as a non-invasive alternative if available, especially in pediatric cases."
              },
              {
                id: "Ivan-PCP-q7",
                questionText:
                  "Following endoscopy and dilation, what adjustment(s) should be made by Ivan\u2019s gastroenterologist to his drug treatment plan?",
                options: [
                  {
                    id: "A",
                    text: "Continue with current esomeprazole dose/dose frequency and reassess in 8 weeks"
                  },
                  {
                    id: "B",
                    text: "Change esomeprazole dosage from 40 mg once daily to 20 mg twice daily"
                  },
                  {
                    id: "C",
                    text: "Increase esomeprazole dosage from 40 mg once daily to 40 mg twice daily"
                  },
                  {
                    id: "D",
                    text: "Continue current esomeprazole dose/dose frequency; add budesonide oral suspension 4 mg/d, divided twice daily"
                  }
                ],
                correctAnswer: "D",
                rationale:
                  "Based on Ivan\u2019s current symptoms, modification to his current treatment regimen is warranted. Adding a trial of swallowed topical corticosteroid such as budesonide oral suspension to Ivan\u2019s current PPI, followed by re-evaluation in 8-12 weeks, is the most suitable option at this time given his discussion about wanting to avoid dietary changes. According to the 2025 ACG Guidelines, a single anti-inflammatory agent should be prescribed (either PPIs or STCs) as there is a lack of data on the effectiveness of combined therapies. However, in patients like Ivan who have concomitant reflux symptoms and some level of response to a PPI, this may be continued. Dupilumab injections would be another possible consideration at this time."
              },
              {
                id: "Ivan-PCP-q8",
                questionText:
                  "At his 12-week follow-up endoscopy after initiation of BOS, Ivan\u2019s histologic indicators have not improved (high eosinophils on biopsy and unchanged mucosal features on endoscopy), and he agrees with his gastroenterologist to shift to treatment with dupilumab. Before he begins on his new treatment plan, he calls you to ask about potential adverse events related to dupilumab. Which of the following would you emphasize as being most likely to occur?",
                options: [
                  { id: "A", text: "Gastritis" },
                  { id: "B", text: "Oropharyngeal pain" },
                  { id: "C", text: "Arthralgia" },
                  { id: "D", text: "Immunosuppression" }
                ],
                correctAnswer: "C",
                rationale:
                  "The most commonly reported adverse reactions in patients treated with dupilumab for EoE (incidence \u22652%) are arthralgia, injection site reactions, upper respiratory tract infections, and herpes viral infections. Gastritis, oropharyngeal pain, and myalgia are not reported at this incidence for EoE patients; however, they are noted as occurring in \u22652% of patients treated with dupilumab for other indications so should still be on a clinician\u2019s radar. Because dupilumab is not an immunosuppressant, broad immunosuppression is not a common issue associated with the medication."
              }
            ]
          }
        },
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "modal",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.modal
      },
      {
        path: "q1Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "q2Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "q3Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "q4Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "refOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "activeQuestionId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "isQuestionOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "room",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.room
      },
      {
        path: "computer.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanPcp42.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanPcp2.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanPcp3.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanPcp4.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharesePcp1.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharesePcp2.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharesePcp3.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharesePcp4.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "kelvinPcp1.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "kelvinPcp2.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "kelvinPcp3.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "kelvinPcp4.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanBed.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese1.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese2.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese3.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "diagram.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese4.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "bookshelf.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "bed.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "computer.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanPcp42.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanPcp2.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanPcp3.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanPcp4.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharesePcp1.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharesePcp2.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharesePcp3.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharesePcp4.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "kelvinPcp1.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "kelvinPcp2.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "kelvinPcp3.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "kelvinPcp4.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanBed.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese1.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese2.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese3.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "diagram.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese4.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "bookshelf.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "bed.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "kelvinFinal",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return (
                {
                  1: "kelvinDoorOne",
                  2: "kelvinDoorTwo",
                  3: "kelvinDoorThree",
                  4: "kelvinDoorFour"
                }[$state.kelvinStep] || "kelvinDoorOne"
              );
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })() ?? $props.kelvinFinal
      },
      {
        path: "kelvinStep",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 1
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.root,
        {
          [sty.rootkelvinFinal_kelvinDoorFour]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorFour"
          ),
          [sty.rootkelvinFinal_kelvinDoorOne]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorOne"
          ),
          [sty.rootkelvinFinal_kelvinDoorThree]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorThree"
          ),
          [sty.rootkelvinFinal_kelvinDoorTwo]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorTwo"
          ),
          [sty.rootmodal_ivanDoor]: hasVariant($state, "modal", "ivanDoor"),
          [sty.rootmodal_ivanPcp2]: hasVariant($state, "modal", "ivanPcp2"),
          [sty.rootmodal_ivanPcp3]: hasVariant($state, "modal", "ivanPcp3"),
          [sty.rootmodal_ivanPcp42]: hasVariant($state, "modal", "ivanPcp42"),
          [sty.rootmodal_kelvinPcp1]: hasVariant($state, "modal", "kelvinPcp1"),
          [sty.rootmodal_kelvinPcp2]: hasVariant($state, "modal", "kelvinPcp2"),
          [sty.rootmodal_kelvinPcp3]: hasVariant($state, "modal", "kelvinPcp3"),
          [sty.rootmodal_kelvinPcp4]: hasVariant($state, "modal", "kelvinPcp4"),
          [sty.rootmodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.rootmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
          [sty.rootmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.rootmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
          [sty.rootmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
          [sty.rootmodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
          [sty.rootmodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
          [sty.rootmodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
          [sty.rootmodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
          [sty.rootmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
          [sty.rootmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
          [sty.rootmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
          [sty.rootmodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
          [sty.rootmodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.rootmodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.rootmodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.rootmodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.rootmodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          ),
          [sty.rootroom_ivan]: hasVariant($state, "room", "ivan"),
          [sty.rootroom_kelvin]: hasVariant($state, "room", "kelvin"),
          [sty.rootroom_sharese]: hasVariant($state, "room", "sharese")
        }
      )}
    >
      <div
        data-plasmic-name={"roomPlan"}
        data-plasmic-override={overrides.roomPlan}
        className={classNames(projectcss.all, sty.roomPlan, {
          [sty.roomPlankelvinFinal_kelvinDoorFour]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorFour"
          ),
          [sty.roomPlankelvinFinal_kelvinDoorOne]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorOne"
          ),
          [sty.roomPlankelvinFinal_kelvinDoorThree]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorThree"
          ),
          [sty.roomPlankelvinFinal_kelvinDoorTwo]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorTwo"
          ),
          [sty.roomPlanmodal_ivanDoor]: hasVariant($state, "modal", "ivanDoor"),
          [sty.roomPlanmodal_ivanPcp2]: hasVariant($state, "modal", "ivanPcp2"),
          [sty.roomPlanmodal_ivanPcp3]: hasVariant($state, "modal", "ivanPcp3"),
          [sty.roomPlanmodal_ivanPcp42]: hasVariant(
            $state,
            "modal",
            "ivanPcp42"
          ),
          [sty.roomPlanmodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.roomPlanmodal_kelvinPcp3]: hasVariant(
            $state,
            "modal",
            "kelvinPcp3"
          ),
          [sty.roomPlanmodal_kelvinPcp4]: hasVariant(
            $state,
            "modal",
            "kelvinPcp4"
          ),
          [sty.roomPlanmodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.roomPlanmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.roomPlanmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
          [sty.roomPlanmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
          [sty.roomPlanmodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
          [sty.roomPlanmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
          [sty.roomPlanmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
          [sty.roomPlanmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
          [sty.roomPlanmodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
          [sty.roomPlanmodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.roomPlanmodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.roomPlanmodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.roomPlanmodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.roomPlanmodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          )
        })}
      >
        <div
          className={classNames(projectcss.all, sty.freeBox__wSdKy, {
            [sty.freeBoxkelvinFinal_kelvinDoorFour__wSdKyttTwu]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorFour"
            ),
            [sty.freeBoxkelvinFinal_kelvinDoorOne__wSdKy8FMxe]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorOne"
            ),
            [sty.freeBoxkelvinFinal_kelvinDoorThree__wSdKyfeDsf]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorThree"
            ),
            [sty.freeBoxkelvinFinal_kelvinDoorTwo__wSdKyUHd]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorTwo"
            ),
            [sty.freeBoxmodal_kelvinPcp1__wSdKyh2RA4]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            )
          })}
        >
          <RoomMap
            data-plasmic-name={"roomMap"}
            data-plasmic-override={overrides.roomMap}
            active={
              hasVariant($state, "room", "ivan")
                ? "_3"
                : hasVariant($state, "room", "sharese")
                  ? "_2"
                  : undefined
            }
            className={classNames("__wab_instance", sty.roomMap, {
              [sty.roomMaproom_ivan]: hasVariant($state, "room", "ivan"),
              [sty.roomMaproom_sharese]: hasVariant($state, "room", "sharese")
            })}
            onClickRoom={async event => {
              const $steps = {};

              $steps["updateRoom"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "room",
                      operation: 0,
                      value: "kelvin"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateRoom"] != null &&
                typeof $steps["updateRoom"] === "object" &&
                typeof $steps["updateRoom"].then === "function"
              ) {
                $steps["updateRoom"] = await $steps["updateRoom"];
              }
            }}
            onClickRoomTopLeft={async event => {
              const $steps = {};

              $steps["updateQ1Answer"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["q1Answer"]
                      },
                      operation: 0
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateQ1Answer"] != null &&
                typeof $steps["updateQ1Answer"] === "object" &&
                typeof $steps["updateQ1Answer"].then === "function"
              ) {
                $steps["updateQ1Answer"] = await $steps["updateQ1Answer"];
              }
            }}
            onClickRoomTopMiddle={async event => {
              const $steps = {};

              $steps["updateRoom"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "room",
                      operation: 0,
                      value: "sharese"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateRoom"] != null &&
                typeof $steps["updateRoom"] === "object" &&
                typeof $steps["updateRoom"].then === "function"
              ) {
                $steps["updateRoom"] = await $steps["updateRoom"];
              }
            }}
            onClickRoomTopRight={async event => {
              const $steps = {};

              $steps["updateRoom"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "room",
                      operation: 0,
                      value: "ivan"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateRoom"] != null &&
                typeof $steps["updateRoom"] === "object" &&
                typeof $steps["updateRoom"].then === "function"
              ) {
                $steps["updateRoom"] = await $steps["updateRoom"];
              }
            }}
          />
        </div>
      </div>
      <div
        data-plasmic-name={"roomScene"}
        data-plasmic-override={overrides.roomScene}
        className={classNames(projectcss.all, sty.roomScene, {
          [sty.roomScenekelvinFinal_kelvinDoorFour]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorFour"
          ),
          [sty.roomScenekelvinFinal_kelvinDoorOne]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorOne"
          ),
          [sty.roomScenekelvinFinal_kelvinDoorThree]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorThree"
          ),
          [sty.roomScenekelvinFinal_kelvinDoorTwo]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorTwo"
          ),
          [sty.roomScenemodal_ivanDoor]: hasVariant(
            $state,
            "modal",
            "ivanDoor"
          ),
          [sty.roomScenemodal_ivanPcp2]: hasVariant(
            $state,
            "modal",
            "ivanPcp2"
          ),
          [sty.roomScenemodal_ivanPcp3]: hasVariant(
            $state,
            "modal",
            "ivanPcp3"
          ),
          [sty.roomScenemodal_ivanPcp42]: hasVariant(
            $state,
            "modal",
            "ivanPcp42"
          ),
          [sty.roomScenemodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.roomScenemodal_kelvinPcp2]: hasVariant(
            $state,
            "modal",
            "kelvinPcp2"
          ),
          [sty.roomScenemodal_kelvinPcp3]: hasVariant(
            $state,
            "modal",
            "kelvinPcp3"
          ),
          [sty.roomScenemodal_kelvinPcp4]: hasVariant(
            $state,
            "modal",
            "kelvinPcp4"
          ),
          [sty.roomScenemodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.roomScenemodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
          [sty.roomScenemodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.roomScenemodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
          [sty.roomScenemodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
          [sty.roomScenemodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
          [sty.roomScenemodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
          [sty.roomScenemodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
          [sty.roomScenemodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
          [sty.roomScenemodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
          [sty.roomScenemodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
          [sty.roomScenemodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
          [sty.roomScenemodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
          [sty.roomScenemodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.roomScenemodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.roomScenemodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.roomScenemodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.roomScenemodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          )
        })}
      >
        <div
          data-plasmic-name={"kelvinTitleBanner"}
          data-plasmic-override={overrides.kelvinTitleBanner}
          className={classNames(projectcss.all, sty.kelvinTitleBanner, {
            [sty.kelvinTitleBannermodal_lamp]: hasVariant(
              $state,
              "modal",
              "lamp"
            ),
            [sty.kelvinTitleBannermodal_rm1Hs1]: hasVariant(
              $state,
              "modal",
              "rm1Hs1"
            ),
            [sty.kelvinTitleBannermodal_rm1Hs2]: hasVariant(
              $state,
              "modal",
              "rm1Hs2"
            ),
            [sty.kelvinTitleBannermodal_rm2Hs1]: hasVariant(
              $state,
              "modal",
              "rm2Hs1"
            )
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__q26Ct, {
              [sty.freeBoxmodal_lamp__q26CThjhM3]: hasVariant(
                $state,
                "modal",
                "lamp"
              ),
              [sty.freeBoxmodal_rm2Hs1__q26CTcjkeU]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              )
            })}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qq1TN,
                {
                  [sty.textmodal_ivanDoor__qq1TNao3U]: hasVariant(
                    $state,
                    "modal",
                    "ivanDoor"
                  ),
                  [sty.textmodal_rm2Hs4__qq1TNYsxLc]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs4"
                  ),
                  [sty.textmodal_rm3Hs1__qq1TNXadiq]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs1"
                  ),
                  [sty.textmodal_rm3Hs2__qq1TNjLsEv]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  )
                }
              )}
            >
              {hasVariant($state, "modal", "rm3Hs2")
                ? "Ivan's Exam Room"
                : hasVariant($state, "modal", "rm3Hs1")
                  ? "Ivan's Exam Room"
                  : "Kelvin's Exam Room"}
            </div>
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__g6BSf, {
              [sty.freeBoxmodal_rm2Hs1__g6BSfcjkeU]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              )
            })}
          />
        </div>
        <div
          data-plasmic-name={"kelvinPcp"}
          data-plasmic-override={overrides.kelvinPcp}
          className={classNames(projectcss.all, sty.kelvinPcp, {
            [sty.kelvinPcpkelvinFinal_kelvinDoorFour]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorFour"
            ),
            [sty.kelvinPcpkelvinFinal_kelvinDoorOne]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorOne"
            ),
            [sty.kelvinPcpkelvinFinal_kelvinDoorThree]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorThree"
            ),
            [sty.kelvinPcpkelvinFinal_kelvinDoorTwo]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorTwo"
            ),
            [sty.kelvinPcpmodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.kelvinPcpmodal_ivanPcp2]: hasVariant(
              $state,
              "modal",
              "ivanPcp2"
            ),
            [sty.kelvinPcpmodal_ivanPcp3]: hasVariant(
              $state,
              "modal",
              "ivanPcp3"
            ),
            [sty.kelvinPcpmodal_ivanPcp42]: hasVariant(
              $state,
              "modal",
              "ivanPcp42"
            ),
            [sty.kelvinPcpmodal_kelvinPcp1]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            ),
            [sty.kelvinPcpmodal_kelvinPcp2]: hasVariant(
              $state,
              "modal",
              "kelvinPcp2"
            ),
            [sty.kelvinPcpmodal_kelvinPcp3]: hasVariant(
              $state,
              "modal",
              "kelvinPcp3"
            ),
            [sty.kelvinPcpmodal_kelvinPcp4]: hasVariant(
              $state,
              "modal",
              "kelvinPcp4"
            ),
            [sty.kelvinPcpmodal_lamp]: hasVariant($state, "modal", "lamp"),
            [sty.kelvinPcpmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
            [sty.kelvinPcpmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
            [sty.kelvinPcpmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
            [sty.kelvinPcpmodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
            [sty.kelvinPcpmodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
            [sty.kelvinPcpmodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
            [sty.kelvinPcpmodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
            [sty.kelvinPcpmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
            [sty.kelvinPcpmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
            [sty.kelvinPcpmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
            [sty.kelvinPcpmodal_shareseDoor]: hasVariant(
              $state,
              "modal",
              "shareseDoor"
            ),
            [sty.kelvinPcpmodal_sharesePcp2]: hasVariant(
              $state,
              "modal",
              "sharesePcp2"
            ),
            [sty.kelvinPcpmodal_sharesePcp3]: hasVariant(
              $state,
              "modal",
              "sharesePcp3"
            ),
            [sty.kelvinPcpmodal_sharesePcp4]: hasVariant(
              $state,
              "modal",
              "sharesePcp4"
            ),
            [sty.kelvinPcproom_ivan]: hasVariant($state, "room", "ivan"),
            [sty.kelvinPcproom_sharese]: hasVariant($state, "room", "sharese")
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox___2HBe, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour___2HBettTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne___2HBe8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree___2HBefeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo___2HBeUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.freeBoxmodal_lamp___2HBehjhM3]: hasVariant(
                $state,
                "modal",
                "lamp"
              ),
              [sty.freeBoxmodal_rm2Hs1___2HBecjkeU]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm1Hs1"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__yVthU)}
              questionId={(() => {
                try {
                  return $props.questions.questions[0].id;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"bookshelf6"}
            data-plasmic-override={overrides.bookshelf6}
            className={classNames(projectcss.all, sty.bookshelf6)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__vEpiu)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"303px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/bookshelfKelvinPcpSvg.svg",
                fullWidth: 409,
                fullHeight: 304,
                aspectRatio: 1.345395
              }}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__nqrhN, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour__nqrhNttTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne__nqrhN8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree__nqrhNfeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo__nqrhNUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm1Hs2"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }

              $steps["updateActiveQuestionId"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["activeQuestionId"]
                      },
                      operation: 0,
                      value: $props.questions.questions[0].id
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateActiveQuestionId"] != null &&
                typeof $steps["updateActiveQuestionId"] === "object" &&
                typeof $steps["updateActiveQuestionId"].then === "function"
              ) {
                $steps["updateActiveQuestionId"] =
                  await $steps["updateActiveQuestionId"];
              }

              $steps["updateIsQuestionOpen"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["isQuestionOpen"]
                      },
                      operation: 0,
                      value: true
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateIsQuestionOpen"] != null &&
                typeof $steps["updateIsQuestionOpen"] === "object" &&
                typeof $steps["updateIsQuestionOpen"].then === "function"
              ) {
                $steps["updateIsQuestionOpen"] =
                  await $steps["updateIsQuestionOpen"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__hf4Fz)}
              questionId={(() => {
                try {
                  return $props.questions.questions[1].id;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              size={"_50Px"}
            />
          </div>
          <InstructionBanner
            className={classNames(
              "__wab_instance",
              sty.instructionBanner__xbAil,
              {
                [sty.instructionBannermodal_lamp__xbAiLhjhM3]: hasVariant(
                  $state,
                  "modal",
                  "lamp"
                )
              }
            )}
          />

          <div
            className={classNames(projectcss.all, sty.freeBox__xXuzF, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour__xXuzFttTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne__xXuzF8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree__xXuzFfeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo__xXuzFUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateKelvinFinal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "kelvinFinal",
                      operation: 0,
                      value: "kelvinDoorOne"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateKelvinFinal"] != null &&
                typeof $steps["updateKelvinFinal"] === "object" &&
                typeof $steps["updateKelvinFinal"].then === "function"
              ) {
                $steps["updateKelvinFinal"] = await $steps["updateKelvinFinal"];
              }
            }}
          >
            <Hotspot
              data-plasmic-name={"kf"}
              data-plasmic-override={overrides.kf}
              className={classNames("__wab_instance", sty.kf)}
              locked={true}
              questionId={"kelvin-final"}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox___2Q5Rw, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour___2Q5RWttTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne___2Q5Rw8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree___2Q5RWfeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo___2Q5RwUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm1Hs4"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__qywxv, {
                [sty.hotspotkelvinFinal_kelvinDoorFour__qywxvttTwu]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorFour"
                ),
                [sty.hotspotkelvinFinal_kelvinDoorOne__qywxv8FMxe]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorOne"
                ),
                [sty.hotspotkelvinFinal_kelvinDoorThree__qywxvfeDsf]:
                  hasVariant($state, "kelvinFinal", "kelvinDoorThree"),
                [sty.hotspotkelvinFinal_kelvinDoorTwo__qywxvUHd]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorTwo"
                )
              })}
              questionId={(() => {
                try {
                  return $props.questions.questions[3].id;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox___8Vjct)}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm1Hs3"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot___7Th5Z)}
              questionId={`${$props.questions.questions[2].id} `}
              size={"_50Px"}
            />
          </div>
        </div>
        <div
          data-plasmic-name={"sharesePcp"}
          data-plasmic-override={overrides.sharesePcp}
          className={classNames(projectcss.all, sty.sharesePcp, {
            [sty.sharesePcpkelvinFinal_kelvinDoorFour]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorFour"
            ),
            [sty.sharesePcpkelvinFinal_kelvinDoorOne]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorOne"
            ),
            [sty.sharesePcpkelvinFinal_kelvinDoorThree]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorThree"
            ),
            [sty.sharesePcpkelvinFinal_kelvinDoorTwo]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorTwo"
            ),
            [sty.sharesePcpmodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.sharesePcpmodal_lamp]: hasVariant($state, "modal", "lamp"),
            [sty.sharesePcpmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
            [sty.sharesePcpmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
            [sty.sharesePcpmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
            [sty.sharesePcpmodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
            [sty.sharesePcpmodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
            [sty.sharesePcpmodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
            [sty.sharesePcpmodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
            [sty.sharesePcpmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
            [sty.sharesePcpmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
            [sty.sharesePcpmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
            [sty.sharesePcpmodal_shareseDoor]: hasVariant(
              $state,
              "modal",
              "shareseDoor"
            ),
            [sty.sharesePcpmodal_sharesePcp2]: hasVariant(
              $state,
              "modal",
              "sharesePcp2"
            ),
            [sty.sharesePcpmodal_sharesePcp3]: hasVariant(
              $state,
              "modal",
              "sharesePcp3"
            ),
            [sty.sharesePcpmodal_sharesePcp4]: hasVariant(
              $state,
              "modal",
              "sharesePcp4"
            ),
            [sty.sharesePcproom_sharese]: hasVariant($state, "room", "sharese")
          })}
        >
          <div
            data-plasmic-name={"hotspot42"}
            data-plasmic-override={overrides.hotspot42}
            className={classNames(projectcss.all, sty.hotspot42, {
              [sty.hotspot42kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.hotspot42kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.hotspot42kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.hotspot42kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.hotspot42modal_lamp]: hasVariant($state, "modal", "lamp"),
              [sty.hotspot42modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.hotspot42modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2")
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm2Hs4"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__nZqTt, {
                [sty.hotspotmodal_sharesePcp3__nZqTtFNyn]: hasVariant(
                  $state,
                  "modal",
                  "sharesePcp3"
                )
              })}
              questionId={(() => {
                try {
                  return $props.questions.questions[11].id;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"bookshelf5"}
            data-plasmic-override={overrides.bookshelf5}
            className={classNames(projectcss.all, sty.bookshelf5, {
              [sty.bookshelf5modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.bookshelf5modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.bookshelf5modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.bookshelf5modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              )
            })}
          >
            <PlasmicImg__
              data-plasmic-name={"shareseBookshelf2"}
              data-plasmic-override={overrides.shareseBookshelf2}
              alt={""}
              className={classNames(sty.shareseBookshelf2, {
                [sty.shareseBookshelf2modal_rm2Hs1]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                ),
                [sty.shareseBookshelf2modal_rm2Hs2]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs2"
                ),
                [sty.shareseBookshelf2modal_rm2Hs3]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs3"
                ),
                [sty.shareseBookshelf2modal_rm2Hs4]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs4"
                ),
                [sty.shareseBookshelf2modal_sharesePcp4]: hasVariant(
                  $state,
                  "modal",
                  "sharesePcp4"
                )
              })}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant($state, "modal", "rm2Hs4")
                  ? "303px"
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? "303px"
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? "303px"
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? "303px"
                        : "303px"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image4.svg",
                fullWidth: 409,
                fullHeight: 304,
                aspectRatio: 1.345395
              }}
            />
          </div>
          <div
            data-plasmic-name={"hotspot32"}
            data-plasmic-override={overrides.hotspot32}
            className={classNames(projectcss.all, sty.hotspot32, {
              [sty.hotspot32kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.hotspot32kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.hotspot32kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.hotspot32kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.hotspot32modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1")
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm2Hs3"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__n1A6Z, {
                [sty.hotspotmodal_rm2Hs1__n1A6ZcjkeU]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
              questionId={(() => {
                try {
                  return $props.questions.questions[10].id;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              size={"_50Px"}
            />
          </div>
          <InstructionBanner
            className={classNames(
              "__wab_instance",
              sty.instructionBanner__uYlzx,
              {
                [sty.instructionBannermodal_lamp__uYlzXhjhM3]: hasVariant(
                  $state,
                  "modal",
                  "lamp"
                ),
                [sty.instructionBannermodal_rm2Hs1__uYlzXcjkeU]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              }
            )}
          />

          <div
            className={classNames(projectcss.all, sty.freeBox__dujEt, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour__dujETttTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne__dujEt8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree__dujETfeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo__dujEtUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.freeBoxmodal_rm2Hs1__dujETcjkeU]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__sEKl)}
              locked={true}
              questionId={"sharese-final"}
            />
          </div>
          <div
            data-plasmic-name={"hotspot22"}
            data-plasmic-override={overrides.hotspot22}
            className={classNames(projectcss.all, sty.hotspot22, {
              [sty.hotspot22kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.hotspot22kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.hotspot22kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.hotspot22kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.hotspot22modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1")
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm2Hs2"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__j9Sof, {
                [sty.hotspotkelvinFinal_kelvinDoorFour__j9SofttTwu]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorFour"
                ),
                [sty.hotspotkelvinFinal_kelvinDoorOne__j9Sof8FMxe]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorOne"
                ),
                [sty.hotspotkelvinFinal_kelvinDoorThree__j9SoffeDsf]:
                  hasVariant($state, "kelvinFinal", "kelvinDoorThree"),
                [sty.hotspotkelvinFinal_kelvinDoorTwo__j9SofUHd]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorTwo"
                ),
                [sty.hotspotmodal_rm2Hs1__j9SofcjkeU]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
              questionId={`${$props.questions.questions[9].id}                                                                                                                                                                                                                                                                                              `}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"hotspot12"}
            data-plasmic-override={overrides.hotspot12}
            className={classNames(projectcss.all, sty.hotspot12, {
              [sty.hotspot12modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.hotspot12modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2")
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm2Hs1"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__pVlmd, {
                [sty.hotspotmodal_rm2Hs1__pVlmDcjkeU]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
              questionId={(() => {
                try {
                  return $props.questions.questions[8].id;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              size={"_50Px"}
            />
          </div>
        </div>
        <div
          data-plasmic-name={"ivanPcp"}
          data-plasmic-override={overrides.ivanPcp}
          className={classNames(projectcss.all, sty.ivanPcp, {
            [sty.ivanPcpkelvinFinal_kelvinDoorFour]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorFour"
            ),
            [sty.ivanPcpkelvinFinal_kelvinDoorOne]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorOne"
            ),
            [sty.ivanPcpkelvinFinal_kelvinDoorThree]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorThree"
            ),
            [sty.ivanPcpkelvinFinal_kelvinDoorTwo]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorTwo"
            ),
            [sty.ivanPcpmodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.ivanPcpmodal_ivanPcp42]: hasVariant(
              $state,
              "modal",
              "ivanPcp42"
            ),
            [sty.ivanPcpmodal_lamp]: hasVariant($state, "modal", "lamp"),
            [sty.ivanPcpmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
            [sty.ivanPcpmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
            [sty.ivanPcpmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
            [sty.ivanPcpmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
            [sty.ivanPcpmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
            [sty.ivanPcpmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
            [sty.ivanPcpmodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
            [sty.ivanPcproom_ivan]: hasVariant($state, "room", "ivan")
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__nns8K, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour__nns8KttTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne__nns8K8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree__nns8KfeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo__nns8KUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm1Hs2"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot___6FqGc)}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__h8Mcx, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour__h8McxttTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne__h8Mcx8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree__h8McxfeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo__h8McxUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm3Hs1"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__sc3B5)}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"bookshelf7"}
            data-plasmic-override={overrides.bookshelf7}
            className={classNames(projectcss.all, sty.bookshelf7)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___8CsPu)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"330px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/bookshelfIvanPcpSvg.svg",
                fullWidth: 409,
                fullHeight: 304,
                aspectRatio: 1.345395
              }}
            />
          </div>
          <InstructionBanner
            className={classNames(
              "__wab_instance",
              sty.instructionBanner__bfzba,
              {
                [sty.instructionBannermodal_lamp__bfzbahjhM3]: hasVariant(
                  $state,
                  "modal",
                  "lamp"
                )
              }
            )}
          />

          <div
            className={classNames(projectcss.all, sty.freeBox__ko0P6, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour__ko0P6TtTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne__ko0P68FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree__ko0P6FeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo__ko0P6UHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm3Hs3"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__bgvq9, {
                [sty.hotspotkelvinFinal_kelvinDoorFour__bgvq9TtTwu]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorFour"
                ),
                [sty.hotspotkelvinFinal_kelvinDoorOne__bgvq98FMxe]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorOne"
                ),
                [sty.hotspotkelvinFinal_kelvinDoorThree__bgvq9FeDsf]:
                  hasVariant($state, "kelvinFinal", "kelvinDoorThree"),
                [sty.hotspotkelvinFinal_kelvinDoorTwo__bgvq9UHd]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorTwo"
                )
              })}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox___5Plv0)}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "rm3Hs2"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__yUTqr)}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox___3X8KW, {
              [sty.freeBoxkelvinFinal_kelvinDoorFour___3X8KWttTwu]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorOne___3X8KW8FMxe]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorThree___3X8KWfeDsf]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.freeBoxkelvinFinal_kelvinDoorTwo___3X8KWUHd]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            onClick={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "ivanDoor"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__iGXkS)}
              locked={true}
            />
          </div>
        </div>
      </div>
      {(
        hasVariant($state, "modal", "rm3Hs4")
          ? true
          : hasVariant($state, "modal", "rm3Hs2")
            ? true
            : hasVariant($state, "modal", "rm1Hs4")
              ? true
              : hasVariant($state, "modal", "rm1Hs3")
                ? true
                : hasVariant($state, "modal", "rm1Hs2")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? true
                    : (() => {
                        try {
                          return true;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return true;
                          }
                          throw e;
                        }
                      })()
      ) ? (
        <ReferencePanel
          data-plasmic-name={"referencePanel"}
          data-plasmic-override={overrides.referencePanel}
          className={classNames("__wab_instance", sty.referencePanel, {
            [sty.referencePanelmodal_lamp]: hasVariant($state, "modal", "lamp"),
            [sty.referencePanelmodal_rm1Hs1]: hasVariant(
              $state,
              "modal",
              "rm1Hs1"
            ),
            [sty.referencePanelmodal_rm1Hs2]: hasVariant(
              $state,
              "modal",
              "rm1Hs2"
            ),
            [sty.referencePanelmodal_rm1Hs3]: hasVariant(
              $state,
              "modal",
              "rm1Hs3"
            ),
            [sty.referencePanelmodal_rm1Hs4]: hasVariant(
              $state,
              "modal",
              "rm1Hs4"
            ),
            [sty.referencePanelmodal_rm3Hs2]: hasVariant(
              $state,
              "modal",
              "rm3Hs2"
            ),
            [sty.referencePanelmodal_rm3Hs3]: hasVariant(
              $state,
              "modal",
              "rm3Hs3"
            ),
            [sty.referencePanelmodal_rm3Hs4]: hasVariant(
              $state,
              "modal",
              "rm3Hs4"
            )
          })}
          modal={
            hasVariant($state, "modal", "rm1Hs1") ? "kelvinComputer" : undefined
          }
          refOpen={$state.refOpen}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__wtheB,
              {
                [sty.textkelvinFinal_kelvinDoorFour__wtheBttTwu]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorFour"
                ),
                [sty.textkelvinFinal_kelvinDoorOne__wtheB8FMxe]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorOne"
                ),
                [sty.textkelvinFinal_kelvinDoorThree__wtheBfeDsf]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorThree"
                ),
                [sty.textkelvinFinal_kelvinDoorTwo__wtheBUHd]: hasVariant(
                  $state,
                  "kelvinFinal",
                  "kelvinDoorTwo"
                ),
                [sty.textmodal_ivanDoor__wtheBao3U]: hasVariant(
                  $state,
                  "modal",
                  "ivanDoor"
                ),
                [sty.textmodal_rm1Hs1__wtheBAmduI]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                ),
                [sty.textmodal_rm1Hs2__wtheBzqLiy]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs2"
                ),
                [sty.textmodal_rm1Hs3__wtheB2GBx0]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs3"
                ),
                [sty.textmodal_rm1Hs4__wtheBeiGL]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs4"
                ),
                [sty.textmodal_rm2Hs1__wtheBcjkeU]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                ),
                [sty.textmodal_rm2Hs2__wtheBfqRuS]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs2"
                ),
                [sty.textmodal_rm2Hs3__wtheBlsBpn]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs3"
                ),
                [sty.textmodal_rm2Hs4__wtheBYsxLc]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs4"
                ),
                [sty.textmodal_rm3Hs1__wtheBXadiq]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs1"
                ),
                [sty.textmodal_rm3Hs2__wtheBjLsEv]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs2"
                ),
                [sty.textmodal_rm3Hs3__wtheBRaFia]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs3"
                ),
                [sty.textmodal_rm3Hs4__wtheB5ZaAc]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs4"
                ),
                [sty.textmodal_shareseDoor__wtheBf6Qgf]: hasVariant(
                  $state,
                  "modal",
                  "shareseDoor"
                )
              }
            )}
          >
            {hasVariant($state, "modal", "rm3Hs4") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Gomez-Torrijos E, Garcia-Rodriguez R, Castro-Jimenez A, et al. The efficacy of step-down therapy in adult patients with proton pump inhibitor-responsive oesophageal eosinophilia.\r "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Aliment Pharmacol Ther. "}
                </span>
                <React.Fragment>
                  {
                    "2016;43(4):534\u201340.\r\nGutierrez-Junquera C, Fernandez-Fernandez S, Cilleruelo ML, et al. High prevalence of response to proton-pump inhibitor treatment in children with esophageal eosinophilia. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Pediatr\rGastroenterol Nutr. "}
                </span>
                <React.Fragment>
                  {
                    "2016;62(5):704\u201310.\r\nLaserna-Mendieta EJ, Casabona S, Guagnozzi D, et al. Efficacy of proton pump inhibitor therapy for eosinophilic oesophagitis in 630 patients: Results from the EoE Connect registry.\r "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Aliment Pharmacol Ther. "}
                </span>
                <React.Fragment>
                  {
                    "2020; 52(5):798\u2013807.\r\nLucendo AJ, Arias \u00c1, Molina-Infante J. Efficacy of proton pump inhibitor drugs for inducing clinical and histologic remission in patients with symptomatic esophageal eosinophilia: A\rsystematic review and meta-analysis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Gastroenterol Hepatol. "}
                </span>
                <React.Fragment>{"2016;14(1):13-22.e1."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm3Hs3") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Capucilli P, Hill DA. Allergic comorbidity in eosinophilic esophagitis: mechanistic relevance and clinical implications."
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {" Clin Rev Allergy Immunol."}
                </span>
                <React.Fragment>
                  {
                    " 2019;57(1):111-127.\r\nDellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>
                  {
                    "2025;120(1):31.\r\nHill DA, Grundmeier RW, Ramos M, Spergel JM. Eosinophilic Esophagitis Is a Late Manifestation of the Allergic March. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Clin Immunol Pract."}
                </span>
                <React.Fragment>
                  {
                    " 2018;6(5):1528-1533.\r\nOliva S, McGowan EC. Associations of eosinophilic gastrointestinal disorders with other gastrointestinal and allergic diseases. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Immunol Allergy Clin North Am."}
                </span>
                <React.Fragment>{" 2024;44(2):329-348."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm3Hs2") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Capucilli P, Hill DA. Allergic comorbidity in eosinophilic esophagitis: mechanistic relevance and clinical implications. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Rev Allergy Immunol. "}
                </span>
                <React.Fragment>
                  {
                    "2019;57(1):111-127.\n\rGonsalves NP, Aceves SS. Diagnosis and treatment of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Clin Immunol. "}
                </span>
                <React.Fragment>
                  {
                    "2020;145(1):1-7.\r\nOliva S, McGowan EC. Associations of eosinophilic gastrointestinal disorders with other gastrointestinal and allergic diseases. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Immunology and Allergy Clinics."}
                </span>
                <React.Fragment>{" 2024;44(2):329-348."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm3Hs1") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Cheng E, Zhang X, HuoX, et al. Omeprazole blocks eotaxin-3 expression by oesophageal squamous cells from patients with eosinophilic oesophagitis and GORD. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gut. "}
                </span>
                <React.Fragment>
                  {
                    "2013;62(6):824\u201332.\r\nDellon ES, Liacouras CA, Molina-Infante J, et al. Updated international consensus diagnostic criteria for eosinophilic esophagitis: Proceedings of the AGREE Conference. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology.\r"}
                </span>
                <React.Fragment>
                  {
                    " 2018;155(4):1022-1033.e10.\rDellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>
                  {
                    "2025;120(1):31.\r\nMolina-Infante J, Bredenoord AJ, Cheng E, et al. Proton pump inhibitor-responsive oesophageal eosinophilia: An entity challenging current diagnostic criteria for eosinophilic\r oesophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gut. "}
                </span>
                <React.Fragment>
                  {
                    "2016;65(3):524\u201331.\r\nZhang X, Cheng E, Huo X, et al. Omeprazole blocks STAT6 binding to the eotaxin-3 promoter in eosinophilic esophagitis cells. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"PLoS One."}
                </span>
                <React.Fragment>{" 2012;7(11):e50037."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs4") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Dellon ES, Cotton CC, Gebhart JH, et al. Accuracy of the eosinophilic esophagitis endoscopic reference score in diagnosis and determining response to treatment. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Gastroenterol \rHepatol."}
                </span>
                <React.Fragment>
                  {
                    " 2016;14(1):31-39.\r\nGupta M, Grinman M. Diagnosis and management of eosinophilic esophagitis. CMAJ. 2024;196(4):E121-E128.\n\rHirano I, Moy N, Heckman MG, Thomas CS, Gonsalves N, Achem SR. Endoscopic assessment of the oesophageal features of eosinophilic oesophagitis: validation of a novel classification\rand grading system. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gut. "}
                </span>
                <React.Fragment>
                  {
                    "2013;62(4):489-495.\r\nWechsler JB, Bolton SM, Amsden K, Wershil BK, Hirano I, Kagalwalla AF. Eosinophilic esophagitis reference score accurately identifies disease activity and treatment effects in children.\r "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Gastroenterol Hepatol. "}
                </span>
                <React.Fragment>{"2018;16(7):1056-1063."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs3") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "EOHILIA (budesonide oral suspension) product label. Available at www.accessdata.fda.gov/drugsatfda_docs/label/2024/213976s000lbl.pdf. Accessed September 3, 2025.\r\nHirano I, Collins MH, Katzka DA, Mukkada VA, Falk GW, Morey R, et al; ORBIT1/SHP621-301 Investigators. Budesonide oral suspension improves outcomes in patients with eosinophilic \resophagitis: Results from a Phase 3 trial. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Gastroenterol Hepatol. "}
                </span>
                <React.Fragment>{"2021:S1542-3565(21)00456-0."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs2") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Chehade M, McGowan EC, Wright BL, et al. Barriers to timely diagnosis of eosinophilic gastrointestinal diseases. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Clin Immunol Pract."}
                </span>
                <React.Fragment>
                  {
                    " 2024;12(2):302\u20138.\r\nDellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol."}
                </span>
                <React.Fragment>
                  {
                    " 2025;120(1):31.\r\nFuruta GT, Katzka DA. Eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"N Engl J Med. "}
                </span>
                <React.Fragment>
                  {
                    "2015;373(17):1640-1648.\r\nFuruta GT, Liacouras CA, Collins MH, et al. Eosinophilic esophagitis in children and adults: A systematic review and consensus recommendations for diagnosis and treatment.\r "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology. "}
                </span>
                <React.Fragment>{"2007;133(4):1342-1363."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs1") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Peterson K, Firszt R, Fang J, Wong J, Smith KR, Brady KA. Risk of autoimmunity in EoE and families: A population-based cohort study. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol."}
                </span>
                <React.Fragment>
                  {
                    " 2016;111(7):926-932.\n\rXue Z, Miller TL, Abramson L, et al. Association of eosinophilic esophagitis with autoimmune and connective tissue disorders, and the impact on treatment response. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Dis Esophagus"}
                </span>
                <React.Fragment>{".\r 2022;36(1):doac043."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs4") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Aceves SS. Food allergy testing in eosinophilic esophagitis: What the gastroenterologist needs to know. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Gastroenterol Hepatol. "}
                </span>
                <React.Fragment>
                  {
                    "2014;12(8):1216-1223.\n\rCapucilli P, Hill DA. Allergic comorbidity in eosinophilic esophagitis: mechanistic relevance and clinical implications. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Rev Allergy Immunol. "}
                </span>
                <React.Fragment>
                  {
                    "2019;57(1):111-127.\r\nMayerhofer C, Kavallar AM, Aldrian D, Lindner AK, Mu\u0308ller T, Vogel GF. Efficacy of elimination diets in eosinophilic esophagitis: a systematic review and meta-analysis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Gastroenterol \rHepatol. "}
                </span>
                <React.Fragment>{"2023;21(9):2197-2210.e3."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs3") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Chehade M, Dellon E, Spergel J, et al. Dupilumab improves histologic and endoscopic outcomes in children aged 1 to <12 years with eosinophilic esophagitis (EoE): 52-week results from\r the Phase 3 EoE KIDS Trial. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Immunol."}
                </span>
                <React.Fragment>
                  {
                    " 2024;156(2):SAB266.\r\nDellon ES, Peterson KA, Mitlyng BL, et al. Mepolizumab for treatment of adolescents and adults with eosinophilic oesophagitis: a multicentre, randomised, double-blind,\rplacebo-controlled clinical trial. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gut."}
                </span>
                <React.Fragment>
                  {
                    " 2023;72(10):1828-1837.\n\rDellon ES, Rothenberg ME, Collins MH, et al. Dupilumab in adults and adolescents with eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"N Engl J Med. "}
                </span>
                <React.Fragment>
                  {
                    "2022;387(25):2317-2330.\r\nDellon ES, Spergel JM. Biologics in eosinophilic gastrointestinal diseases. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Ann Allergy Asthma Immunol. "}
                </span>
                <React.Fragment>{"2023;130(1):21-27."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs2") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Dellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol."}
                </span>
                <React.Fragment>
                  {
                    " 2025;120(1):31.\r\nErdle SC, Carr S, Chan ES, Robertson K, Watson W. Eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Allergy Asthma Clin Immunol. "}
                </span>
                <React.Fragment>
                  {
                    "2024;20(S3):72.\r\nFuruta GT, Liacouras CA, Collins MH, et al. Eosinophilic esophagitis in children and adults: A systematic review and consensus recommendations for diagnosis and treatment.\r"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology. "}
                </span>
                <React.Fragment>{"2007;133(4):1342-1363."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs1") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Dellon ES, Hirano I. Epidemiology and natural history of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology"}
                </span>
                <React.Fragment>
                  {
                    ". 2018;154(2):319-332.e3.\r\nJensen ET, Kappelman MD, Kim HP, Ringel-Kulka T, Dellon ES. Early life exposures as risk factors for pediatric eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Pediatr Gastroenterol Nutr."}
                </span>
                <React.Fragment>
                  {
                    " 2013;57:67\u201371.\r\nKapel RC, Miller JK, Torres C, Aksoy S, Lash R, Katzka DA. Eosinophilic esophagitis: a prevalent disease in the United States that affects all age groups. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology. "}
                </span>
                <React.Fragment>
                  {
                    "2008;134:1316\u201321.\r\nvan Nimwegen FA, Penders J, Stobberingh EE, et al. Mode and place of delivery, gastrointestinal microbiota, and their influence on asthma and atopy. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Clin Immunol."}
                </span>
                <React.Fragment>
                  {" 2011;128(5):\r948.e3\u201355.e3."}
                </React.Fragment>
              </React.Fragment>
            ) : (
              "Enter some text"
            )}
          </div>
        </ReferencePanel>
      ) : null}
      <div
        data-plasmic-name={"questionContainer"}
        data-plasmic-override={overrides.questionContainer}
        className={classNames(projectcss.all, sty.questionContainer, {
          [sty.questionContainerkelvinFinal_kelvinDoorFour]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorFour"
          ),
          [sty.questionContainerkelvinFinal_kelvinDoorOne]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorOne"
          ),
          [sty.questionContainerkelvinFinal_kelvinDoorThree]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorThree"
          ),
          [sty.questionContainerkelvinFinal_kelvinDoorTwo]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorTwo"
          ),
          [sty.questionContainermodal_ivanPcp3]: hasVariant(
            $state,
            "modal",
            "ivanPcp3"
          ),
          [sty.questionContainermodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.questionContainermodal_rm1Hs1]: hasVariant(
            $state,
            "modal",
            "rm1Hs1"
          ),
          [sty.questionContainermodal_rm1Hs2]: hasVariant(
            $state,
            "modal",
            "rm1Hs2"
          ),
          [sty.questionContainermodal_rm1Hs4]: hasVariant(
            $state,
            "modal",
            "rm1Hs4"
          ),
          [sty.questionContainermodal_rm2Hs1]: hasVariant(
            $state,
            "modal",
            "rm2Hs1"
          ),
          [sty.questionContainermodal_rm3Hs2]: hasVariant(
            $state,
            "modal",
            "rm3Hs2"
          ),
          [sty.questionContainermodal_rm3Hs4]: hasVariant(
            $state,
            "modal",
            "rm3Hs4"
          ),
          [sty.questionContainermodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.questionContainermodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.questionContainermodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          )
        })}
      >
        <QuestionModal
          data-plasmic-name={"computer"}
          data-plasmic-override={overrides.computer}
          active={
            hasVariant($state, "kelvinFinal", "kelvinDoorOne")
              ? true
              : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs4")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs2")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs1")
                            ? true
                            : undefined
          }
          answerA={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[0].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          answerB={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[1].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          answerC={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[2].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          answerD={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[3].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[3].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          className={classNames("__wab_instance", sty.computer, {
            [sty.computerkelvinFinal_kelvinDoorFour]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorFour"
            ),
            [sty.computerkelvinFinal_kelvinDoorOne]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorOne"
            ),
            [sty.computerkelvinFinal_kelvinDoorThree]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorThree"
            ),
            [sty.computerkelvinFinal_kelvinDoorTwo]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorTwo"
            ),
            [sty.computermodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.computermodal_kelvinPcp1]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            ),
            [sty.computermodal_lamp]: hasVariant($state, "modal", "lamp"),
            [sty.computermodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
            [sty.computermodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
            [sty.computermodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
            [sty.computermodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
            [sty.computermodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
            [sty.computermodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
            [sty.computermodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
            [sty.computermodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
            [sty.computermodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
            [sty.computermodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
            [sty.computermodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
            [sty.computermodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4")
          })}
          correctAnswer={
            hasVariant($state, "modal", "rm1Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[0].correctAnswer;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : undefined
          }
          correctReasoning={null}
          correctReasoning2={
            <div
              className={classNames(projectcss.all, sty.freeBox__zy0Sp, {
                [sty.freeBoxmodal_rm1Hs1__zy0SpAmduI]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                ),
                [sty.freeBoxmodal_rm3Hs2__zy0SpjLsEv]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs2"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__qtjo, {
                  [sty.freeBoxmodal_rm1Hs1__qtjoAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm3Hs2__qtjoJLsEv]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bWaj,
                    {
                      [sty.textmodal_rm1Hs1__bWajAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2__bWajjLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {"Correct answer: B"}
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__flP9W, {
                  [sty.freeBoxmodal_rm1Hs1__flP9WAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm3Hs2__flP9WJLsEv]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mEet,
                    {
                      [sty.textmodal_rm1Hs1__mEetAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2__mEetjLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {
                    "Studies have found that these factors have a higher risk of developing EoE:"
                  }
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__qkGxV, {
                  [sty.freeBoxmodal_rm1Hs1__qkGxVAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___5GwBj, {
                    [sty.freeBoxmodal_rm1Hs1___5GwBjAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wkDz8, {
                      [sty.freeBoxmodal_rm1Hs1__wkDz8AmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__eLwX, {
                        [sty.imgmodal_rm1Hs1__eLwXAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"15%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/bornPrematureoyOrViaCSectionSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zyDur,
                        {
                          [sty.textmodal_rm1Hs1__zyDurAmduI]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs1"
                          )
                        }
                      )}
                    >
                      {"Individuals born prematurely\r or via C-section"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2Kak, {
                      [sty.freeBoxmodal_rm1Hs1___2KakAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__p7ZYs, {
                        [sty.imgmodal_rm1Hs1__p7ZYsAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"15%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/infantsWhoReceivedAntibioticsSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__seno9,
                        {
                          [sty.textmodal_rm1Hs1__seno9AmduI]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs1"
                          )
                        }
                      )}
                    >
                      {"Infants who received antibiotic"}
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__vaEv, {
                    [sty.freeBoxmodal_rm1Hs1__vaEvAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yhjm, {
                      [sty.freeBoxmodal_rm1Hs1__yhjmAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___1Fl4C, {
                        [sty.imgmodal_rm1Hs1___1Fl4CAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"15%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/thoseNotExclusivelyBreastfedSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__i8Xx3,
                        {
                          [sty.textmodal_rm1Hs1__i8Xx3AmduI]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs1"
                          )
                        }
                      )}
                    >
                      {"Those not\r exclusively breastfed"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wii3J,
                  {
                    [sty.textmodal_rm1Hs1__wii3JAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  }
                )}
              >
                {
                  "These factors are also believed to contribute to the development of other \rconditions that are part of the \u201callergic march\u201d, including allergies, asthma, \rand eczema."
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4OaUn,
                  {
                    [sty.textmodal_rm1Hs1___4OaUnAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  }
                )}
              >
                {"Why are the other answers incorrect?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ewes8,
                  {
                    [sty.textmodal_rm1Hs1__ewes8AmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  }
                )}
              >
                {
                  "Males are three times more likely to be diagnosed with EoE than females.\r Smoking and an unbalanced diet have not been shown to increase an \rindividual\u2019s risk of developing EoE."
                }
              </div>
            </div>
          }
          incorrectReasoning={null}
          incorrectReasoning2={
            <WrongAnswer
              className={classNames("__wab_instance", sty.wrongAnswer__o2Tr0, {
                [sty.wrongAnswermodal_rm1Hs1__o2Tr0AmduI]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                ),
                [sty.wrongAnswermodal_rm3Hs2__o2Tr0JLsEv]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs2"
                )
              })}
              modal={
                hasVariant($state, "modal", "rm1Hs1") ? "rm1Hs1" : undefined
              }
            />
          }
          isSelected={generateStateValueProp($state, [
            "computer",
            "isSelected"
          ])}
          onClickClose={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onClickSubmit={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onIsSelectedChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["computer", "isSelected"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          onStepChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["computer", "step"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          question={
            hasVariant($state, "modal", "ivanDoor")
              ? `${$props.questions.questions[19].questionText}
`
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[18].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          questionId={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[19].id;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[18].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "undefined";
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          questions={
            hasVariant($state, "modal", "rm1Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[0];
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              : undefined
          }
        />

        {(
          hasVariant($state, "modal", "ivanPcp42")
            ? true
            : hasVariant($state, "modal", "kelvinPcp1")
              ? true
              : hasVariant($state, "modal", "rm3Hs3")
                ? true
                : hasVariant($state, "modal", "rm3Hs1")
                  ? true
                  : hasVariant($state, "modal", "shareseDoor")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs2")
                                ? true
                                : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanPcp42"}
            data-plasmic-override={overrides.ivanPcp42}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm3Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs4")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs1")
                                ? true
                                : undefined
            }
            answerA={
              hasVariant($state, "modal", "ivanPcp42")
                ? (() => {
                    try {
                      return $props.questions.questions[40].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[18].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerB={
              hasVariant($state, "modal", "ivanPcp42")
                ? (() => {
                    try {
                      return $props.questions.questions[40].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[18].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerC={
              hasVariant($state, "modal", "ivanPcp42")
                ? (() => {
                    try {
                      return $props.questions.questions[40].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[18].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerD={
              hasVariant($state, "modal", "ivanPcp42")
                ? (() => {
                    try {
                      return $props.questions.questions[40].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[18].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            className={classNames("__wab_instance", sty.ivanPcp42, {
              [sty.ivanPcp42kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.ivanPcp42kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.ivanPcp42kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.ivanPcp42kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.ivanPcp42modal_ivanPcp2]: hasVariant(
                $state,
                "modal",
                "ivanPcp2"
              ),
              [sty.ivanPcp42modal_ivanPcp42]: hasVariant(
                $state,
                "modal",
                "ivanPcp42"
              ),
              [sty.ivanPcp42modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.ivanPcp42modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.ivanPcp42modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.ivanPcp42modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.ivanPcp42modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.ivanPcp42modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.ivanPcp42modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.ivanPcp42modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.ivanPcp42modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.ivanPcp42modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.ivanPcp42modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.ivanPcp42modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.ivanPcp42modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.ivanPcp42modal_rm3Hs3]: hasVariant(
                $state,
                "modal",
                "rm3Hs3"
              ),
              [sty.ivanPcp42modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.ivanPcp42modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__x5QIt, {
                  [sty.freeBoxmodal_rm1Hs1__x5QItAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__x5QItzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__x5QIt2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__x5QIteiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  ),
                  [sty.freeBoxmodal_rm2Hs4__x5QItYsxLc]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs4"
                  ),
                  [sty.freeBoxmodal_rm3Hs2__x5QItJLsEv]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  ),
                  [sty.freeBoxmodal_rm3Hs3__x5QItRaFia]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs3"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__evOZp, {
                    [sty.freeBoxmodal_rm1Hs1__evOZpAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    ),
                    [sty.freeBoxmodal_rm3Hs2__evOZpJLsEv]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dFzy,
                      {
                        [sty.textmodal_rm1Hs1__dFzyAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        ),
                        [sty.textmodal_rm3Hs2__dFzyJLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__dFzyRaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3")
                      ? "Correct answer: A"
                      : hasVariant($state, "modal", "rm3Hs2")
                        ? "Correct answer: D"
                        : "Correct answer: C"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__n4GLt, {
                    [sty.freeBoxmodal_rm1Hs4__n4GLTeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eTu3E,
                      {
                        [sty.textmodal_rm1Hs4__eTu3EeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__eTu3EjLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__eTu3ERaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {"According the studies, "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"60-80% of individuals with EoE"}
                        </span>
                        <React.Fragment>
                          {
                            " also suffer \rfrom various allergic conditions, including:"
                          }
                        </React.Fragment>
                      </React.Fragment>
                    ) : hasVariant($state, "modal", "rm3Hs2") ? (
                      "Dysphagia is a hallmark symptom of EoE and is also frequently \rexperienced by GERD patients, especially if the reflux leads to either of\rthe following:"
                    ) : (
                      "Key features of EoE that are typically found upon endoscopy include \rthe following, commonly abbreviated as EREFS:"
                    )}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__pAvgD, {
                    [sty.freeBoxmodal_rm1Hs4__pAvgDeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    ),
                    [sty.freeBoxmodal_rm3Hs2__pAvgDjLsEv]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    ),
                    [sty.freeBoxmodal_rm3Hs3__pAvgDRaFia]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs3"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uUeJr,
                      {
                        [sty.textmodal_rm1Hs4__uUeJreiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__uUeJrJLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__uUeJrRaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3") ? (
                      "\u2022 Seasonal allergies\r\n\u2022 Asthma"
                    ) : hasVariant($state, "modal", "rm3Hs2") ? (
                      "\u2022 Inflammation\r\n\u2022 Narrowing of the esophagus"
                    ) : (
                      <React.Fragment>
                        <React.Fragment>{"\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"E"}
                        </span>
                        <React.Fragment>{"dema\r\n\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"R"}
                        </span>
                        <React.Fragment>{"ings\r\n\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"E"}
                        </span>
                        <React.Fragment>{"xudates"}</React.Fragment>
                      </React.Fragment>
                    )}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rDc56,
                      {
                        [sty.textmodal_rm1Hs4__rDc56EiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__rDc56JLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__rDc56RaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3") ? (
                      "\u2022 Eczema\n\r\u2022 Food allergies"
                    ) : hasVariant($state, "modal", "rm3Hs2") ? (
                      "\u2022 Inflammation\r\n\u2022 Narrowing of the esophagus"
                    ) : (
                      <React.Fragment>
                        <React.Fragment>{"\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"E"}
                        </span>
                        <React.Fragment>{"dema\r\n\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"R"}
                        </span>
                        <React.Fragment>{"ings\r\n\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"E"}
                        </span>
                        <React.Fragment>{"xudates"}</React.Fragment>
                      </React.Fragment>
                    )}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nikdr,
                    {
                      [sty.textmodal_rm1Hs4__nikdReiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      ),
                      [sty.textmodal_rm3Hs2__nikdrjLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      ),
                      [sty.textmodal_rm3Hs3__nikdrRaFia]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs3"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "modal", "rm3Hs3")
                    ? "EoE is a feature of the allergic (or atopic) march, which describes the\r typical progression of allergic conditions that starts in childhood and\rintensifies over time."
                    : "A scoring system of severity known as the EREFS Index is often used \rby gastroenterologists to assess severity of disease."}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dBq3R,
                    {
                      [sty.textmodal_rm1Hs1__dBq3RAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2__dBq3RJLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zV8G,
                    {
                      [sty.textmodal_rm1Hs1__zV8GAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2__zV8GjLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      ),
                      [sty.textmodal_rm3Hs3__zV8GRaFia]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs3"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "modal", "rm3Hs3")
                    ? "Irritable bowel syndrome, type 1 diabetes, and obesity are not\r associated with EoE."
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? "Other clinical presentations listed here, including erosive esophagitis or\rhiatal hernia, indicate a likely diagnosis of GERD but are not commonly seen\rin patients with EoE."
                      : "Gastric erosions and dysplasia may be indicators of other\rconditions such as GERD and Barrett\u2019s esophagus but are not\rindicative of a diagnosis of EoE. Patients with EoE will not have\rnormal-appearing mucosa.z"}
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__u8Zno,
                  {
                    [sty.wrongAnswermodal_rm3Hs3__u8ZnoRaFia]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs3"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "ivanPcp42",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanPcp42",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["ivanPcp42", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "ivanPcp42")
                ? (() => {
                    try {
                      return $props.questions.questions[40].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[18].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            questionId={
              hasVariant($state, "modal", "ivanPcp42")
                ? (() => {
                    try {
                      return $props.questions.questions[40].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[18].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return "undefined";
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "ivanPcp2")
            ? true
            : hasVariant($state, "modal", "ivanPcp42")
              ? true
              : hasVariant($state, "modal", "kelvinPcp1")
                ? true
                : hasVariant($state, "modal", "rm3Hs2")
                  ? true
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? true
                    : hasVariant($state, "modal", "shareseDoor")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? true
                                : hasVariant($state, "modal", "rm1Hs2")
                                  ? true
                                  : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanPcp2"}
            data-plasmic-override={overrides.ivanPcp2}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm3Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs4")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs1")
                                ? true
                                : undefined
            }
            answerA={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp42")
                  ? (() => {
                      try {
                        return $props.questions.questions[40].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[17].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[0].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerB={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp42")
                  ? (() => {
                      try {
                        return $props.questions.questions[40].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[17].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[1].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerC={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp42")
                  ? (() => {
                      try {
                        return $props.questions.questions[40].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[17].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[2].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerD={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp42")
                  ? (() => {
                      try {
                        return $props.questions.questions[40].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[3].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            className={classNames("__wab_instance", sty.ivanPcp2, {
              [sty.ivanPcp2kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.ivanPcp2kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.ivanPcp2kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.ivanPcp2kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.ivanPcp2modal_ivanPcp2]: hasVariant(
                $state,
                "modal",
                "ivanPcp2"
              ),
              [sty.ivanPcp2modal_ivanPcp3]: hasVariant(
                $state,
                "modal",
                "ivanPcp3"
              ),
              [sty.ivanPcp2modal_ivanPcp42]: hasVariant(
                $state,
                "modal",
                "ivanPcp42"
              ),
              [sty.ivanPcp2modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.ivanPcp2modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.ivanPcp2modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.ivanPcp2modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.ivanPcp2modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.ivanPcp2modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.ivanPcp2modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.ivanPcp2modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.ivanPcp2modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.ivanPcp2modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.ivanPcp2modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.ivanPcp2modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.ivanPcp2modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
              [sty.ivanPcp2modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.ivanPcp2modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__iCczK, {
                  [sty.freeBoxmodal_rm1Hs1__iCczKAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__iCczKzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__iCczK2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__iCczKeiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  ),
                  [sty.freeBoxmodal_rm2Hs4__iCczKYsxLc]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs4"
                  ),
                  [sty.freeBoxmodal_rm3Hs2__iCczKjLsEv]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__w89Cz, {
                    [sty.freeBoxmodal_rm1Hs1__w89CzAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    ),
                    [sty.freeBoxmodal_rm3Hs2__w89CzjLsEv]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__djvVw,
                      {
                        [sty.textmodal_rm1Hs1__djvVwAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        ),
                        [sty.textmodal_rm3Hs2__djvVwJLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs2")
                      ? "Correct answer: D"
                      : "Correct answer: C"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__iaeCl, {
                    [sty.freeBoxmodal_rm1Hs4__iaeCleiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eLi1X,
                      {
                        [sty.textmodal_rm1Hs4__eLi1XeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__eLi1XjLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs2")
                      ? "Dysphagia is a hallmark symptom of EoE and is also frequently \rexperienced by GERD patients, especially if the reflux leads to either of\rthe following:"
                      : "Key features of EoE that are typically found upon endoscopy include \rthe following, commonly abbreviated as EREFS:"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ycdsj, {
                    [sty.freeBoxmodal_rm1Hs4__ycdsjeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    ),
                    [sty.freeBoxmodal_rm3Hs2__ycdsjJLsEv]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n8TWr,
                      {
                        [sty.textmodal_rm1Hs4__n8TWReiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__n8TWrjLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs2") ? (
                      "\u2022 Inflammation\r\n\u2022 Narrowing of the esophagus"
                    ) : (
                      <React.Fragment>
                        <React.Fragment>{"\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"E"}
                        </span>
                        <React.Fragment>{"dema\r\n\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"R"}
                        </span>
                        <React.Fragment>{"ings\r\n\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"E"}
                        </span>
                        <React.Fragment>{"xudates"}</React.Fragment>
                      </React.Fragment>
                    )}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__liil1,
                    {
                      [sty.textmodal_rm1Hs4__liil1EiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      ),
                      [sty.textmodal_rm3Hs2__liil1JLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {
                    "A scoring system of severity known as the EREFS Index is often used \rby gastroenterologists to assess severity of disease."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1Lyyw,
                    {
                      [sty.textmodal_rm1Hs1___1LyywAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2___1LyywJLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aJvGv,
                    {
                      [sty.textmodal_rm1Hs1__aJvGvAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2__aJvGvJLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "modal", "rm3Hs2")
                    ? "Other clinical presentations listed here, including erosive esophagitis or\rhiatal hernia, indicate a likely diagnosis of GERD but are not commonly seen\rin patients with EoE."
                    : "Gastric erosions and dysplasia may be indicators of other\rconditions such as GERD and Barrett\u2019s esophagus but are not\rindicative of a diagnosis of EoE. Patients with EoE will not have\rnormal-appearing mucosa.z"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__th6NN,
                    {
                      [sty.textmodal_rm3Hs2__th6NNjLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {
                    "Alternately, there is no underlying allergic mechanism present in GERD\rpatients; however, seasonal allergies are considered part of the \u201callergic\r(or atopic) march\u201d commonly seen in patients with EoE."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__fQriC,
                  {
                    [sty.wrongAnswermodal_rm3Hs2__fQriCjLsEv]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "ivanPcp2",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanPcp2",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["ivanPcp2", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp42")
                  ? (() => {
                      try {
                        return $props.questions.questions[40].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[17].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .questionText;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questionId={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp42")
                  ? (() => {
                      try {
                        return $props.questions.questions[40].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[17].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .id;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "undefined";
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "ivanPcp3")
            ? true
            : hasVariant($state, "modal", "ivanPcp2")
              ? true
              : hasVariant($state, "modal", "ivanPcp42")
                ? true
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? true
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? true
                    : hasVariant($state, "modal", "shareseDoor")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? true
                                : hasVariant($state, "modal", "rm1Hs2")
                                  ? true
                                  : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanPcp3"}
            data-plasmic-override={overrides.ivanPcp3}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[0].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerB={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[1].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerC={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[2].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerD={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[3].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            className={classNames("__wab_instance", sty.ivanPcp3, {
              [sty.ivanPcp3kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.ivanPcp3kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.ivanPcp3kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.ivanPcp3kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.ivanPcp3modal_ivanPcp2]: hasVariant(
                $state,
                "modal",
                "ivanPcp2"
              ),
              [sty.ivanPcp3modal_ivanPcp3]: hasVariant(
                $state,
                "modal",
                "ivanPcp3"
              ),
              [sty.ivanPcp3modal_ivanPcp42]: hasVariant(
                $state,
                "modal",
                "ivanPcp42"
              ),
              [sty.ivanPcp3modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.ivanPcp3modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.ivanPcp3modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.ivanPcp3modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.ivanPcp3modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.ivanPcp3modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.ivanPcp3modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.ivanPcp3modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.ivanPcp3modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.ivanPcp3modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.ivanPcp3modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.ivanPcp3modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.ivanPcp3modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
              [sty.ivanPcp3modal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
              [sty.ivanPcp3modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.ivanPcp3modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "ivanPcp3",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanPcp3",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["ivanPcp3", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .questionText;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questionId={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .id;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "undefined";
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "ivanPcp3")
            ? true
            : hasVariant($state, "modal", "ivanPcp2")
              ? true
              : hasVariant($state, "modal", "ivanPcp42")
                ? true
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? true
                  : hasVariant($state, "modal", "rm3Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? true
                      : hasVariant($state, "modal", "shareseDoor")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? true
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? true
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? true
                                  : hasVariant($state, "modal", "rm1Hs2")
                                    ? true
                                    : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanPcp4"}
            data-plasmic-override={overrides.ivanPcp4}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm3Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs4")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs1")
                                ? true
                                : undefined
            }
            answerA={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[19].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm3Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[16].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "shareseDoor")
                            ? (() => {
                                try {
                                  return $props.questions.questions[32]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs4")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[11]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[10]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs2")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[9]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm2Hs1")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[8]
                                            .options[0].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : hasVariant($state, "modal", "rm1Hs3")
                                      ? (() => {
                                          try {
                                            return $props.questions.questions[2]
                                              .options[0].text;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return undefined;
                                            }
                                            throw e;
                                          }
                                        })()
                                      : undefined
            }
            answerB={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[19].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm3Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[16].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "shareseDoor")
                            ? (() => {
                                try {
                                  return $props.questions.questions[32]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs4")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[11]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[10]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs2")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[9]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm2Hs1")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[8]
                                            .options[1].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : hasVariant($state, "modal", "rm1Hs3")
                                      ? (() => {
                                          try {
                                            return $props.questions.questions[2]
                                              .options[1].text;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return undefined;
                                            }
                                            throw e;
                                          }
                                        })()
                                      : undefined
            }
            answerC={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[19].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm3Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[16].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "shareseDoor")
                            ? (() => {
                                try {
                                  return $props.questions.questions[32]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs4")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[11]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[10]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs2")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[9]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm2Hs1")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[8]
                                            .options[2].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : hasVariant($state, "modal", "rm1Hs3")
                                      ? (() => {
                                          try {
                                            return $props.questions.questions[2]
                                              .options[2].text;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return undefined;
                                            }
                                            throw e;
                                          }
                                        })()
                                      : undefined
            }
            answerD={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[19].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm3Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[16].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "shareseDoor")
                            ? (() => {
                                try {
                                  return $props.questions.questions[32]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs4")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[11]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[10]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs2")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[9]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm2Hs1")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[8]
                                            .options[3].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : hasVariant($state, "modal", "rm1Hs3")
                                      ? (() => {
                                          try {
                                            return $props.questions.questions[2]
                                              .options[3].text;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return undefined;
                                            }
                                            throw e;
                                          }
                                        })()
                                      : undefined
            }
            className={classNames("__wab_instance", sty.ivanPcp4, {
              [sty.ivanPcp4kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.ivanPcp4kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.ivanPcp4kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.ivanPcp4kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.ivanPcp4modal_ivanPcp2]: hasVariant(
                $state,
                "modal",
                "ivanPcp2"
              ),
              [sty.ivanPcp4modal_ivanPcp3]: hasVariant(
                $state,
                "modal",
                "ivanPcp3"
              ),
              [sty.ivanPcp4modal_ivanPcp42]: hasVariant(
                $state,
                "modal",
                "ivanPcp42"
              ),
              [sty.ivanPcp4modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.ivanPcp4modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.ivanPcp4modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.ivanPcp4modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.ivanPcp4modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.ivanPcp4modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.ivanPcp4modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.ivanPcp4modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.ivanPcp4modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.ivanPcp4modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.ivanPcp4modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.ivanPcp4modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.ivanPcp4modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
              [sty.ivanPcp4modal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
              [sty.ivanPcp4modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.ivanPcp4modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__qliVs, {
                  [sty.freeBoxmodal_rm1Hs1__qliVsAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__qliVszqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__qliVs2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__qliVseiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  ),
                  [sty.freeBoxmodal_rm2Hs4__qliVsYsxLc]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs4"
                  ),
                  [sty.freeBoxmodal_rm3Hs2__qliVsJLsEv]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  ),
                  [sty.freeBoxmodal_rm3Hs3__qliVsRaFia]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs3"
                  ),
                  [sty.freeBoxmodal_rm3Hs4__qliVs5ZaAc]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs4"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__kyHoH, {
                    [sty.freeBoxmodal_rm1Hs1__kyHoHAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    ),
                    [sty.freeBoxmodal_rm3Hs2__kyHoHjLsEv]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kpg6J,
                      {
                        [sty.textmodal_rm1Hs1__kpg6JAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        ),
                        [sty.textmodal_rm3Hs2__kpg6JJLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__kpg6JRaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3")
                      ? "Correct answer: A"
                      : hasVariant($state, "modal", "rm3Hs2")
                        ? "Correct answer: D"
                        : "Correct answer: D"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__mco7K, {
                    [sty.freeBoxmodal_rm1Hs4__mco7KeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zMd9,
                      {
                        [sty.textmodal_rm1Hs4__zMd9EiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__zMd9JLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__zMd9RaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {"According the studies, "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"60-80% of individuals with EoE"}
                        </span>
                        <React.Fragment>
                          {
                            " also suffer \rfrom various allergic conditions, including:"
                          }
                        </React.Fragment>
                      </React.Fragment>
                    ) : hasVariant($state, "modal", "rm3Hs2") ? (
                      "Dysphagia is a hallmark symptom of EoE and is also frequently \rexperienced by GERD patients, especially if the reflux leads to either of\rthe following:"
                    ) : (
                      "PPIs work to treat EoE by blocking the chemical signals that summon\reosinophils to the esophagus, thereby reducing inflammation. The\racid-suppressive actions of PPIs also support healing of the\resophageal lining."
                    )}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sM4Oy,
                    {
                      [sty.textmodal_rm3Hs4__sM4Oy5ZaAc]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    }
                  )}
                >
                  {"Studies show that use of PPIs result in:"}
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ywsAb, {
                    [sty.freeBoxmodal_rm1Hs4__ywsABeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    ),
                    [sty.freeBoxmodal_rm3Hs2__ywsAbjLsEv]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    ),
                    [sty.freeBoxmodal_rm3Hs3__ywsAbRaFia]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs3"
                    )
                  })}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__sqMhb, {
                      [sty.imgmodal_rm3Hs4__sqMhb5ZaAc]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"10%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/_50RemissionSvg.svg",
                      fullWidth: 70.18,
                      fullHeight: 70.18,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v32Ge,
                      {
                        [sty.textmodal_rm1Hs4__v32GEeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__v32GejLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__v32GeRaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3")
                      ? "\u2022 Seasonal allergies\r\n\u2022 Asthma"
                      : hasVariant($state, "modal", "rm3Hs2")
                        ? "\u2022 Inflammation\r\n\u2022 Narrowing of the esophagus"
                        : "Remission of EoE\rin approximately \r50% of patients"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__q67Zs, {
                      [sty.imgmodal_rm3Hs4__q67Zs5ZaAc]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"10%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/_7085MaintainedResponseSvg.svg",
                      fullWidth: 70.29,
                      fullHeight: 70.18,
                      aspectRatio: 1.001567
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xzHhl,
                      {
                        [sty.textmodal_rm1Hs4__xzHhLeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm3Hs2__xzHhljLsEv]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__xzHhlRaFia]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3")
                      ? "\u2022 Eczema\n\r\u2022 Food allergies"
                      : hasVariant($state, "modal", "rm3Hs2")
                        ? "\u2022 Inflammation\r\n\u2022 Narrowing of the esophagus"
                        : "Several studies show\rmaintained response in\r 70-85% of patients after 1 year"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Tvrh,
                    {
                      [sty.textmodal_rm1Hs1___2TvrhAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2___2TvrhjLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cPlyv,
                    {
                      [sty.textmodal_rm1Hs1__cPlyvAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.textmodal_rm3Hs2__cPlyvjLsEv]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      ),
                      [sty.textmodal_rm3Hs3__cPlyvRaFia]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs3"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "modal", "rm3Hs3")
                    ? "Irritable bowel syndrome, type 1 diabetes, and obesity are not\r associated with EoE."
                    : hasVariant($state, "modal", "rm3Hs2")
                      ? "Other clinical presentations listed here, including erosive esophagitis or\rhiatal hernia, indicate a likely diagnosis of GERD but are not commonly seen\rin patients with EoE."
                      : "A PPI trial is no longer recommended to diagnose EoE. PPIs are \rconsidered a first-line treatment and may be used before or after a\r dietary elimination trial based on patient preference."}
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__woTga,
                  {
                    [sty.wrongAnswermodal_rm3Hs4__woTga5ZaAc]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs4"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "ivanPcp4",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanPcp4",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["ivanPcp4", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[19]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm3Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[16]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "shareseDoor")
                            ? (() => {
                                try {
                                  return $props.questions.questions[32]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs4")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[11]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[10]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs2")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[9]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm2Hs1")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[8]
                                            .questionText;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : hasVariant($state, "modal", "rm1Hs3")
                                      ? (() => {
                                          try {
                                            return $props.questions.questions[2]
                                              .questionText;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return undefined;
                                            }
                                            throw e;
                                          }
                                        })()
                                      : undefined
            }
            questionId={
              hasVariant($state, "modal", "ivanPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[42].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "ivanPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[41].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "ivanPcp42")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[19].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm3Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[16].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "shareseDoor")
                            ? (() => {
                                try {
                                  return $props.questions.questions[32].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs4")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[11].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[10].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs2")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[9].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm2Hs1")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[8]
                                            .id;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : hasVariant($state, "modal", "rm1Hs3")
                                      ? (() => {
                                          try {
                                            return $props.questions.questions[2]
                                              .id;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return "undefined";
                                            }
                                            throw e;
                                          }
                                        })()
                                      : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "kelvinPcp1")
            ? true
            : hasVariant($state, "modal", "rm3Hs1")
              ? true
              : hasVariant($state, "modal", "shareseDoor")
                ? true
                : hasVariant($state, "modal", "rm2Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharesePcp1"}
            data-plasmic-override={overrides.sharesePcp1}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "shareseDoor")
                    ? (() => {
                        try {
                          return $props.questions.questions[32].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            answerB={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "shareseDoor")
                    ? (() => {
                        try {
                          return $props.questions.questions[32].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            answerC={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "shareseDoor")
                    ? (() => {
                        try {
                          return $props.questions.questions[32].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            answerD={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "shareseDoor")
                    ? (() => {
                        try {
                          return $props.questions.questions[32].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            className={classNames("__wab_instance", sty.sharesePcp1, {
              [sty.sharesePcp1kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.sharesePcp1kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.sharesePcp1kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.sharesePcp1kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.sharesePcp1modal_ivanPcp42]: hasVariant(
                $state,
                "modal",
                "ivanPcp42"
              ),
              [sty.sharesePcp1modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.sharesePcp1modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.sharesePcp1modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.sharesePcp1modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.sharesePcp1modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.sharesePcp1modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.sharesePcp1modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.sharesePcp1modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.sharesePcp1modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.sharesePcp1modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.sharesePcp1modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.sharesePcp1modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.sharesePcp1modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.sharesePcp1modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.sharesePcp1modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "sharesePcp1",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharesePcp1",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharesePcp1", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "shareseDoor")
                    ? (() => {
                        try {
                          return $props.questions.questions[32].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            questionId={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "shareseDoor")
                    ? (() => {
                        try {
                          return $props.questions.questions[32].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "undefined";
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "sharesePcp2")
            ? true
            : hasVariant($state, "modal", "kelvinPcp1")
              ? true
              : hasVariant($state, "modal", "rm3Hs1")
                ? true
                : hasVariant($state, "modal", "shareseDoor")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharesePcp2"}
            data-plasmic-override={overrides.sharesePcp2}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "sharesePcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[33].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerB={
              hasVariant($state, "modal", "sharesePcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[33].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerC={
              hasVariant($state, "modal", "sharesePcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[33].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerD={
              hasVariant($state, "modal", "sharesePcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[33].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            className={classNames("__wab_instance", sty.sharesePcp2, {
              [sty.sharesePcp2kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.sharesePcp2kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.sharesePcp2kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.sharesePcp2kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.sharesePcp2modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.sharesePcp2modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.sharesePcp2modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.sharesePcp2modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.sharesePcp2modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.sharesePcp2modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.sharesePcp2modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.sharesePcp2modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.sharesePcp2modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.sharesePcp2modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.sharesePcp2modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.sharesePcp2modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.sharesePcp2modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.sharesePcp2modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.sharesePcp2modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              ),
              [sty.sharesePcp2modal_sharesePcp3]: hasVariant(
                $state,
                "modal",
                "sharesePcp3"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "sharesePcp2",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharesePcp2",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharesePcp2", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "sharesePcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[33].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            questionId={
              hasVariant($state, "modal", "sharesePcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[33].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "undefined";
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "sharesePcp3")
            ? true
            : hasVariant($state, "modal", "sharesePcp2")
              ? true
              : hasVariant($state, "modal", "kelvinPcp1")
                ? true
                : hasVariant($state, "modal", "rm3Hs1")
                  ? true
                  : hasVariant($state, "modal", "shareseDoor")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs2")
                                ? true
                                : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharesePcp3"}
            data-plasmic-override={overrides.sharesePcp3}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "sharesePcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[34].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[33].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerB={
              hasVariant($state, "modal", "sharesePcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[34].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[33].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerC={
              hasVariant($state, "modal", "sharesePcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[34].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[33].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerD={
              hasVariant($state, "modal", "sharesePcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[34].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[33].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            className={classNames("__wab_instance", sty.sharesePcp3, {
              [sty.sharesePcp3kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.sharesePcp3kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.sharesePcp3kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.sharesePcp3kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.sharesePcp3modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.sharesePcp3modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.sharesePcp3modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.sharesePcp3modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.sharesePcp3modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.sharesePcp3modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.sharesePcp3modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.sharesePcp3modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.sharesePcp3modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.sharesePcp3modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.sharesePcp3modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.sharesePcp3modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.sharesePcp3modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.sharesePcp3modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.sharesePcp3modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              ),
              [sty.sharesePcp3modal_sharesePcp3]: hasVariant(
                $state,
                "modal",
                "sharesePcp3"
              ),
              [sty.sharesePcp3modal_sharesePcp4]: hasVariant(
                $state,
                "modal",
                "sharesePcp4"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "sharesePcp3",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharesePcp3",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharesePcp3", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "sharesePcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[34].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[33].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            questionId={
              hasVariant($state, "modal", "sharesePcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[34].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[33].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[24].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "shareseDoor")
                        ? (() => {
                            try {
                              return $props.questions.questions[32].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return "undefined";
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "sharesePcp4")
            ? true
            : hasVariant($state, "modal", "sharesePcp3")
              ? true
              : hasVariant($state, "modal", "sharesePcp2")
                ? true
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? true
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? true
                    : hasVariant($state, "modal", "shareseDoor")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? true
                                : hasVariant($state, "modal", "rm1Hs2")
                                  ? true
                                  : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharesePcp4"}
            data-plasmic-override={overrides.sharesePcp4}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "sharesePcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[35].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[34].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "sharesePcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[33].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[0].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerB={
              hasVariant($state, "modal", "sharesePcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[35].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[34].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "sharesePcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[33].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[1].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerC={
              hasVariant($state, "modal", "sharesePcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[35].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[34].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "sharesePcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[33].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[2].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerD={
              hasVariant($state, "modal", "sharesePcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[35].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[34].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "sharesePcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[33].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[3].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            className={classNames("__wab_instance", sty.sharesePcp4, {
              [sty.sharesePcp4kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.sharesePcp4kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.sharesePcp4kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.sharesePcp4kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.sharesePcp4modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.sharesePcp4modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.sharesePcp4modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.sharesePcp4modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.sharesePcp4modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.sharesePcp4modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.sharesePcp4modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.sharesePcp4modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.sharesePcp4modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.sharesePcp4modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.sharesePcp4modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.sharesePcp4modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.sharesePcp4modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.sharesePcp4modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.sharesePcp4modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              ),
              [sty.sharesePcp4modal_sharesePcp3]: hasVariant(
                $state,
                "modal",
                "sharesePcp3"
              ),
              [sty.sharesePcp4modal_sharesePcp4]: hasVariant(
                $state,
                "modal",
                "sharesePcp4"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "sharesePcp4",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharesePcp4",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharesePcp4", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "sharesePcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[35].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[34].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "sharesePcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[33].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .questionText;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questionId={
              hasVariant($state, "modal", "sharesePcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[35].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "sharesePcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[34].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "sharesePcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[33].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[24].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .id;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "undefined";
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "kelvinPcp1")
            ? true
            : hasVariant($state, "modal", "rm3Hs1")
              ? true
              : hasVariant($state, "modal", "shareseDoor")
                ? true
                : hasVariant($state, "modal", "rm2Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"kelvinPcp1"}
            data-plasmic-override={overrides.kelvinPcp1}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[11].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[10].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? (() => {
                            try {
                              return $props.questions.questions[9].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[8].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[2]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : undefined
            }
            answerB={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[11].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[10].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? (() => {
                            try {
                              return $props.questions.questions[9].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[8].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[2]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : undefined
            }
            answerC={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[11].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[10].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? (() => {
                            try {
                              return $props.questions.questions[9].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[8].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[2]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : undefined
            }
            answerD={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[11].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[10].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? (() => {
                            try {
                              return $props.questions.questions[9].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[8].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[2]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : undefined
            }
            className={classNames("__wab_instance", sty.kelvinPcp1, {
              [sty.kelvinPcp1kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.kelvinPcp1kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.kelvinPcp1kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.kelvinPcp1kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.kelvinPcp1modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.kelvinPcp1modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.kelvinPcp1modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.kelvinPcp1modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.kelvinPcp1modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.kelvinPcp1modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.kelvinPcp1modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.kelvinPcp1modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.kelvinPcp1modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.kelvinPcp1modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.kelvinPcp1modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.kelvinPcp1modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.kelvinPcp1modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.kelvinPcp1modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "kelvinPcp1",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "kelvinPcp1",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["kelvinPcp1", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[11].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[10].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? (() => {
                            try {
                              return $props.questions.questions[9].questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[8]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[2]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : undefined
            }
            questionId={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[11].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[10].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? (() => {
                            try {
                              return $props.questions.questions[9].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? (() => {
                              try {
                                return $props.questions.questions[8].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[2].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "undefined";
                                  }
                                  throw e;
                                }
                              })()
                            : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "kelvinPcp2")
            ? true
            : hasVariant($state, "modal", "kelvinPcp1")
              ? true
              : hasVariant($state, "modal", "rm3Hs1")
                ? true
                : hasVariant($state, "modal", "rm2Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"kelvinPcp2"}
            data-plasmic-override={overrides.kelvinPcp2}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "kelvinPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[25].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[0].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            answerB={
              hasVariant($state, "modal", "kelvinPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[25].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[0].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            answerC={
              hasVariant($state, "modal", "kelvinPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[25].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[0].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            answerD={
              hasVariant($state, "modal", "kelvinPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[25].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[0].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            className={classNames("__wab_instance", sty.kelvinPcp2, {
              [sty.kelvinPcp2kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.kelvinPcp2kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.kelvinPcp2kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.kelvinPcp2kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.kelvinPcp2modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.kelvinPcp2modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.kelvinPcp2modal_kelvinPcp3]: hasVariant(
                $state,
                "modal",
                "kelvinPcp3"
              ),
              [sty.kelvinPcp2modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.kelvinPcp2modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.kelvinPcp2modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.kelvinPcp2modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.kelvinPcp2modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.kelvinPcp2modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.kelvinPcp2modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.kelvinPcp2modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.kelvinPcp2modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.kelvinPcp2modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.kelvinPcp2modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "kelvinPcp2",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "kelvinPcp2",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["kelvinPcp2", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "kelvinPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[25].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[0].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            questionId={
              hasVariant($state, "modal", "kelvinPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[25].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[0].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? (() => {
                          try {
                            return $props.questions.questions[11].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? (() => {
                            try {
                              return $props.questions.questions[10].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? (() => {
                              try {
                                return $props.questions.questions[9].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? (() => {
                                try {
                                  return $props.questions.questions[8].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm1Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[2].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "undefined";
                                    }
                                    throw e;
                                  }
                                })()
                              : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "kelvinPcp3")
            ? true
            : hasVariant($state, "modal", "kelvinPcp2")
              ? true
              : hasVariant($state, "modal", "kelvinPcp1")
                ? true
                : hasVariant($state, "modal", "rm3Hs1")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"kelvinPcp3"}
            data-plasmic-override={overrides.kelvinPcp3}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "kelvinPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[26].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerB={
              hasVariant($state, "modal", "kelvinPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[26].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerC={
              hasVariant($state, "modal", "kelvinPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[26].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerD={
              hasVariant($state, "modal", "kelvinPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[26].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            className={classNames("__wab_instance", sty.kelvinPcp3, {
              [sty.kelvinPcp3kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.kelvinPcp3kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.kelvinPcp3kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.kelvinPcp3kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.kelvinPcp3modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.kelvinPcp3modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.kelvinPcp3modal_kelvinPcp3]: hasVariant(
                $state,
                "modal",
                "kelvinPcp3"
              ),
              [sty.kelvinPcp3modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.kelvinPcp3modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.kelvinPcp3modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.kelvinPcp3modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.kelvinPcp3modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.kelvinPcp3modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.kelvinPcp3modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.kelvinPcp3modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.kelvinPcp3modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.kelvinPcp3modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.kelvinPcp3modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "kelvinPcp3",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "kelvinPcp3",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["kelvinPcp3", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "kelvinPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[26].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            questionId={
              hasVariant($state, "modal", "kelvinPcp3")
                ? (() => {
                    try {
                      return $props.questions.questions[26].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp2")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? (() => {
                          try {
                            return $props.questions.questions[16].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "undefined";
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "kelvinPcp4")
            ? true
            : hasVariant($state, "modal", "kelvinPcp3")
              ? true
              : hasVariant($state, "modal", "kelvinPcp2")
                ? true
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? true
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs4")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs2")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs1")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs4")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? true
                                : hasVariant($state, "modal", "rm1Hs2")
                                  ? true
                                  : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"kelvinPcp4"}
            data-plasmic-override={overrides.kelvinPcp4}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "kelvinPcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[27].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[1].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[0].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerB={
              hasVariant($state, "modal", "kelvinPcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[27].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[1].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[0].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerC={
              hasVariant($state, "modal", "kelvinPcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[27].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[1].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[0].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            answerD={
              hasVariant($state, "modal", "kelvinPcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[27].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[1].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[0].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            className={classNames("__wab_instance", sty.kelvinPcp4, {
              [sty.kelvinPcp4kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.kelvinPcp4kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.kelvinPcp4kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.kelvinPcp4kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.kelvinPcp4modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.kelvinPcp4modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.kelvinPcp4modal_kelvinPcp3]: hasVariant(
                $state,
                "modal",
                "kelvinPcp3"
              ),
              [sty.kelvinPcp4modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.kelvinPcp4modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.kelvinPcp4modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.kelvinPcp4modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.kelvinPcp4modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.kelvinPcp4modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.kelvinPcp4modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.kelvinPcp4modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.kelvinPcp4modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.kelvinPcp4modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.kelvinPcp4modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              )
            })}
            isSelected={generateStateValueProp($state, [
              "kelvinPcp4",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "kelvinPcp4",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["kelvinPcp4", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "kelvinPcp4")
                ? (() => {
                    try {
                      return $props.questions.questions[27].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[1].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[0].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            questionId={
              hasVariant($state, "modal", "kelvinPcp4")
                ? ``
                : hasVariant($state, "modal", "kelvinPcp3")
                  ? (() => {
                      try {
                        return $props.questions.questions[1].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "kelvinPcp2")
                    ? (() => {
                        try {
                          return $props.questions.questions[1].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "kelvinPcp1")
                      ? (() => {
                          try {
                            return $props.questions.questions[0].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs4")
                          ? (() => {
                              try {
                                return $props.questions.questions[11].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs3")
                            ? (() => {
                                try {
                                  return $props.questions.questions[10].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs2")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[9].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs1")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[8].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm1Hs3")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[2].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return "undefined";
                                        }
                                        throw e;
                                      }
                                    })()
                                  : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "rm3Hs1")
            ? true
            : hasVariant($state, "modal", "rm1Hs3")
              ? true
              : hasVariant($state, "modal", "rm1Hs2")
                ? true
                : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanBed"}
            data-plasmic-override={overrides.ivanBed}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs4")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs1")
                                ? true
                                : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
            className={classNames("__wab_instance", sty.ivanBed, {
              [sty.ivanBedkelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.ivanBedkelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.ivanBedkelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.ivanBedkelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.ivanBedmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.ivanBedmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.ivanBedmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.ivanBedmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.ivanBedmodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.ivanBedmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.ivanBedmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__ibSe, {
                  [sty.freeBoxmodal_rm1Hs1__ibSeAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__ibSEzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__ibSe2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm3Hs1__ibSeXadiq]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs1"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__oZeLb, {
                    [sty.freeBoxmodal_rm1Hs1__oZeLbAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__obZvc,
                      {
                        [sty.textmodal_rm1Hs1__obZvcAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        ),
                        [sty.textmodal_rm3Hs1__obZvcXadiq]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs1"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs1")
                      ? "Correct answer: A"
                      : "Correct answer: B"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___9Xwek, {
                    [sty.freeBoxmodal_rm1Hs1___9XwekAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    ),
                    [sty.freeBoxmodal_rm3Hs1___9XwekXadiq]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__c84Aq,
                      {
                        [sty.textmodal_rm1Hs1__c84AqAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {
                      "The 2025 ACG guidelines update eliminated \rthe requirement for a PPI trial before\r diagnosing EoE to rule out inflammation\r related to GERD. This change was based on \rextensive data indicating that patients \rresponding to PPIs exhibit similar clinical,\r endoscopic, histological, immunological, and\r molecular characteristics as those with EoE who do not respond \rto PPIs."
                    }
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__uRcFl, {
                      [sty.imgmodal_rm2Hs3__uRcFlLsBpn]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs3"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"30%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/ppiIllustrationSvg.svg",
                      fullWidth: 243.52,
                      fullHeight: 173.83,
                      aspectRatio: 1.400909
                    }}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pzURs,
                    {
                      [sty.textmodal_rm1Hs1__pzURsAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "This suggests that PPIs are an effective treatment for EoE through\rnovel mechanisms and not solely through gastric acid\rsuppression. Furthermore, research shows a complex relationship\rbetween EoE and GERD, and not an independent disease course\ras previously suspected."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__r6Mg3,
                  {
                    [sty.wrongAnswermodal_rm3Hs1__r6Mg3Xadiq]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs1"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "ivanBed",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanBed",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["ivanBed", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "undefined";
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        <QuestionModal
          data-plasmic-name={"sharese1"}
          data-plasmic-override={overrides.sharese1}
          active={
            hasVariant($state, "kelvinFinal", "kelvinDoorOne")
              ? true
              : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs1")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
          }
          answerA={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[0].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          answerB={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[1].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          answerC={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[2].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          answerD={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[3].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          className={classNames("__wab_instance", sty.sharese1, {
            [sty.sharese1kelvinFinal_kelvinDoorFour]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorFour"
            ),
            [sty.sharese1kelvinFinal_kelvinDoorOne]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorOne"
            ),
            [sty.sharese1kelvinFinal_kelvinDoorThree]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorThree"
            ),
            [sty.sharese1kelvinFinal_kelvinDoorTwo]: hasVariant(
              $state,
              "kelvinFinal",
              "kelvinDoorTwo"
            ),
            [sty.sharese1modal_kelvinPcp1]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            ),
            [sty.sharese1modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
            [sty.sharese1modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
            [sty.sharese1modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
            [sty.sharese1modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
            [sty.sharese1modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
            [sty.sharese1modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
            [sty.sharese1modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
            [sty.sharese1modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
            [sty.sharese1modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
            [sty.sharese1modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
            [sty.sharese1modal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4")
          })}
          correctReasoning={
            <div
              className={classNames(projectcss.all, sty.freeBox__gFy1, {
                [sty.freeBoxmodal_rm1Hs1__gFy1AmduI]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                ),
                [sty.freeBoxmodal_rm1Hs2__gFy1ZqLiy]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs2"
                ),
                [sty.freeBoxmodal_rm1Hs3__gFy12GBx0]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs3"
                ),
                [sty.freeBoxmodal_rm1Hs4__gFy1EiGL]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs4"
                ),
                [sty.freeBoxmodal_rm2Hs1__gFy1CjkeU]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__ewuWo, {
                  [sty.freeBoxmodal_rm1Hs1__ewuWoAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zk6Fb,
                    {
                      [sty.textmodal_rm1Hs1__zk6FbAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {"Correct answer: C"}
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__xl17, {
                  [sty.freeBoxmodal_rm1Hs1__xl17AmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zkuJw,
                    {
                      [sty.textmodal_rm1Hs1__zkuJwAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "EoE is commonly associated with autoimmune and connective tissue \rdiseases. According to studies, patients or patients with first-degree \rfamily members diagnosed with these diseases are at increased risk of\rdeveloping EoE:"
                  }
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__sx7ZA, {
                  [sty.freeBoxmodal_rm1Hs4__sx7ZAeiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ubrK7,
                    {
                      [sty.textmodal_rm1Hs4__ubrK7EiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    }
                  )}
                >
                  {
                    "\u2022 Celiac disease\r\n\u2022 Common variable\r immunodeficiency (CVID)\r\n\u2022 Crohn\u2019s disease\n\r\u2022 Hashimoto\u2019s thyroiditis"
                  }
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__rfHf1, {
                    [sty.freeBoxmodal_rm2Hs1__rfHf1CjkeU]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uaQAx,
                      {
                        [sty.textmodal_kelvinPcp1__uaQAxh2RA4]: hasVariant(
                          $state,
                          "modal",
                          "kelvinPcp1"
                        ),
                        [sty.textmodal_rm2Hs1__uaQAxcjkeU]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs1"
                        )
                      }
                    )}
                  >
                    {
                      "\u2022 IgA deficiency\r\n\u2022 Multiple sclerosis\r\n\u2022 Rheumatoid arthritis\n\r\u2022 Ulcerative colitis"
                    }
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6B8C1,
                  {
                    [sty.textmodal_rm1Hs4___6B8C1EiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  }
                )}
              >
                {"CLICK TO SEE:"}
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox___20Zfs, {
                  [sty.freeBoxmodal_rm2Hs1___20ZfscjkeU]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs1"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__yh7EY,
                    {
                      [sty.textmodal_rm2Hs1__yh7EYcjkeU]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs1"
                      )
                    }
                  )}
                >
                  {
                    "Relative risk of specific autoimmune diseases in EoE\rprobands and first-degree relatives (FDRs) of EoE probands"
                  }
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hd0R,
                  {
                    [sty.textmodal_rm1Hs1__hd0RAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  }
                )}
              >
                {"Why are the other answers incorrect?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gGYm,
                  {
                    [sty.textmodal_rm2Hs1__gGYmCjkeU]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs1"
                    )
                  }
                )}
              >
                {
                  "A personal or family history of kidney disease, type 1 diabetes, and\rleukocytosis are not known to increase an individual\u2019s risk of\r developing EoE."
                }
              </div>
            </div>
          }
          incorrectReasoning={
            <WrongAnswer
              className={classNames("__wab_instance", sty.wrongAnswer__d0FrV, {
                [sty.wrongAnswermodal_rm2Hs1__d0FrVcjkeU]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
            />
          }
          isSelected={generateStateValueProp($state, [
            "sharese1",
            "isSelected"
          ])}
          onClickClose={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onClickSubmit={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onIsSelectedChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["sharese1", "isSelected"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          onStepChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["sharese1", "step"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          question={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].questionText;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          questionId={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].id;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "undefined";
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          questions={
            hasVariant($state, "modal", "rm1Hs3")
              ? (() => {
                  try {
                    return $props.questions.questions[2];
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              : undefined
          }
        />

        {(
          hasVariant($state, "modal", "sharesePcp2")
            ? true
            : hasVariant($state, "modal", "rm3Hs1")
              ? true
              : hasVariant($state, "modal", "rm2Hs4")
                ? true
                : hasVariant($state, "modal", "rm2Hs3")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs2")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs1")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs2")
                          ? true
                          : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharese2"}
            data-plasmic-override={overrides.sharese2}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs4")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs1")
                                ? true
                                : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            className={classNames("__wab_instance", sty.sharese2, {
              [sty.sharese2kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.sharese2kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.sharese2kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.sharese2kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.sharese2modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.sharese2modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.sharese2modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.sharese2modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.sharese2modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.sharese2modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.sharese2modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.sharese2modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.sharese2modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.sharese2modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
              [sty.sharese2modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__nKvxa, {
                  [sty.freeBoxmodal_rm1Hs1__nKvxaAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__nKvxAzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__nKvxa2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__nKvxAeiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  ),
                  [sty.freeBoxmodal_rm2Hs2__nKvxafqRuS]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs2"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__qaJ21, {
                    [sty.freeBoxmodal_rm1Hs1__qaJ21AmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5830H,
                      {
                        [sty.textmodal_rm1Hs1___5830HAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        ),
                        [sty.textmodal_rm2Hs2___5830HFqRuS]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm2Hs2")
                      ? "Correct answer: B"
                      : "Correct answer: C"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__sNfzf, {
                    [sty.freeBoxmodal_rm1Hs4__sNfzfeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    ),
                    [sty.freeBoxmodal_rm2Hs2__sNfzfFqRuS]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cZbU,
                      {
                        [sty.textmodal_rm1Hs4__cZbUeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm2Hs2__cZbUFqRuS]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm2Hs2")
                      ? "EoE patients with longstanding dysphagia may develop coping behaviors \rto manage their eating difficulties. This may result in minimization of\rsymptoms and delayed diagnosis. Clinicians should evaluate patients with\rsuspected and diagnosed EoE for behaviors using the IMPACT acronym:"
                      : "There are several approaches to a food elimination diet, \rranging from eliminating one food or food ingredient at a time\rto up to six foods or ingredients simultaneously. This is then\r followed by reintroduction of those foods/food ingredients to\ridentify triggers."}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__lbD1D, {
                    [sty.freeBoxmodal_rm1Hs4__lbD1DeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    ),
                    [sty.freeBoxmodal_rm2Hs2__lbD1DfqRuS]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xGRa,
                      {
                        [sty.textmodal_rm1Hs4__xGRaeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm2Hs2__xGRaFqRuS]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm2Hs2") ? (
                      <React.Fragment>
                        <React.Fragment>{"\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"I"}
                        </span>
                        <React.Fragment>
                          {"mbibe fluids with meals\r\n\u2022"}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {" M"}
                        </span>
                        <React.Fragment>
                          {"odify food\r\n\u2022 "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"P"}
                        </span>
                        <React.Fragment>{"rolong mealtimes"}</React.Fragment>
                      </React.Fragment>
                    ) : (
                      "1-6 foods/\rfood ingredients"
                    )}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yfLi,
                      {
                        [sty.textmodal_rm1Hs4__yfLieiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        ),
                        [sty.textmodal_rm2Hs2__yfLiFqRuS]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm2Hs2") ? (
                      <React.Fragment>
                        <React.Fragment>{"\u2022 "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"A"}
                        </span>
                        <React.Fragment>
                          {"void hard texture foods\r\n\u2022 "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"C"}
                        </span>
                        <React.Fragment>
                          {"hew excessively\n\r\u2022 "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"T"}
                        </span>
                        <React.Fragment>
                          {"urn away tablets/pills"}
                        </React.Fragment>
                      </React.Fragment>
                    ) : (
                      "Reintroduction"
                    )}
                  </div>
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__fEy3Z,
                  {
                    [sty.wrongAnswermodal_rm2Hs2__fEy3ZfqRuS]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs2"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "sharese2",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharese2",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharese2", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "undefined";
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "kelvinPcp1")
            ? true
            : hasVariant($state, "modal", "rm3Hs1")
              ? true
              : hasVariant($state, "modal", "rm2Hs4")
                ? true
                : hasVariant($state, "modal", "rm2Hs3")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs2")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs1")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs2")
                          ? true
                          : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharese3"}
            data-plasmic-override={overrides.sharese3}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs4")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs1")
                                ? true
                                : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            className={classNames("__wab_instance", sty.sharese3, {
              [sty.sharese3kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.sharese3kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.sharese3kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.sharese3kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.sharese3modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.sharese3modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.sharese3modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.sharese3modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.sharese3modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.sharese3modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.sharese3modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.sharese3modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.sharese3modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.sharese3modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.sharese3modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__vB2Ru, {
                  [sty.freeBoxmodal_rm1Hs1__vB2RuAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__vB2RUzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__vB2Ru2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__vB2RUeiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  ),
                  [sty.freeBoxmodal_rm2Hs3__vB2RulsBpn]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs3"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__ofbaR, {
                    [sty.freeBoxmodal_rm1Hs1__ofbaRAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__akYVa,
                      {
                        [sty.textmodal_rm1Hs1__akYVaAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {"Correct answer: C"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__tTjy6, {
                    [sty.freeBoxmodal_rm1Hs4__tTjy6EiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d2IaQ,
                      {
                        [sty.textmodal_rm1Hs4__d2IaQeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      }
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"BOS is an "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"immediate-release topical corticosteroid "}
                      </span>
                      <React.Fragment>
                        {
                          "given as a \rviscous suspension to lengthen its survival time on the esophageal\r mucosal surface following oral administration."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__rDyN, {
                    [sty.freeBoxmodal_rm1Hs1__rDyNAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__drox0, {
                      [sty.imgmodal_rm1Hs4__drox0EiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      ),
                      [sty.imgmodal_rm2Hs3__drox0LsBpn]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs3"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"10%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/wheatSvg.svg",
                      fullWidth: 83.04,
                      fullHeight: 83.04,
                      aspectRatio: 1
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__vRw7, {
                      [sty.imgmodal_rm2Hs3__vRw7LsBpn]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs3"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"15%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/image10.svg",
                      fullWidth: 154.52,
                      fullHeight: 154.52,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zVlGw,
                      {
                        [sty.textmodal_rm1Hs1__zVlGwAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "BOS is currently approved for the treatment of EoE in\rindividuals aged 11 years and older based on data \rfrom a pair of phase 3 trials showing that patients \rtreated with BOS 2 mg twice daily were significantly\r more likely than those treated with placebo to\rachieve both stringent "
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"histological and symptom "}
                      </span>
                      <React.Fragment>
                        {
                          "\rresponse at 12 weeks. Improved endoscopic \routcomes were also seen in these trials."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer___907RJ,
                  {
                    [sty.wrongAnswermodal_rm2Hs3___907RJlsBpn]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs3"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "sharese3",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharese3",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharese3", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "undefined";
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "rm1Hs3")
            ? true
            : hasVariant($state, "modal", "rm1Hs2")
              ? true
              : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"diagram"}
            data-plasmic-override={overrides.diagram}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            className={classNames("__wab_instance", sty.diagram, {
              [sty.diagramkelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.diagramkelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.diagramkelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.diagramkelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.diagrammodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.diagrammodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.diagrammodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.diagrammodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.diagrammodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1")
            })}
            correctAnswer={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].correctAnswer;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox___2Pmfs, {
                  [sty.freeBoxmodal_rm1Hs1___2PmfsAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2___2PmfSzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3___2Pmfs2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__afC8F, {
                    [sty.freeBoxmodal_rm1Hs1__afC8FAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xndi8,
                      {
                        [sty.textmodal_rm1Hs1__xndi8AmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {"Correct answer: B"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__pkrxm, {
                    [sty.freeBoxmodal_rm1Hs1__pkrxmAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Xf1R,
                      {
                        [sty.textmodal_rm1Hs1___3Xf1RAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {
                      "Dupilumab, a fully human monoclonal antibody targeting IL-4R\u03b1, reduces\rtype 2 inflammation by blocking the following signaling pathways:"
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__mwFz0, {
                    [sty.freeBoxmodal_rm1Hs1__mwFz0AmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___5HOuD, {
                      [sty.freeBoxmodal_rm1Hs1___5HOuDAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.freeBoxmodal_rm1Hs2___5HOuDzqLiy]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs2"
                      ),
                      [sty.freeBoxmodal_rm1Hs3___5HOuD2GBx0]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs3"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ubDTn, {
                        [sty.imgmodal_rm1Hs3__ubDTn2GBx0]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs3"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/image8.svg",
                        fullWidth: 287.79,
                        fullHeight: 172.31,
                        aspectRatio: 1.670187
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cBoid,
                        {
                          [sty.textmodal_rm1Hs3__cBoid2GBx0]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs3"
                          )
                        }
                      )}
                    >
                      {"IL-4"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zLc41, {
                      [sty.freeBoxmodal_rm1Hs1__zLc41AmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.freeBoxmodal_rm1Hs2__zLc41ZqLiy]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs2"
                      ),
                      [sty.freeBoxmodal_rm1Hs3__zLc412GBx0]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs3"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___51NV, {
                        [sty.imgmodal_rm1Hs3___51NV2GBx0]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs3"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/image9.svg",
                        fullWidth: 287.79,
                        fullHeight: 172.31,
                        aspectRatio: 1.670187
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bgb2K,
                        {
                          [sty.textmodal_rm1Hs3__bgb2K2GBx0]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs3"
                          )
                        }
                      )}
                    >
                      {"IL-13"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__j0Cuu, {
                      [sty.freeBoxmodal_rm1Hs1__j0CuuAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.freeBoxmodal_rm1Hs2__j0CuUzqLiy]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hdJnC,
                        {
                          [sty.textmodal_rm1Hs1__hdJnCAmduI]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs1"
                          )
                        }
                      )}
                    >
                      {
                        "These cytokines play a role\rin the development of \rallergic and inflammatory\r diseases such as EoE."
                      }
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bsk2Y,
                    {
                      [sty.textmodal_rm1Hs1__bsk2YAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "Dupilumab is currently FDA approved for use in children with EoE ages\r1 year and older. A three-part, phase 3 trial showed that EoE patient s\rtreated with dupilumab weekly were significantly more likely to achieve \rhistologic remission and see amelioration of symptoms compared to\r those treated with placebo."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__znZaK,
                    {
                      [sty.textmodal_rm1Hs1__znZaKAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ys60,
                    {
                      [sty.textmodal_rm1Hs1__ys60AmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "Cendakimab and tezepelumab are currently being studied for use in EoE \rbut are not yet FDA approved for this indication. Mepolizumab is approved\r for use in several different conditions, including severe eosinophilic \rasthma, but a recent study in EoE patients found that mepolizumab was\r not more effective than placebo at improving dysphagia symptoms."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__oi1Sd,
                  {
                    [sty.wrongAnswermodal_rm1Hs3__oi1Sd2GBx0]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs3"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "diagram",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "diagram",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["diagram", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "rm3Hs1")
            ? true
            : hasVariant($state, "modal", "rm2Hs4")
              ? true
              : hasVariant($state, "modal", "rm2Hs3")
                ? true
                : hasVariant($state, "modal", "rm2Hs2")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs1")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs2")
                        ? true
                        : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharese4"}
            data-plasmic-override={overrides.sharese4}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            className={classNames("__wab_instance", sty.sharese4, {
              [sty.sharese4kelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.sharese4kelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.sharese4kelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.sharese4kelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.sharese4modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.sharese4modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.sharese4modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.sharese4modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.sharese4modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.sharese4modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.sharese4modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.sharese4modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.sharese4modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.sharese4modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__tpFj9, {
                  [sty.freeBoxmodal_rm1Hs1__tpFj9AmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__tpFj9ZqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__tpFj92GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__tpFj9EiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  ),
                  [sty.freeBoxmodal_rm2Hs4__tpFj9YsxLc]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs4"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__btxU, {
                    [sty.freeBoxmodal_rm1Hs1__btxUAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rFDs4,
                      {
                        [sty.textmodal_rm1Hs1__rFDs4AmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {"Correct answer: C"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__esHi7, {
                    [sty.freeBoxmodal_rm1Hs4__esHi7EiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ztkVp,
                      {
                        [sty.textmodal_rm1Hs4__ztkVpeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      }
                    )}
                  >
                    {
                      "Key features of EoE that are typically found upon endoscopy include \rthe following, commonly abbreviated as EREFS:"
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ly1Uz, {
                    [sty.freeBoxmodal_rm1Hs4__ly1UzeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ul3T,
                      {
                        [sty.textmodal_rm1Hs4__ul3TEiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      }
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"E"}
                      </span>
                      <React.Fragment>{"dema\r\n\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"R"}
                      </span>
                      <React.Fragment>{"ings\r\n\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"E"}
                      </span>
                      <React.Fragment>{"xudates"}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cqSNp,
                      {
                        [sty.textmodal_rm1Hs4__cqSNpeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      }
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"F"}
                      </span>
                      <React.Fragment>{"urrows\n\r\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"S"}
                      </span>
                      <React.Fragment>{"trictures"}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__udhlw,
                    {
                      [sty.textmodal_rm1Hs4__udhlweiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    }
                  )}
                >
                  {
                    "A scoring system of severity known as the EREFS Index is often used \rby gastroenterologists to assess severity of disease."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__afKhi,
                    {
                      [sty.textmodal_rm1Hs1__afKhiAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__f72Bn,
                    {
                      [sty.textmodal_rm1Hs1__f72BnAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "Gastric erosions and dysplasia may be indicators of other\rconditions such as GERD and Barrett\u2019s esophagus but are not\rindicative of a diagnosis of EoE. Patients with EoE will not have\rnormal-appearing mucosa.z"
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__jCze2,
                  {
                    [sty.wrongAnswermodal_rm2Hs4__jCze2YsxLc]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs4"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "sharese4",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharese4",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharese4", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "undefined";
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(hasVariant($state, "modal", "rm1Hs2") ? true : false) ? (
          <QuestionModal
            data-plasmic-name={"bookshelf"}
            data-plasmic-override={overrides.bookshelf}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            className={classNames("__wab_instance", sty.bookshelf, {
              [sty.bookshelfkelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.bookshelfkelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.bookshelfkelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.bookshelfkelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.bookshelfmodal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.bookshelfmodal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.bookshelfmodal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.bookshelfmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4")
            })}
            correctAnswer={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].correctAnswer;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__pSBdk, {
                  [sty.freeBoxmodal_rm1Hs1__pSBdkAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__pSBdkzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__dGqWm, {
                    [sty.freeBoxmodal_rm1Hs1__dGqWmAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o3I3W,
                      {
                        [sty.textmodal_rm1Hs1__o3I3WAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {"Correct answer: C"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__xMfdt, {
                    [sty.freeBoxmodal_rm1Hs1__xMfdtAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ewyxm,
                      {
                        [sty.textmodal_rm1Hs1__ewyxmAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {
                      "EoE signs and symptoms vary across age groups. Click to reveal\r the primary symptoms in patients of different ages:"
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3L6Tz, {
                    [sty.freeBoxmodal_rm1Hs1___3L6TzAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__arzwW, {
                      [sty.freeBoxmodal_rm1Hs1__arzwWAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.freeBoxmodal_rm1Hs2__arzwWzqLiy]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__puukD,
                        {
                          [sty.textmodal_rm1Hs1__puukDAmduI]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs1"
                          )
                        }
                      )}
                    >
                      {"\u22645 years"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__btmbi, {
                      [sty.freeBoxmodal_rm1Hs1__btmbiAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.freeBoxmodal_rm1Hs2__btmbizqLiy]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Rxdz,
                        {
                          [sty.textmodal_rm1Hs1___2RxdzAmduI]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs1"
                          )
                        }
                      )}
                    >
                      {"6-14 years"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vu5Zo, {
                      [sty.freeBoxmodal_rm1Hs1__vu5ZoAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      ),
                      [sty.freeBoxmodal_rm1Hs2__vu5ZozqLiy]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ihwu8,
                        {
                          [sty.textmodal_rm1Hs1__ihwu8AmduI]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs1"
                          )
                        }
                      )}
                    >
                      {"Adults"}
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tDbkf,
                    {
                      [sty.textmodal_rm1Hs1__tDbkfAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "However, EoE symptoms are often nonspecific and may be\rconsistent with other conditions, making the diagnosis challenging.\r\n\nIn younger children, feeding difficulties may be mistaken for \u201ctypical\u201d\r fussy eating, while in older individuals, symptoms of dysphagia may\rbe masked by adaptive behaviors and food avoidance.\r\n\nThese sorts of issues can all contribute to the delayed diagnosis of\r EoE, which has been frequently cited as a problem across the\rhealthcare spectrum. Tools such as the IMPACT behavioral\r assessment can be used to distinguish EoE from other diagnoses\rwith overlapping presentation patterns."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mtNR,
                    {
                      [sty.textmodal_rm1Hs1__mtNRAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__v0SWr,
                    {
                      [sty.textmodal_rm1Hs1__v0SWrAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "Persistent sore throat is more commonly found among infants and\ryoung children under the age of 5. Weight gain and chronic\rdiarrhea are not typically associated with EoE at any age."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__xurRd,
                  {
                    [sty.wrongAnswermodal_rm1Hs2__xurRDzqLiy]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs2"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "bookshelf",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "bookshelf",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["bookshelf", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "lamp")
            ? true
            : hasVariant($state, "modal", "rm1Hs4")
              ? true
              : hasVariant($state, "modal", "rm1Hs2")
                ? true
                : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"bed"}
            data-plasmic-override={overrides.bed}
            active={
              hasVariant($state, "kelvinFinal", "kelvinDoorOne")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                  ? true
                  : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                    ? true
                    : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs1")
                              ? true
                              : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            className={classNames("__wab_instance", sty.bed, {
              [sty.bedkelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.bedkelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.bedkelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.bedkelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              ),
              [sty.bedmodal_lamp]: hasVariant($state, "modal", "lamp"),
              [sty.bedmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.bedmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.bedmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.bedmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4")
            })}
            correctAnswer={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[4].correctAnswer;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__oea3S, {
                  [sty.freeBoxmodal_rm1Hs1__oea3SAmduI]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs1"
                  ),
                  [sty.freeBoxmodal_rm1Hs2__oea3SzqLiy]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  ),
                  [sty.freeBoxmodal_rm1Hs3__oea3S2GBx0]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__oea3SeiGL]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__tVfmK, {
                    [sty.freeBoxmodal_rm1Hs1__tVfmKAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nhhbv,
                      {
                        [sty.textmodal_rm1Hs1__nhhbvAmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {"Correct answer: C"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__adtjt, {
                    [sty.freeBoxmodal_rm1Hs1__adtjtAmduI]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs1"
                    )
                  })}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__ovz6, {
                      [sty.imgmodal_rm1Hs4__ovz6EiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"10%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/wheatSvg.svg",
                      fullWidth: 83.04,
                      fullHeight: 83.04,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n4Mw6,
                      {
                        [sty.textmodal_rm1Hs1__n4Mw6AmduI]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs1"
                        )
                      }
                    )}
                  >
                    {
                      "Wheat is among the most common food triggers for EoE\rand is typically included as part of a food elimination diet\rto identify potential food triggers in patients with EoE."
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__zCjJt, {
                    [sty.freeBoxmodal_rm1Hs4__zCjJteiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oV51,
                      {
                        [sty.textmodal_rm1Hs4__oV51EiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      }
                    )}
                  >
                    {
                      "There are several approaches to a food elimination diet, \rranging from eliminating one food or food ingredient at a time\rto up to six foods or ingredients simultaneously. This is then\r followed by reintroduction of those foods/food ingredients to\ridentify triggers."
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3GR0H, {
                    [sty.freeBoxmodal_rm1Hs4___3GR0HeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__hmDiS, {
                      [sty.imgmodal_rm1Hs4__hmDiSeiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"10%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/noWheatSvg.svg",
                      fullWidth: 61,
                      fullHeight: 61,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Uelo,
                      {
                        [sty.textmodal_rm1Hs4___7UeloeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      }
                    )}
                  >
                    {"1-6 foods/\rfood ingredients"}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__ew10C, {
                      [sty.imgmodal_rm1Hs4__ew10CeiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__mQx8B, {
                      [sty.imgmodal_rm1Hs4__mQx8BeiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"10%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/noWheatSvg.svg",
                      fullWidth: 61,
                      fullHeight: 61,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kf9WO,
                      {
                        [sty.textmodal_rm1Hs4__kf9WOeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      }
                    )}
                  >
                    {"Reintroduction"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jqTEl,
                    {
                      [sty.textmodal_rm1Hs4__jqTEleiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    }
                  )}
                >
                  {"Other common food allergens that may trigger EoE include:"}
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__b3Ehj, {
                    [sty.freeBoxmodal_rm1Hs4__b3EhjeiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7VXhg, {
                      [sty.freeBoxmodal_rm1Hs4___7VXhgeiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__bzFNq, {
                        [sty.imgmodal_rm1Hs4__bzFNqeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"40%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/dairySvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ae21D,
                        {
                          [sty.textmodal_rm1Hs4__ae21DeiGL]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs4"
                          )
                        }
                      )}
                    >
                      {"Dairy"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yztyL, {
                      [sty.freeBoxmodal_rm1Hs4__yztyLeiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xKzOv, {
                        [sty.imgmodal_rm1Hs4__xKzOVeiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"40%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/soySvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Pg9G,
                        {
                          [sty.textmodal_rm1Hs4___2Pg9GeiGL]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs4"
                          )
                        }
                      )}
                    >
                      {"Soy"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oJbJs, {
                      [sty.freeBoxmodal_rm1Hs4__oJbJseiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ull44, {
                        [sty.imgmodal_rm1Hs4__ull44EiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"40%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/eggsSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sJBwB,
                        {
                          [sty.textmodal_rm1Hs4__sJBwBeiGL]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs4"
                          )
                        }
                      )}
                    >
                      {"Eggs"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ds5Kf, {
                      [sty.freeBoxmodal_rm1Hs4__ds5KFeiGL]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs4"
                      )
                    })}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xkhsu, {
                        [sty.imgmodal_rm1Hs4__xkhsueiGL]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"40%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/nutsSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v4Jqd,
                        {
                          [sty.textmodal_rm1Hs4__v4JqdeiGL]: hasVariant(
                            $state,
                            "modal",
                            "rm1Hs4"
                          )
                        }
                      )}
                    >
                      {"Nuts"}
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wpZbc,
                    {
                      [sty.textmodal_rm1Hs1__wpZbcAmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qb0E6,
                    {
                      [sty.textmodal_rm1Hs1__qb0E6AmduI]: hasVariant(
                        $state,
                        "modal",
                        "rm1Hs1"
                      )
                    }
                  )}
                >
                  {
                    "Red meat, poultry, and stone fruits are not considered to be common\rfood allergens associated with EoE."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__hryid,
                  {
                    [sty.wrongAnswermodal_rm1Hs4__hryideiGL]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, ["bed", "isSelected"])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["bed", "isSelected"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["bed", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "kelvinFinal", "kelvinDoorOne")
            ? true
            : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
              ? true
              : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                ? true
                : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                  ? true
                  : (() => {
                      try {
                        return true;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
        ) ? (
          <FinalTest
            data-plasmic-name={"kelvinModal"}
            data-plasmic-override={overrides.kelvinModal}
            className={classNames("__wab_instance", sty.kelvinModal, {
              [sty.kelvinModalkelvinFinal_kelvinDoorFour]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorFour"
              ),
              [sty.kelvinModalkelvinFinal_kelvinDoorOne]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorOne"
              ),
              [sty.kelvinModalkelvinFinal_kelvinDoorThree]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorThree"
              ),
              [sty.kelvinModalkelvinFinal_kelvinDoorTwo]: hasVariant(
                $state,
                "kelvinFinal",
                "kelvinDoorTwo"
              )
            })}
            finalA={
              hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? (() => {
                    try {
                      return $props.questions.questions[5].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? (() => {
                      try {
                        return $props.questions.questions[6].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? (() => {
                        try {
                          return $props.questions.questions[7].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $props.questions.questions[6].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
            }
            finalB={
              hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? (() => {
                    try {
                      return $props.questions.questions[5].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? (() => {
                      try {
                        return $props.questions.questions[6].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? (() => {
                        try {
                          return $props.questions.questions[7].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $props.questions.questions[6].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
            }
            finalC={
              hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? (() => {
                    try {
                      return $props.questions.questions[5].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? (() => {
                      try {
                        return $props.questions.questions[6].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? (() => {
                        try {
                          return $props.questions.questions[7].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $props.questions.questions[6].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
            }
            finalCorrect={
              hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? (() => {
                    try {
                      return $props.questions.questions[5].correctAnswer;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? (() => {
                      try {
                        return $props.questions.questions[6].correctAnswer;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? (() => {
                        try {
                          return $props.questions.questions[7].correctAnswer;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $props.questions.questions[6].correctAnswer;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
            }
            finalD={
              hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? (() => {
                    try {
                      return $props.questions.questions[5].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? (() => {
                      try {
                        return $props.questions.questions[6].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? (() => {
                        try {
                          return $props.questions.questions[7].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $props.questions.questions[6].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
            }
            finalQuestion={
              hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? (() => {
                    try {
                      return $props.questions.questions[5].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? (() => {
                      try {
                        return $props.questions.questions[6].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? (() => {
                        try {
                          return $props.questions.questions[7].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $props.questions.questions[6].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
            }
            finalQuestionId={
              hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
                ? (() => {
                    try {
                      return $props.questions.questions[5].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                  ? (() => {
                      try {
                        return $props.questions.questions[6].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                    ? (() => {
                        try {
                          return $props.questions.questions[7].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : (() => {
                        try {
                          return $props.questions.questions[6].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
            }
            onClickContinue={async event => {
              const $steps = {};

              $steps["updateKelvinStep"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["kelvinStep"]
                      },
                      operation: 0,
                      value: 3
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateKelvinStep"] != null &&
                typeof $steps["updateKelvinStep"] === "object" &&
                typeof $steps["updateKelvinStep"].then === "function"
              ) {
                $steps["updateKelvinStep"] = await $steps["updateKelvinStep"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: "kelvinDoorTwo"
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
          />
        ) : null}
      </div>
      <BottomToolbar
        data-plasmic-name={"bottomToolbar"}
        data-plasmic-override={overrides.bottomToolbar}
        className={classNames("__wab_instance", sty.bottomToolbar, {
          [sty.bottomToolbarkelvinFinal_kelvinDoorFour]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorFour"
          ),
          [sty.bottomToolbarkelvinFinal_kelvinDoorOne]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorOne"
          ),
          [sty.bottomToolbarkelvinFinal_kelvinDoorThree]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorThree"
          ),
          [sty.bottomToolbarkelvinFinal_kelvinDoorTwo]: hasVariant(
            $state,
            "kelvinFinal",
            "kelvinDoorTwo"
          ),
          [sty.bottomToolbarmodal_ivanDoor]: hasVariant(
            $state,
            "modal",
            "ivanDoor"
          ),
          [sty.bottomToolbarmodal_ivanPcp2]: hasVariant(
            $state,
            "modal",
            "ivanPcp2"
          ),
          [sty.bottomToolbarmodal_ivanPcp3]: hasVariant(
            $state,
            "modal",
            "ivanPcp3"
          ),
          [sty.bottomToolbarmodal_ivanPcp42]: hasVariant(
            $state,
            "modal",
            "ivanPcp42"
          ),
          [sty.bottomToolbarmodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.bottomToolbarmodal_kelvinPcp2]: hasVariant(
            $state,
            "modal",
            "kelvinPcp2"
          ),
          [sty.bottomToolbarmodal_kelvinPcp3]: hasVariant(
            $state,
            "modal",
            "kelvinPcp3"
          ),
          [sty.bottomToolbarmodal_kelvinPcp4]: hasVariant(
            $state,
            "modal",
            "kelvinPcp4"
          ),
          [sty.bottomToolbarmodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.bottomToolbarmodal_rm1Hs1]: hasVariant(
            $state,
            "modal",
            "rm1Hs1"
          ),
          [sty.bottomToolbarmodal_rm1Hs2]: hasVariant(
            $state,
            "modal",
            "rm1Hs2"
          ),
          [sty.bottomToolbarmodal_rm1Hs3]: hasVariant(
            $state,
            "modal",
            "rm1Hs3"
          ),
          [sty.bottomToolbarmodal_rm1Hs4]: hasVariant(
            $state,
            "modal",
            "rm1Hs4"
          ),
          [sty.bottomToolbarmodal_rm2Hs1]: hasVariant(
            $state,
            "modal",
            "rm2Hs1"
          ),
          [sty.bottomToolbarmodal_rm2Hs2]: hasVariant(
            $state,
            "modal",
            "rm2Hs2"
          ),
          [sty.bottomToolbarmodal_rm2Hs3]: hasVariant(
            $state,
            "modal",
            "rm2Hs3"
          ),
          [sty.bottomToolbarmodal_rm2Hs4]: hasVariant(
            $state,
            "modal",
            "rm2Hs4"
          ),
          [sty.bottomToolbarmodal_rm3Hs1]: hasVariant(
            $state,
            "modal",
            "rm3Hs1"
          ),
          [sty.bottomToolbarmodal_rm3Hs2]: hasVariant(
            $state,
            "modal",
            "rm3Hs2"
          ),
          [sty.bottomToolbarmodal_rm3Hs3]: hasVariant(
            $state,
            "modal",
            "rm3Hs3"
          ),
          [sty.bottomToolbarmodal_rm3Hs4]: hasVariant(
            $state,
            "modal",
            "rm3Hs4"
          ),
          [sty.bottomToolbarmodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.bottomToolbarmodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.bottomToolbarmodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.bottomToolbarmodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.bottomToolbarmodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          )
        })}
        hasReference={
          hasVariant($state, "kelvinFinal", "kelvinDoorOne")
            ? "visible"
            : hasVariant($state, "kelvinFinal", "kelvinDoorTwo")
              ? "visible"
              : hasVariant($state, "kelvinFinal", "kelvinDoorThree")
                ? "visible"
                : hasVariant($state, "kelvinFinal", "kelvinDoorFour")
                  ? "visible"
                  : hasVariant($state, "modal", "unnamedVariant")
                    ? "visible"
                    : hasVariant($state, "modal", "ivanPcp3")
                      ? "visible"
                      : hasVariant($state, "modal", "ivanPcp2")
                        ? "visible"
                        : hasVariant($state, "modal", "ivanPcp42")
                          ? "visible"
                          : hasVariant($state, "modal", "sharesePcp4")
                            ? "visible"
                            : hasVariant($state, "modal", "sharesePcp3")
                              ? "visible"
                              : hasVariant($state, "modal", "sharesePcp2")
                                ? "visible"
                                : hasVariant($state, "modal", "kelvinPcp4")
                                  ? "visible"
                                  : hasVariant($state, "modal", "kelvinPcp3")
                                    ? "visible"
                                    : hasVariant($state, "modal", "kelvinPcp2")
                                      ? "visible"
                                      : hasVariant(
                                            $state,
                                            "modal",
                                            "kelvinPcp1"
                                          )
                                        ? "visible"
                                        : hasVariant($state, "modal", "lamp")
                                          ? "visible"
                                          : hasVariant(
                                                $state,
                                                "modal",
                                                "ivanDoor"
                                              )
                                            ? "visible"
                                            : hasVariant(
                                                  $state,
                                                  "modal",
                                                  "rm3Hs4"
                                                )
                                              ? "visible"
                                              : hasVariant(
                                                    $state,
                                                    "modal",
                                                    "rm3Hs3"
                                                  )
                                                ? "visible"
                                                : hasVariant(
                                                      $state,
                                                      "modal",
                                                      "rm3Hs2"
                                                    )
                                                  ? "visible"
                                                  : hasVariant(
                                                        $state,
                                                        "modal",
                                                        "rm3Hs1"
                                                      )
                                                    ? "visible"
                                                    : hasVariant(
                                                          $state,
                                                          "modal",
                                                          "shareseDoor"
                                                        )
                                                      ? "visible"
                                                      : hasVariant(
                                                            $state,
                                                            "modal",
                                                            "rm2Hs4"
                                                          )
                                                        ? "visible"
                                                        : hasVariant(
                                                              $state,
                                                              "modal",
                                                              "rm2Hs3"
                                                            )
                                                          ? "visible"
                                                          : hasVariant(
                                                                $state,
                                                                "modal",
                                                                "rm2Hs2"
                                                              )
                                                            ? "visible"
                                                            : hasVariant(
                                                                  $state,
                                                                  "modal",
                                                                  "rm2Hs1"
                                                                )
                                                              ? "visible"
                                                              : hasVariant(
                                                                    $state,
                                                                    "modal",
                                                                    "rm1Hs4"
                                                                  )
                                                                ? "visible"
                                                                : hasVariant(
                                                                      $state,
                                                                      "modal",
                                                                      "rm1Hs3"
                                                                    )
                                                                  ? "visible"
                                                                  : hasVariant(
                                                                        $state,
                                                                        "modal",
                                                                        "rm1Hs2"
                                                                      )
                                                                    ? "visible"
                                                                    : hasVariant(
                                                                          $state,
                                                                          "modal",
                                                                          "rm1Hs1"
                                                                        )
                                                                      ? "visible"
                                                                      : undefined
        }
      />

      <ClueModal
        data-plasmic-name={"clueModal"}
        data-plasmic-override={overrides.clueModal}
        className={classNames("__wab_instance", sty.clueModal, {
          [sty.clueModalmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
          [sty.clueModalmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.clueModalmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3")
        })}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "roomPlan",
    "roomMap",
    "roomScene",
    "kelvinTitleBanner",
    "kelvinPcp",
    "bookshelf6",
    "kf",
    "sharesePcp",
    "hotspot42",
    "bookshelf5",
    "shareseBookshelf2",
    "hotspot32",
    "hotspot22",
    "hotspot12",
    "ivanPcp",
    "bookshelf7",
    "referencePanel",
    "questionContainer",
    "computer",
    "ivanPcp42",
    "ivanPcp2",
    "ivanPcp3",
    "ivanPcp4",
    "sharesePcp1",
    "sharesePcp2",
    "sharesePcp3",
    "sharesePcp4",
    "kelvinPcp1",
    "kelvinPcp2",
    "kelvinPcp3",
    "kelvinPcp4",
    "ivanBed",
    "sharese1",
    "sharese2",
    "sharese3",
    "diagram",
    "sharese4",
    "bookshelf",
    "bed",
    "kelvinModal",
    "bottomToolbar",
    "clueModal"
  ],
  roomPlan: ["roomPlan", "roomMap"],
  roomMap: ["roomMap"],
  roomScene: [
    "roomScene",
    "kelvinTitleBanner",
    "kelvinPcp",
    "bookshelf6",
    "kf",
    "sharesePcp",
    "hotspot42",
    "bookshelf5",
    "shareseBookshelf2",
    "hotspot32",
    "hotspot22",
    "hotspot12",
    "ivanPcp",
    "bookshelf7"
  ],
  kelvinTitleBanner: ["kelvinTitleBanner"],
  kelvinPcp: ["kelvinPcp", "bookshelf6", "kf"],
  bookshelf6: ["bookshelf6"],
  kf: ["kf"],
  sharesePcp: [
    "sharesePcp",
    "hotspot42",
    "bookshelf5",
    "shareseBookshelf2",
    "hotspot32",
    "hotspot22",
    "hotspot12"
  ],
  hotspot42: ["hotspot42"],
  bookshelf5: ["bookshelf5", "shareseBookshelf2"],
  shareseBookshelf2: ["shareseBookshelf2"],
  hotspot32: ["hotspot32"],
  hotspot22: ["hotspot22"],
  hotspot12: ["hotspot12"],
  ivanPcp: ["ivanPcp", "bookshelf7"],
  bookshelf7: ["bookshelf7"],
  referencePanel: ["referencePanel"],
  questionContainer: [
    "questionContainer",
    "computer",
    "ivanPcp42",
    "ivanPcp2",
    "ivanPcp3",
    "ivanPcp4",
    "sharesePcp1",
    "sharesePcp2",
    "sharesePcp3",
    "sharesePcp4",
    "kelvinPcp1",
    "kelvinPcp2",
    "kelvinPcp3",
    "kelvinPcp4",
    "ivanBed",
    "sharese1",
    "sharese2",
    "sharese3",
    "diagram",
    "sharese4",
    "bookshelf",
    "bed",
    "kelvinModal"
  ],
  computer: ["computer"],
  ivanPcp42: ["ivanPcp42"],
  ivanPcp2: ["ivanPcp2"],
  ivanPcp3: ["ivanPcp3"],
  ivanPcp4: ["ivanPcp4"],
  sharesePcp1: ["sharesePcp1"],
  sharesePcp2: ["sharesePcp2"],
  sharesePcp3: ["sharesePcp3"],
  sharesePcp4: ["sharesePcp4"],
  kelvinPcp1: ["kelvinPcp1"],
  kelvinPcp2: ["kelvinPcp2"],
  kelvinPcp3: ["kelvinPcp3"],
  kelvinPcp4: ["kelvinPcp4"],
  ivanBed: ["ivanBed"],
  sharese1: ["sharese1"],
  sharese2: ["sharese2"],
  sharese3: ["sharese3"],
  diagram: ["diagram"],
  sharese4: ["sharese4"],
  bookshelf: ["bookshelf"],
  bed: ["bed"],
  kelvinModal: ["kelvinModal"],
  bottomToolbar: ["bottomToolbar"],
  clueModal: ["clueModal"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  roomPlan: "div";
  roomMap: typeof RoomMap;
  roomScene: "div";
  kelvinTitleBanner: "div";
  kelvinPcp: "div";
  bookshelf6: "div";
  kf: typeof Hotspot;
  sharesePcp: "div";
  hotspot42: "div";
  bookshelf5: "div";
  shareseBookshelf2: typeof PlasmicImg__;
  hotspot32: "div";
  hotspot22: "div";
  hotspot12: "div";
  ivanPcp: "div";
  bookshelf7: "div";
  referencePanel: typeof ReferencePanel;
  questionContainer: "div";
  computer: typeof QuestionModal;
  ivanPcp42: typeof QuestionModal;
  ivanPcp2: typeof QuestionModal;
  ivanPcp3: typeof QuestionModal;
  ivanPcp4: typeof QuestionModal;
  sharesePcp1: typeof QuestionModal;
  sharesePcp2: typeof QuestionModal;
  sharesePcp3: typeof QuestionModal;
  sharesePcp4: typeof QuestionModal;
  kelvinPcp1: typeof QuestionModal;
  kelvinPcp2: typeof QuestionModal;
  kelvinPcp3: typeof QuestionModal;
  kelvinPcp4: typeof QuestionModal;
  ivanBed: typeof QuestionModal;
  sharese1: typeof QuestionModal;
  sharese2: typeof QuestionModal;
  sharese3: typeof QuestionModal;
  diagram: typeof QuestionModal;
  sharese4: typeof QuestionModal;
  bookshelf: typeof QuestionModal;
  bed: typeof QuestionModal;
  kelvinModal: typeof FinalTest;
  bottomToolbar: typeof BottomToolbar;
  clueModal: typeof ClueModal;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicExamRoomPcp__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicExamRoomPcp__VariantsArgs;
    args?: PlasmicExamRoomPcp__ArgsType;
    overrides?: NodeOverridesType<T>;
  } &
    // Specify variants directly as props
    Omit<PlasmicExamRoomPcp__VariantsArgs, ReservedPropsType> &
    // Specify args directly as props
    Omit<PlasmicExamRoomPcp__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicExamRoomPcp__ArgProps,
          internalVariantPropNames: PlasmicExamRoomPcp__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicExamRoomPcp__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicExamRoomPcp";
  } else {
    func.displayName = `PlasmicExamRoomPcp.${nodeName}`;
  }
  return func;
}

export const PlasmicExamRoomPcp = Object.assign(
  // Top-level PlasmicExamRoomPcp renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    roomPlan: makeNodeComponent("roomPlan"),
    roomMap: makeNodeComponent("roomMap"),
    roomScene: makeNodeComponent("roomScene"),
    kelvinTitleBanner: makeNodeComponent("kelvinTitleBanner"),
    kelvinPcp: makeNodeComponent("kelvinPcp"),
    bookshelf6: makeNodeComponent("bookshelf6"),
    kf: makeNodeComponent("kf"),
    sharesePcp: makeNodeComponent("sharesePcp"),
    hotspot42: makeNodeComponent("hotspot42"),
    bookshelf5: makeNodeComponent("bookshelf5"),
    shareseBookshelf2: makeNodeComponent("shareseBookshelf2"),
    hotspot32: makeNodeComponent("hotspot32"),
    hotspot22: makeNodeComponent("hotspot22"),
    hotspot12: makeNodeComponent("hotspot12"),
    ivanPcp: makeNodeComponent("ivanPcp"),
    bookshelf7: makeNodeComponent("bookshelf7"),
    referencePanel: makeNodeComponent("referencePanel"),
    questionContainer: makeNodeComponent("questionContainer"),
    computer: makeNodeComponent("computer"),
    ivanPcp42: makeNodeComponent("ivanPcp42"),
    ivanPcp2: makeNodeComponent("ivanPcp2"),
    ivanPcp3: makeNodeComponent("ivanPcp3"),
    ivanPcp4: makeNodeComponent("ivanPcp4"),
    sharesePcp1: makeNodeComponent("sharesePcp1"),
    sharesePcp2: makeNodeComponent("sharesePcp2"),
    sharesePcp3: makeNodeComponent("sharesePcp3"),
    sharesePcp4: makeNodeComponent("sharesePcp4"),
    kelvinPcp1: makeNodeComponent("kelvinPcp1"),
    kelvinPcp2: makeNodeComponent("kelvinPcp2"),
    kelvinPcp3: makeNodeComponent("kelvinPcp3"),
    kelvinPcp4: makeNodeComponent("kelvinPcp4"),
    ivanBed: makeNodeComponent("ivanBed"),
    sharese1: makeNodeComponent("sharese1"),
    sharese2: makeNodeComponent("sharese2"),
    sharese3: makeNodeComponent("sharese3"),
    diagram: makeNodeComponent("diagram"),
    sharese4: makeNodeComponent("sharese4"),
    bookshelf: makeNodeComponent("bookshelf"),
    bed: makeNodeComponent("bed"),
    kelvinModal: makeNodeComponent("kelvinModal"),
    bottomToolbar: makeNodeComponent("bottomToolbar"),
    clueModal: makeNodeComponent("clueModal"),

    // Metadata about props expected for PlasmicExamRoomPcp
    internalVariantProps: PlasmicExamRoomPcp__VariantProps,
    internalArgProps: PlasmicExamRoomPcp__ArgProps
  }
);

export default PlasmicExamRoomPcp;
/* prettier-ignore-end */
