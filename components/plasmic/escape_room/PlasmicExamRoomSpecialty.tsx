/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7WvC14QG9b5jXarkiBh2yY
// Component: elJFY3bo5HD9

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Hotspot from "../../Hotspot"; // plasmic-import: Fhh6u1WI2G9i/component
import InstructionBanner from "../../InstructionBanner"; // plasmic-import: XeE2UeZFWwVr/component
import ReferencePanel from "../../ReferencePanel"; // plasmic-import: dm8P2fnSqnl1/component
import QuestionModal from "../../QuestionModal"; // plasmic-import: k8q3s-VwBO0i/component
import WrongAnswer from "../../WrongAnswer"; // plasmic-import: N85BHE1JruFS/component
import BottomToolbar from "../../BottomToolbar"; // plasmic-import: 2RFJUesBV3VF/component
import ClueModal from "../../ClueModal"; // plasmic-import: 0lm5ubHxYbp_/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectcss
import sty from "./PlasmicExamRoomSpecialty.module.css"; // plasmic-import: elJFY3bo5HD9/css

createPlasmicElementProxy;

export type PlasmicExamRoomSpecialty__VariantMembers = {
  modal:
    | "rm1Hs1"
    | "rm1Hs2"
    | "rm1Hs3"
    | "rm1Hs4"
    | "kelvinDoor"
    | "rm2Hs1"
    | "rm2Hs2"
    | "rm2Hs3"
    | "rm2Hs4"
    | "shareseDoor"
    | "rm3Hs1"
    | "rm3Hs2"
    | "rm3Hs3"
    | "rm3Hs4"
    | "ivanDoor"
    | "lamp"
    | "kelvinPcp1"
    | "kelvinPcp2"
    | "kelvinPcp3"
    | "kelvinPcp4"
    | "sharesePcp2"
    | "sharesePcp3"
    | "sharesePcp4"
    | "ivanPcp2"
    | "ivanPcp3"
    | "ivanPcp4"
    | "unnamedVariant";
};
export type PlasmicExamRoomSpecialty__VariantsArgs = {
  modal?: SingleChoiceArg<
    | "rm1Hs1"
    | "rm1Hs2"
    | "rm1Hs3"
    | "rm1Hs4"
    | "kelvinDoor"
    | "rm2Hs1"
    | "rm2Hs2"
    | "rm2Hs3"
    | "rm2Hs4"
    | "shareseDoor"
    | "rm3Hs1"
    | "rm3Hs2"
    | "rm3Hs3"
    | "rm3Hs4"
    | "ivanDoor"
    | "lamp"
    | "kelvinPcp1"
    | "kelvinPcp2"
    | "kelvinPcp3"
    | "kelvinPcp4"
    | "sharesePcp2"
    | "sharesePcp3"
    | "sharesePcp4"
    | "ivanPcp2"
    | "ivanPcp3"
    | "ivanPcp4"
    | "unnamedVariant"
  >;
};
type VariantPropType = keyof PlasmicExamRoomSpecialty__VariantsArgs;
export const PlasmicExamRoomSpecialty__VariantProps =
  new Array<VariantPropType>("modal");

export type PlasmicExamRoomSpecialty__ArgsType = { questions?: any };
type ArgPropType = keyof PlasmicExamRoomSpecialty__ArgsType;
export const PlasmicExamRoomSpecialty__ArgProps = new Array<ArgPropType>(
  "questions"
);

export type PlasmicExamRoomSpecialty__OverridesType = {
  root?: Flex__<"div">;
  roomPlan?: Flex__<"div">;
  roomScene?: Flex__<"div">;
  kelvinTitleBanner?: Flex__<"div">;
  kelvinSpecialist?: Flex__<"div">;
  bookshelf3?: Flex__<"div">;
  shareseSpecialist?: Flex__<"div">;
  hotspot3?: Flex__<"div">;
  bookshelf4?: Flex__<"div">;
  shareseBookshelf?: Flex__<typeof PlasmicImg__>;
  hotspot4?: Flex__<"div">;
  hotspot2?: Flex__<"div">;
  hotspot1?: Flex__<"div">;
  ivanSpecialist?: Flex__<"div">;
  bookshelf2?: Flex__<"div">;
  referencePanel?: Flex__<typeof ReferencePanel>;
  questionContainer?: Flex__<"div">;
  computer?: Flex__<typeof QuestionModal>;
  ivanSpecialist4?: Flex__<typeof QuestionModal>;
  ivanShelf?: Flex__<typeof QuestionModal>;
  ivanScreen?: Flex__<typeof QuestionModal>;
  sharese1?: Flex__<typeof QuestionModal>;
  sharese2?: Flex__<typeof QuestionModal>;
  sharese3?: Flex__<typeof QuestionModal>;
  diagram?: Flex__<typeof QuestionModal>;
  sharese4?: Flex__<typeof QuestionModal>;
  bookshelf?: Flex__<typeof QuestionModal>;
  bed?: Flex__<typeof QuestionModal>;
  bottomToolbar?: Flex__<typeof BottomToolbar>;
  clueModal?: Flex__<typeof ClueModal>;
};

export interface DefaultExamRoomSpecialtyProps {
  questions?: any;
  modal?: SingleChoiceArg<
    | "rm1Hs1"
    | "rm1Hs2"
    | "rm1Hs3"
    | "rm1Hs4"
    | "kelvinDoor"
    | "rm2Hs1"
    | "rm2Hs2"
    | "rm2Hs3"
    | "rm2Hs4"
    | "shareseDoor"
    | "rm3Hs1"
    | "rm3Hs2"
    | "rm3Hs3"
    | "rm3Hs4"
    | "ivanDoor"
    | "lamp"
    | "kelvinPcp1"
    | "kelvinPcp2"
    | "kelvinPcp3"
    | "kelvinPcp4"
    | "sharesePcp2"
    | "sharesePcp3"
    | "sharesePcp4"
    | "ivanPcp2"
    | "ivanPcp3"
    | "ivanPcp4"
    | "unnamedVariant"
  >;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicExamRoomSpecialty__RenderFunc(props: {
  variants: PlasmicExamRoomSpecialty__VariantsArgs;
  args: PlasmicExamRoomSpecialty__ArgsType;
  overrides: PlasmicExamRoomSpecialty__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {
          questions: {
            questions: [
              {
                id: "Kelvin-Specialist-q1",
                questionText:
                  "Which of the following is a risk factor for the development of eosinophilic esophagitis (EoE)?",
                options: [
                  { id: "A", text: "Female sex" },
                  { id: "B", text: "Birth via C-section" },
                  { id: "C", text: "Smoking" },
                  {
                    id: "D",
                    text: "A diet high in caffeine, alcohol, and/or fat"
                  }
                ],
                correctAnswer: "B",
                rationale:
                  "Birth via C-section is a known risk factor associated with EoE. Studies have found that individuals born prematurely or via C-section, those not exclusively breastfed, and infants who received antibiotics have a higher risk of developing EoE. These factors are also believed to contribute to the development of other conditions that are part of the \u201callergic march,\u201d including allergies, asthma, and eczema. Males are three times more likely to be diagnosed with EoE than females. Smoking and an unbalanced diet have not been shown to increase an individual\u2019s risk of developing EoE."
              },
              {
                id: "Kelvin-Specialist-q2",
                questionText:
                  "Which of the following is a symptom of EoE that commonly manifests in school-aged children (ages 6-14 years)?",
                options: [
                  {
                    id: "A",
                    text: "Weight gain >10 pounds in the last 6 months"
                  },
                  { id: "B", text: "Persistent sore throat" },
                  { id: "C", text: "Heartburn" },
                  { id: "D", text: "Chronic diarrhea" }
                ],
                correctAnswer: "C",
                rationale:
                  "EoE signs and symptoms vary across age groups. The primary symptoms in infants and young children (ages \u22645 years) include sore throat, poor growth, and feeding issues. In school-aged children (ages 6-14 years), abdominal pain, vomiting, and heartburn are common. Adults who develop EoE often present with dysphagia and food impaction. Weight gain and chronic diarrhea are not typically associated with EoE at any age. However, EoE symptoms are often nonspecific and may be consistent with other conditions, making the diagnosis challenging. In younger children, feeding difficulties may be mistaken for \u201ctypical\u201d fussy eating, while in older individuals, symptoms of dysphagia may be masked by adaptive behaviors and food avoidance. These sorts of issues can all contribute to the delayed diagnosis of EoE, which has been frequently cited as a problem across the healthcare spectrum. Tools such as the IMPACT behavioral assessment can be used to distinguish EoE from other diagnoses with overlapping presentation patterns."
              },
              {
                id: "Kelvin-Specialist-q3",
                questionText: "What is the therapeutic target of dupilumab?",
                options: [
                  { id: "A", text: "Interleukin-4Ra (IL-4Ra)" },
                  { id: "B", text: "IL-5Ra" },
                  { id: "C", text: "IL-13" },
                  { id: "D", text: "Tumor necrosis factor \u03b1" }
                ],
                correctAnswer: "A",
                rationale:
                  "Dupilumab, a fully human monoclonal antibody targeting IL-4Ra, reduces type 2 inflammation by blocking interleukin-4 and interleukin-13 signaling (these cytokines play a role in the development of allergic and inflammatory diseases such as EoE). Dupilumab is currently FDA approved for use in children with EoE ages 1 year and older. A three-part, phase 3 trial showed that EoE patients treated with dupilumab weekly were significantly more likely to achieve histologic remission and see amelioration of symptoms compared to those treated with placebo."
              },
              {
                id: "Kelvin-Specialist-q4",
                questionText:
                  "Clinicians can apply the Index of Severity for Eosinophilic Esophagitis (I-SEE) for which of the following purposes?",
                options: [
                  {
                    id: "A",
                    text: "Replace evaluation of endoscopic features using EREFS"
                  },
                  {
                    id: "B",
                    text: "Guide conversations between clinicians and patients"
                  },
                  { id: "C", text: "Assess treatment contraindications" },
                  {
                    id: "D",
                    text: "Identify risk factors for disease progression"
                  }
                ],
                correctAnswer: "B",
                rationale:
                  "The I-SEE provides a simplified scoring system of clinical severity based on three domains: symptoms and complications, inflammatory features, and fibrostenosis. I-SEE categorizes patients based on disease severity (inactive, mild, moderate, or severe). It is a useful tool for assessing disease at initial diagnosis and during monitoring visits. I-SEE also provides a means to facilitate communication among providers and with patients. I-SEE serves as a complementary tool to, but does not replace, validated instruments such as the EREFS Endoscopic Reference Score, which evaluates Edema, Rings, Exudates, Furrows, Strictures. I-SEE is not used to assess risk factors or treatment contraindications. The tool can be accessed using a mobile application or via download from the American Gastroenterological Association, available at gastro.org/clinical-guidance/i-see-index-of-severity-for-eoe-tool/."
              },
              {
                id: "Kelvin-Specialist-q5",
                questionText:
                  "After making the diagnosis of EoE, you initially suggest a food elimination trial to identify triggers for Kelvin\u2019s disease. However, Kelvin\u2019s parents are concerned that this will be a challenge given his feeding difficulties. What is the best approach to manage this issue?",
                options: [
                  {
                    id: "A",
                    text: "Refer to an allergist for food allergy testing (IgE and skin prick) to identify triggers"
                  },
                  {
                    id: "B",
                    text: "Refer to a feeding therapist to support the family in addressing feeding behaviors"
                  },
                  {
                    id: "C",
                    text: "Prescribe an elemental formula diet for 12 weeks"
                  },
                  {
                    id: "D",
                    text: "Refer for aeroallergen testing prior to initiating a food elimination trial"
                  }
                ],
                correctAnswer: "B",
                rationale:
                  "According to the 2025 ACG guidelines, treatment goals for EoE in pediatric patients include monitoring growth, development (including eating skills), and nutrition. Feeding therapy is a recommended adjunctive therapeutic intervention to address food avoidance and maladaptive feeding behaviors. While histologic response to an elemental formula diet is high, it is only recommended in cases of EoE where other treatment options have failed. Skin prick, patch, and serum Ig allergy tests are not recommended to guide food elimination diets for patients with EoE. Aeroallergen testing is not a recommended replacement for a food elimination diet in patients with EoE. Furthermore, the typical course of the atopic march involves food allergies in younger children; older children and adults are more likely to have aeroallergen allergies."
              },
              {
                id: "Kelvin-Specialist-q6",
                questionText:
                  "Kelvin\u2019s parents express relief after meeting with a feeding specialist and agree to a 6-food elimination diet but remain a bit apprehensive about their son\u2019s future. \u201cHow are we going to explain to Kelvin why he can\u2019t enjoy the same treats and foods as his friends? What happens when he goes to birthday parties, and they serve cake to all of the kids?\u201d What is the best recommendation to address these concerns?",
                options: [
                  {
                    id: "A",
                    text: "Recommend \u201cdiet holidays\u201d where Kelvin can enjoy restricted foods to accommodate social events"
                  },
                  {
                    id: "B",
                    text: "Temporarily introduce use of an inhaled or swallowed corticosteroid during periods when Kelvin may be unable or unwilling to follow a food elimination diet"
                  },
                  {
                    id: "C",
                    text: "Explain that, unfortunately, nothing can be done and that Kelvin will have to cope with these sorts of situations"
                  },
                  {
                    id: "D",
                    text: "Refer Kelvin and his family to behavioral health support to manage any psychosocial adjustments and coping issues related to his EoE"
                  }
                ],
                correctAnswer: "D",
                rationale:
                  "Psychosocial problems such as social difficulties, anxiety, and depression related to EoE can be evaluated by a behavioral health specialist, and effective coping mechanisms can be built to support a child with EoE and his family that helps them adhere to their treatment plan with minimal mental and behavioral detriments. While the ACG guidelines suggest that \u201cdiet holidays\u201d can be considered periodically for adult patients to accommodate life or social events (usually accompanied by medical therapy), this approach is more challenging for children as they may be unwilling to return to a more restrictive diet once the \u201choliday\u201d expires."
              },
              {
                id: "Kelvin-Specialist-q7",
                questionText:
                  "Twelve weeks after the start of a 6-food elimination diet (SFED), Kelvin\u2019s EoE symptoms are re-evaluated via endoscopy. Results show an eosinophil count of 23 eos/hpf and an Eosinophilic Esophagitis Endoscopic Reference Score (EREFS) score of 4 (active disease), with loss of vascular markings, linear furrows, and improved\u2014but still mild\u2014white plaques. Esophageal biopsies reveal persistently high eosinophils, confirming that Kelvin\u2019s EoE is not in remission despite SFED. Based on these results, which of the following would be the best recommendation for Kelvin?",
                options: [
                  {
                    id: "A",
                    text: "Fluticasone 122 \u03bcg in 2 puffs 4 times daily"
                  },
                  {
                    id: "B",
                    text: "Budesonide oral suspension 1 mg/d twice a day"
                  },
                  { id: "C", text: "Dupilumab 100 mg subcutaneously Q2W" },
                  { id: "D", text: "Omeprazole 15 mg twice a day" }
                ],
                correctAnswer: "D",
                rationale:
                  "The 2025 ACG Guidelines recommend PPIs such as omeprazole as frontline therapy for pediatric patients with EoE due to their low cost and acceptable long-term safety. A meta-analysis of 33 studies of PPI use in children and adults with EoE (variable reported duration of treatment) found that 50% of patients achieved histologic remission. Current guidelines suggest that cost of treatment and insurance coverage should be a consideration within the shared decision-making process, particularly when dealing with potential off-label use of therapies such as fluticasone. One more important item to note here: The listed doses of budesonide, fluticasone, and dupilumab are all inappropriate for a toddler. More commonly, they would be given as follows in toddlers: budesonide 0.5 mg BID, fluticasone 44 \u03bcg in 2 puffs BID, dupilumab 200 mg subcutaneously Q2W."
              },
              {
                id: "Kelvin-Specialist-q8",
                questionText:
                  "Three months after starting on omeprazole, Kelvin\u2019s parents report that his symptoms are not improving, and he continues to have difficulties with eating. His eczema has also gotten significantly worse. A repeat endoscopy confirms that Kelvin\u2019s EoE is refractory to his PPI. Based on this information, which of the following options would now be the best treatment recommendation?",
                options: [
                  {
                    id: "A",
                    text: "Continue omeprazole at current dosage and re-evaluate in 12 weeks"
                  },
                  {
                    id: "B",
                    text: "Increase omeprazole dosage to 30 mg once a day and re-evaluate in 12 weeks"
                  },
                  {
                    id: "C",
                    text: "Switch to dupilumab 200 mg subcutaneously Q2W"
                  },
                  {
                    id: "D",
                    text: "Switch to fluticasone via multi-dose inhaler preparation, 115 \u03bcg in 2 puffs, 4 times daily"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "The presence of severe atopic comorbidities such as eczema that may also improve with dupilumab warrant its use at this time rather than a swallowed topical corticosteroid in this patient who has not responded to an initial PPI. In addition to EoE, dupilumab is currently FDA approved for the following conditions: Moderate-to-severe atopic dermatitis (eczema); Moderate-to-severe asthma; COPD; Chronic rhinosinusitis with nasal polyps; Chronic spontaneous urticaria; Prurigo nodularis."
              },
              {
                id: "Sharese-Specialist-q1",
                questionText:
                  "The risk of developing EoE is elevated if a patient or first-degree family member is diagnosed with which of the following conditions?",
                options: [
                  { id: "A", text: "Kidney disease" },
                  { id: "B", text: "Type 1 diabetes" },
                  { id: "C", text: "Hashimoto\u2019s thyroiditis" },
                  { id: "D", text: "Leukocytosis" }
                ],
                correctAnswer: "C",
                rationale:
                  "EoE is commonly associated with autoimmune and connective tissue diseases. According to studies, patients or patients with first-degree family members diagnosed with Celiac disease, Crohn\u2019s disease, ulcerative colitis, rheumatoid arthritis, IgA deficiency, common variable immunodeficiency (CVID), multiple sclerosis, and Hashimoto\u2019s thyroiditis are at increased risk of developing EoE. A personal or family history of kidney disease, type 1 diabetes, and leukocytosis are not known to increase an individual\u2019s risk of developing EoE."
              },
              {
                id: "Sharese-Specialist-q2",
                questionText:
                  "The IMPACT acronym for assessing behavioral adaptations of patients with potential or diagnosed EoE includes all of the following EXCEPT:",
                options: [
                  { id: "A", text: "Imbibe fluids with meals" },
                  { id: "B", text: "Medicate for symptoms" },
                  { id: "C", text: "Prolong meal times" },
                  { id: "D", text: "Avoid hard texture foods" }
                ],
                correctAnswer: "B",
                rationale:
                  "EoE patients with longstanding dysphagia may develop coping behaviors to manage their eating difficulties. This may result in minimization of symptoms and delayed diagnosis. Clinicians should evaluate patients with suspected and diagnosed EoE for behaviors using the IMPACT acronym: Imbibe fluids with meals; Modify food; Prolong meal times; Avoid hard texture foods; Chew excessively; Turn away tablets/pills."
              },
              {
                id: "Sharese-Specialist-q3",
                questionText:
                  "What is the FDA-approved dosing of budesonide oral suspension for an adult (age >18 years) with EoE?",
                options: [
                  { id: "A", text: "1 mg/d once daily" },
                  { id: "B", text: "1 mg/d twice daily" },
                  { id: "C", text: "2 mg/d once daily" },
                  { id: "D", text: "2 mg/d twice daily" }
                ],
                correctAnswer: "D",
                rationale:
                  "The FDA-approved dosing for budesonide oral suspension (BOS) is 2 mg twice daily (it should be noted that the 2025 ACG guidelines suggest a dosage of 2-4 mg/d either once or twice daily). BOS is an immediate-release topical corticosteroid given as a viscous suspension to lengthen its survival time on the esophageal mucosal surface following oral administration. BOS is currently approved for the treatment of EoE in individuals aged 11 years and older based on data from a pair of phase 3 trials showing that patients treated with BOS 2 mg twice daily were significantly more likely than those treated with placebo to achieve both stringent histological and symptom response at 12 weeks. Improved endoscopic outcomes were also seen in these trials."
              },
              {
                id: "Sharese-Specialist-q4",
                questionText:
                  "Which of the following tests is a non-invasive alternative to upper EGD with biopsy for assessing histological response to treatment?",
                options: [
                  { id: "A", text: "Barium swallow esophagram" },
                  { id: "B", text: "EndoFLIP" },
                  { id: "C", text: "Esophageal String Test" },
                  { id: "D", text: "Symptom presentation" }
                ],
                correctAnswer: "C",
                rationale:
                  "The Esophageal String Test (EST) involves the swallowing of a weighted string capsule that remains in the esophagus for 1 hour to absorb inflammatory factors. It has demonstrated a strong correlation with endoscopic results in studies of pediatric and adult patients with EoE. Another non-invasive option for assessing esophageal eosinophil levels is the cytosponge, in which a small, round brush inside a capsule on a string is swallowed, allowed to expand in the esophagus for 5-10 minutes, and then pulled out through the mouth. The brush collects cells from the esophagus for testing. There are currently no validated noninvasive biomarkers to assess treatment response in EoE. Barium swallow esophagram and EndoFLIP (which is used during upper EGD) are only used for assessment of fibrostenosis or strictures. Symptom presentation is not a suitable measure of histological and biological response to treatment."
              },
              {
                id: "Sharese-Specialist-q5",
                questionText:
                  "During upper endoscopy, a critical stricture is identified, and dilation is performed. Based on Sharese\u2019s disease status and current life circumstances, which of the following would be the optimal adjustment to her drug treatment regimen following this procedure?",
                options: [
                  {
                    id: "A",
                    text: "Continue on omeprazole 20 mg twice daily and reassess in 12 weeks"
                  },
                  {
                    id: "B",
                    text: "Increase dose of omeprazole to 30 mg twice daily and reassess in 12 weeks"
                  },
                  {
                    id: "C",
                    text: "Add budesonide oral suspension 2 mg/d twice a day to omeprazole 20 mg twice daily"
                  },
                  {
                    id: "D",
                    text: "Replace omeprazole 20 mg twice daily with esomeprazole 40 mg once daily"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "Budesonide oral suspension (BOS) is an appropriate option given Sharese\u2019s I-SEE results and self-reported challenges with adhering to her food elimination diet. Approximately two-thirds of patients treated with PPIs fail to achieve histologic remission, and therefore use of a different PPI is less likely to improve Sharese\u2019s condition. Swallowed topical corticosteroids such as BOS may be prescribed as monotherapy or in combination with PPIs. The 2025 ACG Guidelines strongly recommend the use of corticosteroids (the only therapy to receive this level of support) based on multiple trials showing that approximately two-thirds of EoE patients will achieve a histologic response with corticosteroid use. Omeprazole at 30 mg twice daily is not a recommended dosage for patients with EoE."
              },
              {
                id: "Sharese-Specialist-q6",
                questionText:
                  "How soon after initiation of BOS should Sharese undergo a follow-up upper EGD to assess any potential improvement?",
                options: [
                  { id: "A", text: "4-7 weeks after its initiation" },
                  { id: "B", text: "8-12 weeks after its initiation" },
                  { id: "C", text: "13-16 weeks after its initiation" },
                  { id: "D", text: "17-20 weeks after its initiation" }
                ],
                correctAnswer: "B",
                rationale:
                  "According to the 2025 ACG Guidelines, a repeat endoscopy to assess treatment response to PPIs, swallowed topical steroids, or food elimination diet is recommended in 8-12 weeks. Clinical trial findings indicate that repeat endoscopy following treatment initiation with dupilumab may range between 12 and 24 weeks. However, monitoring times may vary depending on patient features."
              },
              {
                id: "Sharese-Specialist-q7",
                questionText:
                  "Before she begins on her new treatment regimen of BOS + omeprazole, Sharese expresses some concern about side effects of STCs that may impact her social life at college (\u201cThis has been hard enough the last few weeks,\u201d she tells you). Which of the following side effects should you emphasize as most likely to occur?",
                options: [
                  { id: "A", text: "Mild esophageal candidiasis" },
                  { id: "B", text: "Adrenal insufficiency" },
                  { id: "C", text: "Weight gain" },
                  { id: "D", text: "Diarrhea" }
                ],
                correctAnswer: "A",
                rationale:
                  "Oral and/or esophageal candidiasis is the most reported side effect of STCs, including BOS. Rates of candidal infection ranged from 3.8% during a phase 3 trial of BOS to 23.7% in a European randomized trial of budesonide orodispersible tablets (BOT). However, most cases of candidiasis are asymptomatic and manageable with intermittent use of antifungal agents. Weight gain and diarrhea were not reported as frequent side effects in studies of STCs in patients with EoE. Induction trials of BOS and BOT in adults, along with a pediatric observational study, found adrenal insufficiency in <5% of patients. The ACG 2025 Guidelines note that an assessment of adrenal function prior to prescribing corticosteroids may be considered in patients who are candidates for its continuous, long-term administration."
              },
              {
                id: "Sharese-Specialist-q8",
                questionText:
                  "As Sharese nears the completion of her college studies, you discuss with her the need to transition care from your pediatric practice to an adult practice near where she has accepted a job (it\u2019s about a 45-minute drive from your office). According to Got Transition\u00ae protocols, which of the following should be the first element within your transition planning?",
                options: [
                  {
                    id: "A",
                    text: "Assess Sharese\u2019s health care transition readiness skills"
                  },
                  {
                    id: "B",
                    text: "Develop a flowsheet within your EMR to track the transition"
                  },
                  {
                    id: "C",
                    text: "Create a written transition and care policy/guide within your practice"
                  },
                  {
                    id: "D",
                    text: "Identify an adult clinician for the transfer of care"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "Got Transition\u00ae is a program of The National Alliance to Advance Adolescent Health that was established to improve the transition from pediatric to adult healthcare through the use of evidence-driven strategies for clinicians and other health care professionals. There are six core elements laid out to assist adolescent patients and their providers in transitioning from a pediatric to an adult healthcare practice that should be completed in sequence. These elements involve the following steps: Develop a written transition and care policy/guide within your practice; Develop a process to track receipt of the six core elements, integrating with your EMR when possible; Develop and regularly update the plan of care; Conduct regular transition readiness assessments with your patients as they enter adolescence and/or early adulthood; Complete the care transfer package once transition readiness is confirmed; Contact the patient and/or parent 3-6 months after the last pediatric visit to confirm attendance at first adult appointment."
              },
              {
                id: "Ivan-Specialist-q1",
                questionText:
                  "According to the 2025 ACG Guidelines, diagnosis of EoE requires all of the following EXCEPT:",
                options: [
                  {
                    id: "A",
                    text: "PPI trial followed by repeat endoscopy with biopsy"
                  },
                  {
                    id: "B",
                    text: "Upper endoscopy with biopsy showing \u226515 eos/hpf (or ~60 eos/mm2) on biopsy"
                  },
                  {
                    id: "C",
                    text: "Evaluation of non-EoE causes of esophageal eosinophilia"
                  },
                  {
                    id: "D",
                    text: "Evaluation of chronic symptoms indicative of esophageal dysfunction"
                  }
                ],
                correctAnswer: "A",
                rationale:
                  "The 2025 ACG guidelines update eliminated the requirement for a PPI trial before diagnosing EoE to rule out inflammation related to GERD. This change was based on extensive data indicating that patients responding to PPIs exhibit similar clinical, endoscopic, histological, immunological, and molecular characteristics as those with EoE who do not respond to PPIs. This suggests that PPIs are an effective treatment for EoE through novel mechanisms and not solely through gastric acid suppression. Furthermore, research shows a complex relationship between EoE and GERD, and not an independent disease course as previously suspected."
              },
              {
                id: "Ivan-Specialist-q2",
                questionText:
                  "All of the following statements about the use of PPIs in patients with EoE are true EXCEPT:",
                options: [
                  {
                    id: "A",
                    text: "PPIs decrease the expression of eotaxin-3"
                  },
                  { id: "B", text: "PPIs improve esophageal barrier function" },
                  {
                    id: "C",
                    text: "PPIs are effective as standalone treatment for a duration of only 6-9 months"
                  },
                  {
                    id: "D",
                    text: "PPIs help to maintain esophageal epithelial transcriptional homeostasis"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "Data support the long-term efficacy of PPIs, with several studies showing 70-85% of patients with EoE maintaining PPI response after 1 year. Additionally, one study showed histologic and symptom PPI responses that were maintained in 60% of adults after a mean of 3.6 years. Choices A, B, and D listed here are all novel mechanisms described as part of PPI therapy in patients with EoE."
              },
              {
                id: "Ivan-Specialist-q3",
                questionText:
                  "In order to achieve a sensitivity of nearly 100% in suspected cases of EoE, how many biopsies should be collected during endoscopy?",
                options: [
                  { id: "A", text: "One" },
                  { id: "B", text: "Three" },
                  { id: "C", text: "Four" },
                  { id: "D", text: "Six" }
                ],
                correctAnswer: "D",
                rationale:
                  "Studies have demonstrated that collecting six or more biopsies leads to a diagnostic sensitivity of nearly 100% in patients with suspected EoE. The 2025 ACG Guidelines recommend collecting at least six biopsies from a minimum of two different locations in the esophagus (e.g., proximal, mid, and distal) while concentrating on sections that show visual inflammation, if available."
              },
              {
                id: "Ivan-Specialist-q4",
                questionText:
                  "Which of the following agents is currently under late-stage investigation for the treatment of EoE?",
                options: [
                  { id: "A", text: "Resmetirom" },
                  { id: "B", text: "Mirikizumab" },
                  { id: "C", text: "Semaglutide" },
                  { id: "D", text: "Tezepelumab" }
                ],
                correctAnswer: "D",
                rationale:
                  "Tezepelumab is a potential first-in-class monoclonal antibody that inhibits the action of thymic stromal lymphopoietin. Tezepelumab was granted orphan drug designation by the FDA for the treatment of EoE in 2021. Phase 3 studies of tezepelumab have been conducted in patients with asthma (it is approved for this indication), chronic obstructive pulmonary disease, and other inflammatory conditions. A phase 3 trial in EoE is currently underway, with planned completion in 2027. Etrasimod, an oral, once-daily, selective sphingosine 1-phosphate receptor modulator, is another novel treatment currently under investigation for the treatment of EoE. The other drugs listed here are being investigated for the treatment of other GI conditions, but not in EoE."
              },
              {
                id: "Ivan-Specialist-q5",
                questionText:
                  "How should Ivan\u2019s current medications be managed prior to conducting a diagnostic upper EGD with biopsy?",
                options: [
                  {
                    id: "A",
                    text: "Continue on esomeprazole only prior to procedure"
                  },
                  {
                    id: "B",
                    text: "Continue on fluticasone only prior to procedure"
                  },
                  {
                    id: "C",
                    text: "Continue both current medications prior to procedure"
                  },
                  {
                    id: "D",
                    text: "Pause both esomeprazole and fluticasone for 8 weeks prior to procedure"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "Given the progressive nature of Ivan\u2019s dysphagia, expeditious workup with an upper endoscopy is advised. While a diagnostic endoscopy would ideally be performed prior to the initiation of PPI therapy, given that Ivan is already taking esomeprazole for his ongoing reflux symptoms and fluticasone for his seasonal allergies, in addition to the fact that he continues to have active symptoms, both of his medications should be continued prior to endoscopy to minimize risk during sedation and control his overall symptoms. In fact, if biopsies demonstrate esophageal eosinophilia, that will suggest non-response to PPI and allow more expeditious transition to another treatment."
              },
              {
                id: "Ivan-Specialist-q6",
                questionText:
                  "During Ivan\u2019s upper EGD with biopsy, the standard endoscope is able to pass easily into the esophageal lumen. Visible stricturing is present, and diameter as measured by endoscope is 13.2 mm. His I-SEE results demonstrate mild disease. Based on these results, what would be the best plan of action?",
                options: [
                  {
                    id: "A",
                    text: "Schedule patient for a barium swallow esophagram to confirm the stricture prior to treatment"
                  },
                  {
                    id: "B",
                    text: "Proceed with diet and/or drug therapy without dilation, and repeat endoscopy after 8-12 weeks to reassess for narrowing"
                  },
                  {
                    id: "C",
                    text: "Proceed with conservative esophageal dilation in conjunction with the endoscopy and stop once mucosal disruption is seen; start immediate concomitant medical or dietary therapy"
                  },
                  {
                    id: "D",
                    text: "Proceed with conservative esophageal dilation in conjunction with the endoscopy and stop once mucosal disruption is seen; do not prescribe medical therapy until repeat endoscopy is performed"
                  }
                ],
                correctAnswer: "C",
                rationale:
                  "The 2025 ACG Guidelines recommend dilation as an adjunctive treatment to medication for esophageal strictures to treat both EoE disease pathogenesis as well as dysphagia symptoms. Studies show that the consistent use of PPIs and swallowed topical steroids can reduce the number and frequency of dilations, so introduction of medical therapy should also be a part of this patient\u2019s therapeutic plan. In cases where a stricture can be detected endoscopically, barium swallow esophagram is not warranted for confirmatory purposes; however, it may be offered as a non-invasive alternative if available, especially in pediatric cases."
              },
              {
                id: "Ivan-Specialist-q7",
                questionText:
                  "Following endoscopy and dilation, what adjustment(s) should be made to Ivan\u2019s drug treatment plan?",
                options: [
                  {
                    id: "A",
                    text: "Continue with current esomeprazole dose/dose frequency and reassess in 8 weeks"
                  },
                  {
                    id: "B",
                    text: "Change esomeprazole dosage from 40 mg once daily to 20 mg twice daily"
                  },
                  {
                    id: "C",
                    text: "Increase esomeprazole dosage from 40 mg once daily to 40 mg twice daily"
                  },
                  {
                    id: "D",
                    text: "Continue esomeprazole; prescribe budesonide oral suspension 4 mg/d, divided twice daily"
                  }
                ],
                correctAnswer: "D",
                rationale:
                  "Based on Ivan\u2019s current symptoms, modification to his current treatment regimen is warranted. Adding a trial of swallowed topical corticosteroid such as budesonide oral suspension to Ivan\u2019s current PPI, followed by re-evaluation in 8-12 weeks, is the most suitable option at this time given his discussion about wanting to avoid dietary changes. According to the 2025 ACG Guidelines, a single anti-inflammatory agent should be prescribed (either PPIs or STCs) as there is a lack of data on the effectiveness of combined therapies. However, in patients like Ivan who have concomitant reflux symptoms and some level of response to a PPI, this may be continued. Dupilumab injections would be another possible consideration at this time."
              },
              {
                id: "Ivan-Specialist-q8",
                questionText:
                  "At his 12-week follow-up endoscopy after initiation of BOS, Ivan\u2019s histologic indicators have not improved (33 eos/hpf), and you make the shared decision to shift to treatment with dupilumab. Before he begins on his new treatment plan, you review the most likely adverse events related to dupilumab with Ivan. Which of the following would you emphasize as being most likely to occur?",
                options: [
                  { id: "A", text: "Gastritis" },
                  { id: "B", text: "Oropharyngeal pain" },
                  { id: "C", text: "Arthralgia" },
                  { id: "D", text: "Immunosuppression" }
                ],
                correctAnswer: "C",
                rationale:
                  "The most commonly reported adverse reactions in patients treated with dupilumab for EoE (incidence \u22652%) are arthralgia, injection site reactions, upper respiratory tract infections, and herpes viral infections. Gastritis, oropharyngeal pain, and myalgia are not reported at this incidence for EoE patients; however, they are noted as occurring in \u22652% of patients treated with dupilumab for other indications so should still be on a clinician's radar. Because dupilumab is not an immunosuppressant, broad immunosuppression is not a common issue associated with the medication."
              },
              {
                id: "Kelvin-Pcp-q1",
                questionText:
                  "Which of the following is a risk factor for the development of eosinophilic esophagitis (EoE)?",
                options: [
                  { id: "A", text: "Female sex" },
                  { id: "B", text: "Birth via C-section" },
                  { id: "C", text: "Smoking" },
                  {
                    id: "D",
                    text: "A diet high in caffeine, alcohol, and/or fat"
                  }
                ],
                correctAnswer: "B",
                rationale:
                  'Studies have found that individuals born prematurely or via C-section, those not exclusively breastfed, and infants who received antibiotics have a higher risk of developing EoE. These factors are also believed to contribute to the development of other conditions that are part of the "allergic march," including allergies, asthma, and eczema. Males are three times more likely to be diagnosed with EoE than females. Smoking and an unbalanced diet have not been shown to increase an individual\'s risk of developing EoE.'
              },
              {
                id: "Kelvin-Pcp-q2",
                questionText:
                  "Which of the following is a symptom of EoE that commonly manifests in school-aged children (ages 6-14 years)?",
                options: [
                  {
                    id: "A",
                    text: "Weight gain >10 pounds in the last 6 months"
                  },
                  { id: "B", text: "Persistent sore throat" },
                  { id: "C", text: "Heartburn" },
                  { id: "D", text: "Chronic diarrhea" }
                ],
                correctAnswer: "C",
                rationale:
                  "EoE signs and symptoms vary across age groups. The primary symptoms in infants and young children (ages \u22645 years) include sore throat, poor growth, and feeding issues. In school-aged children (ages 6-14 years), abdominal pain, vomiting, and heartburn are common. Adults who develop EoE often present with dysphagia and food impaction. Weight gain and chronic diarrhea are not typically associated with EoE at any age. However, EoE symptoms are often nonspecific and may be consistent with other conditions, making the diagnosis challenging. In younger children, feeding difficulties may be mistaken for \u201ctypical\u201d fussy eating, while in older individuals, symptoms of dysphagia may be masked by adaptive behaviors and food avoidance. These sorts of issues can all contribute to the delayed diagnosis of EoE, which has been frequently cited as a problem across the healthcare spectrum. Tools such as the IMPACT behavioral assessment can be used to distinguish EoE from other diagnoses with overlapping presentation patterns."
              },
              {
                id: "Kelvin-Pcp-q3",
                questionText:
                  "Which of the following biologics is currently approved by the U.S. Food and Drug Administration for the treatment of EoE?",
                options: [
                  { id: "A", text: "Cendakimab" },
                  { id: "B", text: "Dupilumab" },
                  { id: "C", text: "Tezepelumab" },
                  { id: "D", text: "Mepolizumab" }
                ],
                correctAnswer: "B",
                rationale:
                  "Dupilumab, a fully human monoclonal antibody targeting IL-4Ra, reduces type 2 inflammation by blocking interleukin-4 and interleukin-13 signaling (these cytokines play a role in the development of allergic and inflammatory diseases such as EoE). Dupilumab is currently FDA approved for use in children with EoE ages 1 year and older. A three-part, phase 3 trial showed that EoE patients treated with dupilumab weekly were significantly more likely to achieve histologic remission and see amelioration of symptoms compared to those treated with placebo. Cendakimab and tezepelumab are currently being studied for use in EoE but are not yet FDA approved for this indication. Mepolizumab is approved for use in several different conditions, including severe eosinophilic asthma, but a recent study in EoE patients found that mepolizumab was not more effective than placebo at improving dysphagia symptoms."
              },
              {
                id: "Kelvin-Pcp-q4",
                questionText:
                  "Which of the following food groups is the most common trigger for the development of EoE?",
                options: [
                  { id: "A", text: "Red meat" },
                  { id: "B", text: "Poultry" },
                  { id: "C", text: "Wheat" },
                  { id: "D", text: " Stone fruits" }
                ],
                correctAnswer: "C",
                rationale:
                  "Wheat is among the most common food triggers for EoE and is typically included as part of a food elimination diet to identify potential food triggers in patients with EoE. There are several approaches to a food elimination diet, ranging from eliminating one food or food ingredient at a time to up to six foods or ingredients simultaneously. This is then followed by reintroduction of those foods/food ingredients to identify triggers. Other common food allergens that may trigger EoE include dairy, soy, eggs, and nuts. Red meat, poultry, and stone fruits are not considered to be common food allergens associated with EoE."
              },
              {
                id: "Kelvin-Pcp-q5",
                questionText:
                  "Following consultation with a pediatric gastroenterologist, Kelvin is formally diagnosed with EoE. A food elimination trial is initially suggested to identify triggers for Kelvin\u2019s disease. However, Kelvin\u2019s parents are concerned that this will be a challenge given their son\u2019s feeding difficulties. What is the best approach to manage this issue?",
                options: [
                  {
                    id: "A",
                    text: "Refer to an allergist for food allergy testing (IgE and skin prick) to identify triggers"
                  },
                  {
                    id: "B",
                    text: "Refer to a feeding therapist to support the family in addressing feeding behaviors"
                  },
                  {
                    id: "C",
                    text: "Prescribe an elemental formula diet for 12 weeks"
                  },
                  {
                    id: "D",
                    text: "Refer for aeroallergen testing prior to initiating a food elimination trial"
                  }
                ],
                correctAnswer: "B",
                rationale:
                  "According to the 2025 ACG guidelines, treatment goals for EoE in pediatric patients include monitoring growth, development (including eating skills), and nutrition. Feeding therapy is a recommended adjunctive therapeutic intervention to address food avoidance and maladaptive feeding behaviors. While histologic response to an elemental formula diet is high, it is only recommended in cases of EoE where other treatment options have failed. Skin prick, patch, and serum Ig allergy tests are not recommended to guide food elimination diets for patients with EoE. Aeroallergen testing is not a recommended replacement for a food elimination diet in patients with EoE. Furthermore, the typical course of the atopic march involves food allergies in younger children; older children and adults are more likely to have aeroallergen allergies."
              },
              {
                id: "Kelvin-Pcp-q6",
                questionText:
                  "Kelvin\u2019s parents express relief after meeting with a feeding specialist and agree to a 6-food elimination diet but remain a bit apprehensive about their son\u2019s future. \u201cHow are we going to explain to Kelvin why he can\u2019t enjoy the same treats and foods as his friends? What happens when he goes to birthday parties, and they serve cake to all of the kids?\u201d What is the best recommendation to address these concerns?",
                options: [
                  {
                    id: "A",
                    text: "Recommend \u201cdiet holidays\u201d where Kelvin can enjoy restricted foods to accommodate social events"
                  },
                  {
                    id: "B",
                    text: "Temporarily introduce use of an inhaled or swallowed corticosteroid during periods when Kelvin may be unable or unwilling to follow a food elimination diet"
                  },
                  {
                    id: "C",
                    text: "Explain that, unfortunately, nothing can be done and that Kelvin will have to cope with these sorts of situations"
                  },
                  {
                    id: "D",
                    text: "Refer Kelvin and his family to behavioral health support to manage any psychosocial adjustments and coping issues related to his EoE"
                  }
                ],
                correctAnswer: "D",
                rationale:
                  "Psychosocial problems such as social difficulties, anxiety, and depression related to EoE can be evaluated by a behavioral health specialist, and effective coping mechanisms can be built to support a child with EoE and his family that helps them adhere to their treatment plan with minimal mental and behavioral detriments. While the ACG guidelines suggest that \u201cdiet holidays\u201d can be considered periodically for adult patients to accommodate life or social events (usually accompanied by medical therapy), this approach is more challenging for children as they may be unwilling to return to a more restrictive diet once the \u201choliday\u201d expires."
              },
              {
                id: "Kelvin-Pcp-q7",
                questionText:
                  "Twelve weeks after the start of a restrictive 6-food elimination diet (SFED), Kelvin\u2019s EoE symptoms are re-evaluated via endoscopy by a pediatric gastroenterologist. Results show the presence of active disease, with loss of vascular markings, linear furrows, and mild white plaques. Esophageal biopsies reveal persistently high eosinophils, confirming that Kelvin\u2019s EoE is not in remission despite SFED. Based on these results, which of the following would be the next best treatment suggestion from Kelvin\u2019s gastroenterologist?",
                options: [
                  {
                    id: "A",
                    text: "Fluticasone 122 \u03bcg in 2 puffs 4 times daily"
                  },
                  {
                    id: "B",
                    text: "Budesonide oral suspension 1 mg/d twice a day"
                  },
                  { id: "C", text: "Dupilumab 100 mg subcutaneously Q2W" },
                  { id: "D", text: "Omeprazole 15 mg twice a day" }
                ],
                correctAnswer: "D",
                rationale:
                  "The 2025 ACG Guidelines recommend PPIs such as omeprazole as frontline therapy for pediatric patients with EoE due to their low cost and acceptable long-term safety. A meta-analysis of 33 studies of PPI use in children and adults with EoE (variable reported duration of treatment) found that 50% of patients achieved histologic remission. Current guidelines suggest that cost of treatment and insurance coverage should be a consideration within the shared decision-making process, particularly when dealing with potential off-label use of therapies such as fluticasone. One more important item to note here: The listed doses of budesonide, fluticasone, and dupilumab are all inappropriate for a toddler. More commonly, they would be given as follows in toddlers: budesonide 0.5 mg BID, fluticasone 44 \u03bcg in 2 puffs BID, dupilumab 200 mg subcutaneously Q2W."
              },
              {
                id: "Kelvin-Pcp-q8",
                questionText:
                  "[PLACEHOLDER - Kelvin-Pcp-q8] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Kelvin-Pcp-q8] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Kelvin-Pcp-q8] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Kelvin-Pcp-q8] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Kelvin-Pcp-q8] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Kelvin-Pcp-q8]",
                rationale:
                  "[PLACEHOLDER - Kelvin-Pcp-q8] Rationale will be added here"
              },
              {
                id: "Kelvin-Final-q1",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Kelvin-Final-q2",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Kelvin-Final-q3",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Kelvin-Final-q4",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Sharese-Pcp-q1",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q1] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q1] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q1] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q1] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q1] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q1]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q1] Rationale will be added here"
              },
              {
                id: "Sharese-Pcp-q2",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q2] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q2] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q2] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q2] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q2] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q2]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q2] Rationale will be added here"
              },
              {
                id: "Sharese-Pcp-q3",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q3] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q3] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q3] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q3] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q3] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q3]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q3] Rationale will be added here"
              },
              {
                id: "Sharese-Pcp-q4",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q4] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q4] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q4] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q4] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q4] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q4]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q4] Rationale will be added here"
              },
              {
                id: "Sharese-Pcp-q5",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q5] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q5] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q5] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q5] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q5] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q5]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q5] Rationale will be added here"
              },
              {
                id: "Sharese-Pcp-q6",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q6] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q6] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q6] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q6] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q6] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q6]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q6] Rationale will be added here"
              },
              {
                id: "Sharese-Pcp-q7",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q7] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q7] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q7] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q7] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q7] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q7]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q7] Rationale will be added here"
              },
              {
                id: "Sharese-Pcp-q8",
                questionText:
                  "[PLACEHOLDER - Sharese-Pcp-q8] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Sharese-Pcp-q8] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Sharese-Pcp-q8] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Sharese-Pcp-q8] Option C text"
                  },
                  {
                    id: "D",
                    text: "[PLACEHOLDER - Sharese-Pcp-q8] Option D text"
                  }
                ],
                correctAnswer: "[PLACEHOLDER - Sharese-Pcp-q8]",
                rationale:
                  "[PLACEHOLDER - Sharese-Pcp-q8] Rationale will be added here"
              },
              {
                id: "Sharese-Final-q1",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Sharese-Final-q2",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Sharese-Final-q3",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Sharese-Final-q4",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Ivan-Pcp-q1",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q1] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q1] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q1] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q1] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q1] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q1]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q1] Rationale will be added here"
              },
              {
                id: "Ivan-Pcp-q2",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q2] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q2] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q2] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q2] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q2] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q2]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q2] Rationale will be added here"
              },
              {
                id: "Ivan-Pcp-q3",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q3] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q3] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q3] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q3] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q3] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q3]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q3] Rationale will be added here"
              },
              {
                id: "Ivan-Pcp-q4",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q4] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q4] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q4] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q4] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q4] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q4]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q4] Rationale will be added here"
              },
              {
                id: "Ivan-Pcp-q5",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q5] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q5] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q5] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q5] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q5] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q5]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q5] Rationale will be added here"
              },
              {
                id: "Ivan-Pcp-q6",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q6] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q6] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q6] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q6] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q6] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q6]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q6] Rationale will be added here"
              },
              {
                id: "Ivan-Pcp-q7",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q7] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q7] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q7] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q7] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q7] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q7]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q7] Rationale will be added here"
              },
              {
                id: "Ivan-Pcp-q8",
                questionText:
                  "[PLACEHOLDER - Ivan-Pcp-q8] Question text will be added here",
                options: [
                  {
                    id: "A",
                    text: "[PLACEHOLDER - Ivan-Pcp-q8] Option A text"
                  },
                  {
                    id: "B",
                    text: "[PLACEHOLDER - Ivan-Pcp-q8] Option B text"
                  },
                  {
                    id: "C",
                    text: "[PLACEHOLDER - Ivan-Pcp-q8] Option C text"
                  },
                  { id: "D", text: "[PLACEHOLDER - Ivan-Pcp-q8] Option D text" }
                ],
                correctAnswer: "[PLACEHOLDER - Ivan-Pcp-q8]",
                rationale:
                  "[PLACEHOLDER - Ivan-Pcp-q8] Rationale will be added here"
              },
              {
                id: "Ivan-Final-q1",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Ivan-Final-q2",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Ivan-Final-q3",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              },
              {
                id: "Ivan-Final-q4",
                questionText: "{placeholder}",
                options: [
                  { id: "A", text: "{placeholder}" },
                  { id: "B", text: "{placeholder}" },
                  { id: "C", text: "{placeholder}" },
                  { id: "D", text: "{placeholder}" }
                ],
                correctAnswer: "{placeholder}",
                rationale: "{placeholder}"
              }
            ]
          }
        },
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "modal",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.modal
      },
      {
        path: "q1Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "q2Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "q3Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "q4Answer",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "refOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "computer.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanSpecialist4.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanShelf.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "ivanScreen.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese1.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese2.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese3.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "diagram.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "sharese4.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "bookshelf.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "bed.isSelected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "computer.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanSpecialist4.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanShelf.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "ivanScreen.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese1.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese2.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese3.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "diagram.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "sharese4.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "bookshelf.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "bed.step",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.root,
        {
          [sty.rootmodal_ivanDoor]: hasVariant($state, "modal", "ivanDoor"),
          [sty.rootmodal_ivanPcp2]: hasVariant($state, "modal", "ivanPcp2"),
          [sty.rootmodal_ivanPcp3]: hasVariant($state, "modal", "ivanPcp3"),
          [sty.rootmodal_ivanPcp4]: hasVariant($state, "modal", "ivanPcp4"),
          [sty.rootmodal_kelvinDoor]: hasVariant($state, "modal", "kelvinDoor"),
          [sty.rootmodal_kelvinPcp1]: hasVariant($state, "modal", "kelvinPcp1"),
          [sty.rootmodal_kelvinPcp2]: hasVariant($state, "modal", "kelvinPcp2"),
          [sty.rootmodal_kelvinPcp3]: hasVariant($state, "modal", "kelvinPcp3"),
          [sty.rootmodal_kelvinPcp4]: hasVariant($state, "modal", "kelvinPcp4"),
          [sty.rootmodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.rootmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
          [sty.rootmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.rootmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
          [sty.rootmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
          [sty.rootmodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
          [sty.rootmodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
          [sty.rootmodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
          [sty.rootmodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
          [sty.rootmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
          [sty.rootmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
          [sty.rootmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
          [sty.rootmodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
          [sty.rootmodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.rootmodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.rootmodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.rootmodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.rootmodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          )
        }
      )}
    >
      <div
        data-plasmic-name={"roomPlan"}
        data-plasmic-override={overrides.roomPlan}
        className={classNames(projectcss.all, sty.roomPlan, {
          [sty.roomPlanmodal_ivanDoor]: hasVariant($state, "modal", "ivanDoor"),
          [sty.roomPlanmodal_ivanPcp2]: hasVariant($state, "modal", "ivanPcp2"),
          [sty.roomPlanmodal_ivanPcp3]: hasVariant($state, "modal", "ivanPcp3"),
          [sty.roomPlanmodal_ivanPcp4]: hasVariant($state, "modal", "ivanPcp4"),
          [sty.roomPlanmodal_kelvinDoor]: hasVariant(
            $state,
            "modal",
            "kelvinDoor"
          ),
          [sty.roomPlanmodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.roomPlanmodal_kelvinPcp3]: hasVariant(
            $state,
            "modal",
            "kelvinPcp3"
          ),
          [sty.roomPlanmodal_kelvinPcp4]: hasVariant(
            $state,
            "modal",
            "kelvinPcp4"
          ),
          [sty.roomPlanmodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.roomPlanmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.roomPlanmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
          [sty.roomPlanmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
          [sty.roomPlanmodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
          [sty.roomPlanmodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
          [sty.roomPlanmodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
          [sty.roomPlanmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
          [sty.roomPlanmodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
          [sty.roomPlanmodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.roomPlanmodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.roomPlanmodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.roomPlanmodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.roomPlanmodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          )
        })}
      >
        <div
          className={classNames(projectcss.all, sty.freeBox__z1BQ7, {
            [sty.freeBoxmodal_kelvinDoor__z1BQ75Ef7H]: hasVariant(
              $state,
              "modal",
              "kelvinDoor"
            ),
            [sty.freeBoxmodal_kelvinPcp1__z1BQ7ZoT41]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            )
          })}
        >
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__uGgVq)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"500px"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: "/plasmic/escape_room/images/image7.svg",
              fullWidth: 645.49,
              fullHeight: 364.11,
              aspectRatio: 1.772788
            }}
          />
        </div>
      </div>
      <div
        data-plasmic-name={"roomScene"}
        data-plasmic-override={overrides.roomScene}
        className={classNames(projectcss.all, sty.roomScene, {
          [sty.roomScenemodal_ivanDoor]: hasVariant(
            $state,
            "modal",
            "ivanDoor"
          ),
          [sty.roomScenemodal_ivanPcp2]: hasVariant(
            $state,
            "modal",
            "ivanPcp2"
          ),
          [sty.roomScenemodal_ivanPcp3]: hasVariant(
            $state,
            "modal",
            "ivanPcp3"
          ),
          [sty.roomScenemodal_ivanPcp4]: hasVariant(
            $state,
            "modal",
            "ivanPcp4"
          ),
          [sty.roomScenemodal_kelvinDoor]: hasVariant(
            $state,
            "modal",
            "kelvinDoor"
          ),
          [sty.roomScenemodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.roomScenemodal_kelvinPcp2]: hasVariant(
            $state,
            "modal",
            "kelvinPcp2"
          ),
          [sty.roomScenemodal_kelvinPcp3]: hasVariant(
            $state,
            "modal",
            "kelvinPcp3"
          ),
          [sty.roomScenemodal_kelvinPcp4]: hasVariant(
            $state,
            "modal",
            "kelvinPcp4"
          ),
          [sty.roomScenemodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.roomScenemodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
          [sty.roomScenemodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.roomScenemodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
          [sty.roomScenemodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
          [sty.roomScenemodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
          [sty.roomScenemodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
          [sty.roomScenemodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
          [sty.roomScenemodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
          [sty.roomScenemodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
          [sty.roomScenemodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
          [sty.roomScenemodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
          [sty.roomScenemodal_rm3Hs4]: hasVariant($state, "modal", "rm3Hs4"),
          [sty.roomScenemodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.roomScenemodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.roomScenemodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.roomScenemodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.roomScenemodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          )
        })}
      >
        <div
          data-plasmic-name={"kelvinTitleBanner"}
          data-plasmic-override={overrides.kelvinTitleBanner}
          className={classNames(projectcss.all, sty.kelvinTitleBanner, {
            [sty.kelvinTitleBannermodal_lamp]: hasVariant(
              $state,
              "modal",
              "lamp"
            ),
            [sty.kelvinTitleBannermodal_rm1Hs1]: hasVariant(
              $state,
              "modal",
              "rm1Hs1"
            ),
            [sty.kelvinTitleBannermodal_rm1Hs2]: hasVariant(
              $state,
              "modal",
              "rm1Hs2"
            ),
            [sty.kelvinTitleBannermodal_rm2Hs1]: hasVariant(
              $state,
              "modal",
              "rm2Hs1"
            )
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__mJdd3, {
              [sty.freeBoxmodal_lamp__mJdd31Vv9P]: hasVariant(
                $state,
                "modal",
                "lamp"
              ),
              [sty.freeBoxmodal_rm2Hs1__mJdd3CWWw]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              )
            })}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6OCbv,
                {
                  [sty.textmodal_ivanDoor___6OCbv6WQsX]: hasVariant(
                    $state,
                    "modal",
                    "ivanDoor"
                  ),
                  [sty.textmodal_rm2Hs4___6OCbvpHpy7]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs4"
                  ),
                  [sty.textmodal_rm3Hs1___6OCbvxjzOf]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs1"
                  ),
                  [sty.textmodal_rm3Hs2___6OCbvBlyoB]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  )
                }
              )}
            >
              {hasVariant($state, "modal", "rm3Hs2")
                ? "Ivan's Exam Room"
                : hasVariant($state, "modal", "rm3Hs1")
                  ? "Ivan's Exam Room"
                  : "Kelvin's Exam Room"}
            </div>
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__uoHiM, {
              [sty.freeBoxmodal_rm2Hs1__uoHiMcWWw]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              )
            })}
          />
        </div>
        <div
          data-plasmic-name={"kelvinSpecialist"}
          data-plasmic-override={overrides.kelvinSpecialist}
          className={classNames(projectcss.all, sty.kelvinSpecialist, {
            [sty.kelvinSpecialistmodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.kelvinSpecialistmodal_ivanPcp2]: hasVariant(
              $state,
              "modal",
              "ivanPcp2"
            ),
            [sty.kelvinSpecialistmodal_ivanPcp3]: hasVariant(
              $state,
              "modal",
              "ivanPcp3"
            ),
            [sty.kelvinSpecialistmodal_ivanPcp4]: hasVariant(
              $state,
              "modal",
              "ivanPcp4"
            ),
            [sty.kelvinSpecialistmodal_kelvinDoor]: hasVariant(
              $state,
              "modal",
              "kelvinDoor"
            ),
            [sty.kelvinSpecialistmodal_kelvinPcp1]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            ),
            [sty.kelvinSpecialistmodal_kelvinPcp2]: hasVariant(
              $state,
              "modal",
              "kelvinPcp2"
            ),
            [sty.kelvinSpecialistmodal_kelvinPcp3]: hasVariant(
              $state,
              "modal",
              "kelvinPcp3"
            ),
            [sty.kelvinSpecialistmodal_kelvinPcp4]: hasVariant(
              $state,
              "modal",
              "kelvinPcp4"
            ),
            [sty.kelvinSpecialistmodal_lamp]: hasVariant(
              $state,
              "modal",
              "lamp"
            ),
            [sty.kelvinSpecialistmodal_rm1Hs1]: hasVariant(
              $state,
              "modal",
              "rm1Hs1"
            ),
            [sty.kelvinSpecialistmodal_rm1Hs2]: hasVariant(
              $state,
              "modal",
              "rm1Hs2"
            ),
            [sty.kelvinSpecialistmodal_rm1Hs3]: hasVariant(
              $state,
              "modal",
              "rm1Hs3"
            ),
            [sty.kelvinSpecialistmodal_rm1Hs4]: hasVariant(
              $state,
              "modal",
              "rm1Hs4"
            ),
            [sty.kelvinSpecialistmodal_rm2Hs1]: hasVariant(
              $state,
              "modal",
              "rm2Hs1"
            ),
            [sty.kelvinSpecialistmodal_rm2Hs2]: hasVariant(
              $state,
              "modal",
              "rm2Hs2"
            ),
            [sty.kelvinSpecialistmodal_rm2Hs3]: hasVariant(
              $state,
              "modal",
              "rm2Hs3"
            ),
            [sty.kelvinSpecialistmodal_rm2Hs4]: hasVariant(
              $state,
              "modal",
              "rm2Hs4"
            ),
            [sty.kelvinSpecialistmodal_rm3Hs1]: hasVariant(
              $state,
              "modal",
              "rm3Hs1"
            ),
            [sty.kelvinSpecialistmodal_rm3Hs2]: hasVariant(
              $state,
              "modal",
              "rm3Hs2"
            ),
            [sty.kelvinSpecialistmodal_rm3Hs3]: hasVariant(
              $state,
              "modal",
              "rm3Hs3"
            ),
            [sty.kelvinSpecialistmodal_rm3Hs4]: hasVariant(
              $state,
              "modal",
              "rm3Hs4"
            ),
            [sty.kelvinSpecialistmodal_shareseDoor]: hasVariant(
              $state,
              "modal",
              "shareseDoor"
            ),
            [sty.kelvinSpecialistmodal_sharesePcp2]: hasVariant(
              $state,
              "modal",
              "sharesePcp2"
            ),
            [sty.kelvinSpecialistmodal_sharesePcp3]: hasVariant(
              $state,
              "modal",
              "sharesePcp3"
            ),
            [sty.kelvinSpecialistmodal_sharesePcp4]: hasVariant(
              $state,
              "modal",
              "sharesePcp4"
            )
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__ziE3K, {
              [sty.freeBoxmodal_kelvinDoor__ziE3K5Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_lamp__ziE3K1Vv9P]: hasVariant(
                $state,
                "modal",
                "lamp"
              ),
              [sty.freeBoxmodal_rm1Hs4__ziE3KqEe8P]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.freeBoxmodal_rm2Hs1__ziE3KcWWw]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.freeBoxmodal_shareseDoor__ziE3Kioige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.freeBoxmodal_unnamedVariant__ziE3KgLIdS]: hasVariant(
                $state,
                "modal",
                "unnamedVariant"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__gzRoc, {
                [sty.hotspotmodal_rm2Hs1__gzRoccWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"bookshelf3"}
            data-plasmic-override={overrides.bookshelf3}
            className={classNames(projectcss.all, sty.bookshelf3)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__wUgU5, {
                [sty.imgmodal_rm1Hs1__wUgU5X9Qua]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                )
              })}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"303px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/bookshelfKelvinSpecialistSvg2.svg",
                fullWidth: 409,
                fullHeight: 304,
                aspectRatio: 1.345395
              }}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__h75BD, {
              [sty.freeBoxmodal_kelvinDoor__h75BD5Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_shareseDoor__h75BDioige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__bH0Lp)}
              size={"_50Px"}
            />
          </div>
          <InstructionBanner
            className={classNames(
              "__wab_instance",
              sty.instructionBanner__qV2JD,
              {
                [sty.instructionBannermodal_lamp__qV2JD1Vv9P]: hasVariant(
                  $state,
                  "modal",
                  "lamp"
                )
              }
            )}
          />

          <div
            className={classNames(projectcss.all, sty.freeBox__eQt22, {
              [sty.freeBoxmodal_kelvinDoor__eQt225Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__tzK3)}
              displayHeight={"50px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"50px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image3.svg",
                fullWidth: 76.24,
                fullHeight: 76.24,
                aspectRatio: 1
              }}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox___2Blk4, {
              [sty.freeBoxmodal_kelvinDoor___2Blk45Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_shareseDoor___2Blk4Ioige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__ay5YO, {
                [sty.hotspotmodal_kelvinDoor__ay5YO5Ef7H]: hasVariant(
                  $state,
                  "modal",
                  "kelvinDoor"
                ),
                [sty.hotspotmodal_rm1Hs4__ay5YOqEe8P]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs4"
                )
              })}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__s08Mk, {
              [sty.freeBoxmodal_shareseDoor__s08MkIoige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__atWwQ, {
                [sty.hotspotmodal_shareseDoor__atWwQioige]: hasVariant(
                  $state,
                  "modal",
                  "shareseDoor"
                )
              })}
              size={"_50Px"}
            />
          </div>
        </div>
        <div
          data-plasmic-name={"shareseSpecialist"}
          data-plasmic-override={overrides.shareseSpecialist}
          className={classNames(projectcss.all, sty.shareseSpecialist, {
            [sty.shareseSpecialistmodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.shareseSpecialistmodal_kelvinDoor]: hasVariant(
              $state,
              "modal",
              "kelvinDoor"
            ),
            [sty.shareseSpecialistmodal_lamp]: hasVariant(
              $state,
              "modal",
              "lamp"
            ),
            [sty.shareseSpecialistmodal_rm1Hs1]: hasVariant(
              $state,
              "modal",
              "rm1Hs1"
            ),
            [sty.shareseSpecialistmodal_rm1Hs3]: hasVariant(
              $state,
              "modal",
              "rm1Hs3"
            ),
            [sty.shareseSpecialistmodal_rm1Hs4]: hasVariant(
              $state,
              "modal",
              "rm1Hs4"
            ),
            [sty.shareseSpecialistmodal_rm2Hs1]: hasVariant(
              $state,
              "modal",
              "rm2Hs1"
            ),
            [sty.shareseSpecialistmodal_rm2Hs2]: hasVariant(
              $state,
              "modal",
              "rm2Hs2"
            ),
            [sty.shareseSpecialistmodal_rm2Hs3]: hasVariant(
              $state,
              "modal",
              "rm2Hs3"
            ),
            [sty.shareseSpecialistmodal_rm2Hs4]: hasVariant(
              $state,
              "modal",
              "rm2Hs4"
            ),
            [sty.shareseSpecialistmodal_rm3Hs1]: hasVariant(
              $state,
              "modal",
              "rm3Hs1"
            ),
            [sty.shareseSpecialistmodal_rm3Hs2]: hasVariant(
              $state,
              "modal",
              "rm3Hs2"
            ),
            [sty.shareseSpecialistmodal_rm3Hs3]: hasVariant(
              $state,
              "modal",
              "rm3Hs3"
            )
          })}
        >
          <div
            data-plasmic-name={"hotspot3"}
            data-plasmic-override={overrides.hotspot3}
            className={classNames(projectcss.all, sty.hotspot3, {
              [sty.hotspot3modal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.hotspot3modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.hotspot3modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__nu35L, {
                [sty.hotspotmodal_rm2Hs1__nu35LCWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"bookshelf4"}
            data-plasmic-override={overrides.bookshelf4}
            className={classNames(projectcss.all, sty.bookshelf4, {
              [sty.bookshelf4modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.bookshelf4modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.bookshelf4modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.bookshelf4modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              )
            })}
          >
            <PlasmicImg__
              data-plasmic-name={"shareseBookshelf"}
              data-plasmic-override={overrides.shareseBookshelf}
              alt={""}
              className={classNames(sty.shareseBookshelf, {
                [sty.shareseBookshelfmodal_rm2Hs1]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                ),
                [sty.shareseBookshelfmodal_rm2Hs2]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs2"
                ),
                [sty.shareseBookshelfmodal_rm2Hs3]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs3"
                ),
                [sty.shareseBookshelfmodal_rm2Hs4]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs4"
                )
              })}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant($state, "modal", "rm2Hs4")
                  ? "303px"
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? "303px"
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? "303px"
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? "303px"
                        : "303px"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image4.svg",
                fullWidth: 409,
                fullHeight: 304,
                aspectRatio: 1.345395
              }}
            />
          </div>
          <InstructionBanner
            className={classNames(
              "__wab_instance",
              sty.instructionBanner__d12DE,
              {
                [sty.instructionBannermodal_lamp__d12DE1Vv9P]: hasVariant(
                  $state,
                  "modal",
                  "lamp"
                ),
                [sty.instructionBannermodal_rm2Hs1__d12DEcWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              }
            )}
          />

          <div
            data-plasmic-name={"hotspot4"}
            data-plasmic-override={overrides.hotspot4}
            className={classNames(projectcss.all, sty.hotspot4, {
              [sty.hotspot4modal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.hotspot4modal_lamp]: hasVariant($state, "modal", "lamp"),
              [sty.hotspot4modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.hotspot4modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.hotspot4modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__pRkBl)}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__q1R7B, {
              [sty.freeBoxmodal_kelvinDoor__q1R7B5Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_rm2Hs1__q1R7BCWWw]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__kHt4N, {
                [sty.imgmodal_rm2Hs1__kHt4NCWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                ),
                [sty.imgmodal_rm2Hs2__kHt4NJ1J0]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs2"
                )
              })}
              displayHeight={"50px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"50px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image3.svg",
                fullWidth: 76.24,
                fullHeight: 76.24,
                aspectRatio: 1
              }}
            />
          </div>
          <div
            data-plasmic-name={"hotspot2"}
            data-plasmic-override={overrides.hotspot2}
            className={classNames(projectcss.all, sty.hotspot2, {
              [sty.hotspot2modal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.hotspot2modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.hotspot2modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__bLhsh, {
                [sty.hotspotmodal_kelvinDoor__bLhsh5Ef7H]: hasVariant(
                  $state,
                  "modal",
                  "kelvinDoor"
                ),
                [sty.hotspotmodal_rm2Hs1__bLhshcWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                ),
                [sty.hotspotmodal_shareseDoor__bLhshioige]: hasVariant(
                  $state,
                  "modal",
                  "shareseDoor"
                )
              })}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"hotspot1"}
            data-plasmic-override={overrides.hotspot1}
            className={classNames(projectcss.all, sty.hotspot1, {
              [sty.hotspot1modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.hotspot1modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.hotspot1modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__rzaXt, {
                [sty.hotspotmodal_rm2Hs1__rzaXtCWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
              size={"_50Px"}
            />
          </div>
        </div>
        <div
          data-plasmic-name={"ivanSpecialist"}
          data-plasmic-override={overrides.ivanSpecialist}
          className={classNames(projectcss.all, sty.ivanSpecialist, {
            [sty.ivanSpecialistmodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.ivanSpecialistmodal_ivanPcp2]: hasVariant(
              $state,
              "modal",
              "ivanPcp2"
            ),
            [sty.ivanSpecialistmodal_ivanPcp3]: hasVariant(
              $state,
              "modal",
              "ivanPcp3"
            ),
            [sty.ivanSpecialistmodal_kelvinDoor]: hasVariant(
              $state,
              "modal",
              "kelvinDoor"
            ),
            [sty.ivanSpecialistmodal_lamp]: hasVariant($state, "modal", "lamp"),
            [sty.ivanSpecialistmodal_rm1Hs1]: hasVariant(
              $state,
              "modal",
              "rm1Hs1"
            ),
            [sty.ivanSpecialistmodal_rm1Hs3]: hasVariant(
              $state,
              "modal",
              "rm1Hs3"
            ),
            [sty.ivanSpecialistmodal_rm1Hs4]: hasVariant(
              $state,
              "modal",
              "rm1Hs4"
            ),
            [sty.ivanSpecialistmodal_rm3Hs1]: hasVariant(
              $state,
              "modal",
              "rm3Hs1"
            ),
            [sty.ivanSpecialistmodal_rm3Hs2]: hasVariant(
              $state,
              "modal",
              "rm3Hs2"
            ),
            [sty.ivanSpecialistmodal_rm3Hs3]: hasVariant(
              $state,
              "modal",
              "rm3Hs3"
            ),
            [sty.ivanSpecialistmodal_rm3Hs4]: hasVariant(
              $state,
              "modal",
              "rm3Hs4"
            )
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox___8Rl1R, {
              [sty.freeBoxmodal_kelvinDoor___8Rl1R5Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_shareseDoor___8Rl1RIoige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__n5XlV)}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__slDcr, {
              [sty.freeBoxmodal_kelvinDoor__slDcr5Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_shareseDoor__slDcrioige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__eWmiT)}
              size={"_50Px"}
            />
          </div>
          <div
            data-plasmic-name={"bookshelf2"}
            data-plasmic-override={overrides.bookshelf2}
            className={classNames(projectcss.all, sty.bookshelf2)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__qMbr)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"330px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/bookshelfIvanSpecialistSvg2.svg",
                fullWidth: 408,
                fullHeight: 304,
                aspectRatio: 1.342105
              }}
            />
          </div>
          <InstructionBanner
            className={classNames(
              "__wab_instance",
              sty.instructionBanner__e8Op8,
              {
                [sty.instructionBannermodal_lamp__e8Op81Vv9P]: hasVariant(
                  $state,
                  "modal",
                  "lamp"
                )
              }
            )}
          />

          <div
            className={classNames(projectcss.all, sty.freeBox__irecE, {
              [sty.freeBoxmodal_kelvinDoor__irecE5Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_shareseDoor__irecEioige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__ozihQ, {
                [sty.hotspotmodal_kelvinDoor__ozihQ5Ef7H]: hasVariant(
                  $state,
                  "modal",
                  "kelvinDoor"
                )
              })}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__uyXB, {
              [sty.freeBoxmodal_shareseDoor__uyXBioige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <Hotspot
              className={classNames("__wab_instance", sty.hotspot__uOuhx)}
              size={"_50Px"}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__qgyNj, {
              [sty.freeBoxmodal_kelvinDoor__qgyNj5Ef7H]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.freeBoxmodal_shareseDoor__qgyNjIoige]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              )
            })}
            onClick={async event => {
              const $steps = {};
            }}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__fDQX, {
                [sty.imgmodal_rm3Hs2__fDQXBlyoB]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs2"
                )
              })}
              displayHeight={"50px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"50px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image3.svg",
                fullWidth: 76.24,
                fullHeight: 76.24,
                aspectRatio: 1
              }}
            />
          </div>
        </div>
      </div>
      {(
        hasVariant($state, "modal", "rm3Hs4")
          ? true
          : hasVariant($state, "modal", "rm3Hs3")
            ? true
            : hasVariant($state, "modal", "rm3Hs2")
              ? true
              : hasVariant($state, "modal", "rm2Hs4")
                ? true
                : hasVariant($state, "modal", "rm2Hs3")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs1")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs4")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs2")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs1")
                            ? true
                            : (() => {
                                try {
                                  return true;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return true;
                                  }
                                  throw e;
                                }
                              })()
      ) ? (
        <ReferencePanel
          data-plasmic-name={"referencePanel"}
          data-plasmic-override={overrides.referencePanel}
          className={classNames("__wab_instance", sty.referencePanel, {
            [sty.referencePanelmodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.referencePanelmodal_rm1Hs1]: hasVariant(
              $state,
              "modal",
              "rm1Hs1"
            ),
            [sty.referencePanelmodal_rm1Hs2]: hasVariant(
              $state,
              "modal",
              "rm1Hs2"
            ),
            [sty.referencePanelmodal_rm1Hs3]: hasVariant(
              $state,
              "modal",
              "rm1Hs3"
            ),
            [sty.referencePanelmodal_rm1Hs4]: hasVariant(
              $state,
              "modal",
              "rm1Hs4"
            ),
            [sty.referencePanelmodal_rm2Hs1]: hasVariant(
              $state,
              "modal",
              "rm2Hs1"
            ),
            [sty.referencePanelmodal_rm2Hs3]: hasVariant(
              $state,
              "modal",
              "rm2Hs3"
            ),
            [sty.referencePanelmodal_rm2Hs4]: hasVariant(
              $state,
              "modal",
              "rm2Hs4"
            ),
            [sty.referencePanelmodal_rm3Hs2]: hasVariant(
              $state,
              "modal",
              "rm3Hs2"
            ),
            [sty.referencePanelmodal_rm3Hs3]: hasVariant(
              $state,
              "modal",
              "rm3Hs3"
            ),
            [sty.referencePanelmodal_rm3Hs4]: hasVariant(
              $state,
              "modal",
              "rm3Hs4"
            )
          })}
          modal={
            hasVariant($state, "modal", "rm1Hs1") ? "kelvinComputer" : undefined
          }
          refOpen={$state.refOpen}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__gw0W5,
              {
                [sty.textmodal_rm1Hs1__gw0W5X9Qua]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                ),
                [sty.textmodal_rm1Hs2__gw0W5HoV8R]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs2"
                ),
                [sty.textmodal_rm1Hs3__gw0W5GtgMk]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs3"
                ),
                [sty.textmodal_rm1Hs4__gw0W5QEe8P]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs4"
                ),
                [sty.textmodal_rm2Hs1__gw0W5CWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                ),
                [sty.textmodal_rm2Hs2__gw0W5J1J0]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs2"
                ),
                [sty.textmodal_rm2Hs3__gw0W5PvEsk]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs3"
                ),
                [sty.textmodal_rm2Hs4__gw0W5PHpy7]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs4"
                ),
                [sty.textmodal_rm3Hs1__gw0W5XjzOf]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs1"
                ),
                [sty.textmodal_rm3Hs2__gw0W5BlyoB]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs2"
                ),
                [sty.textmodal_rm3Hs3__gw0W5T1D7C]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs3"
                ),
                [sty.textmodal_rm3Hs4__gw0W5GBHb]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs4"
                )
              }
            )}
          >
            {hasVariant($state, "modal", "rm3Hs4") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Clinicaltrials.gov. A randomized, double-blind, parallel-group, placebo-controlled phase 3 efficacy and safety study of tezepelumab in patients with eosinophilic esophagitis (CROSSING). Available at clinicaltrials.gov/study/NCT05583227. Accessed September 3, 2025.\r\nDellon ES, Collins MH, Bredenoord AJ, et al. Etrasimod as a treatment for eosinophilic oesophagitis (VOYAGE): a double-blind, placebo-controlled, randomised, phase 2 trial. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Lancet\r Gastroenterol Hepatol. "}
                </span>
                <React.Fragment>
                  {
                    "2025;10(7):622-633.\r\nDellon ES, Spergel JM. Biologics in eosinophilic gastrointestinal diseases. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Ann Allergy Asthma Immunol. "}
                </span>
                <React.Fragment>{"2023;130(1):21-27."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm3Hs3") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Dellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>
                  {
                    "2025;120(1):31.\r\nGonsalves N, Policarpio-Nicolas M, Zhang Q, et al. Histopathologic variability and endoscopic correlates in adults with eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastrointest Endosc. "}
                </span>
                <React.Fragment>
                  {
                    "2006;64(3):313\u20139.\r\nSalek J, Clayton F, Vinson L, et al. Endoscopic appearance and location dictate diagnostic yield of biopsies in eosinophilic oesophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Aliment Pharmacol Ther. "}
                </span>
                <React.Fragment>
                  {
                    "2015;41(12):1288\u201395.\r\nShah A, Kagalwalla AF, Gonsalves N, et al. Histopathologic variability in children with eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>{"2009;104(3):716\u201321."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm3Hs2") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Gomez-Torrijos E, Garcia-Rodriguez R, Castro-Jimenez A, et al. The efficacy of step-down therapy in adult patients with proton pump inhibitor-responsive oesophageal eosinophilia.\r "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Aliment Pharmacol Ther. "}
                </span>
                <React.Fragment>
                  {
                    "2016;43(4):534\u201340.\n\rGutierrez-Junquera C, Fernandez-Fernandez S, Cilleruelo ML, et al. High prevalence of response to proton-pump inhibitor treatment in children with esophageal eosinophilia. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Pediatr\rGastroenterol Nutr."}
                </span>
                <React.Fragment>
                  {
                    " 2016;62(5):704\u201310.\n\rLaserna-Mendieta EJ, Casabona S, Guagnozzi D, et al. Efficacy of proton pump inhibitor therapy for eosinophilic oesophagitis in 630 patients: Results from the EoE Connect registry.\r "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Aliment Pharmacol Ther. "}
                </span>
                <React.Fragment>{"2020; 52(5):798\u2013807."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm3Hs1") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Cheng E, Zhang X, HuoX, et al. Omeprazole blocks eotaxin-3 expression by oesophageal squamous cells from patients with eosinophilic oesophagitis and GORD. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gut. "}
                </span>
                <React.Fragment>
                  {
                    "2013;62(6):824\u201332.\r\nDellon ES, Liacouras CA, Molina-Infante J, et al. Updated international consensus diagnostic criteria for eosinophilic esophagitis: Proceedings of the AGREE Conference. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology.\r"}
                </span>
                <React.Fragment>
                  {
                    " 2018;155(4):1022-1033.e10.\r\nDellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. Am J Gastroenterol. 2025;120(1):31.\r\nMolina-Infante J, Bredenoord AJ, Cheng E, et al. Proton pump inhibitor-responsive oesophageal eosinophilia: An entity challenging current diagnostic criteria for eosinophilic\r oesophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gut. "}
                </span>
                <React.Fragment>
                  {
                    "2016;65(3):524\u201331.\r\nZhang X, Cheng E, Huo X, et al. Omeprazole blocks STAT6 binding to the eotaxin-3 promoter in eosinophilic esophagitis cells. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"PLoS One."}
                </span>
                <React.Fragment>{" 2012;7(11):e50037."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs4") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Ackerman SJ, Kagalwalla AF, Hirano I, et al. One-hour esophageal string test: a non endoscopic minimally invasive test that accurately detects disease activity in eosinophilic esophagitis.\r "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>
                  {
                    "2019;114(10):1614.\r\nFuruta GT, Kagalwalla AF, Lee JJ, et al. The oesophageal string test: a novel, minimally invasive method measures mucosal inflammation in eosinophilic oesophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gut.\r"}
                </span>
                <React.Fragment>
                  {
                    " 2013;62(10):1395-1405.\r\nHines BT, Rank MA, Wright BL, et al. Minimally invasive biomarker studies in eosinophilic esophagitis: A systematic review. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Ann Allergy Asthma Immunol. "}
                </span>
                <React.Fragment>
                  {
                    "2018;121(2):218\u201328.\r\nMcGowan EC, Aceves SS. Non-Invasive tests for eosinophilic esophagitis: Ready for use? "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Ann Allergy Asthma Immunol. "}
                </span>
                <React.Fragment>{"2022;129(1):27-34."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs3") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "EOHILIA (budesonide oral suspension) product label. Available at www.accessdata.fda.gov/drugsatfda_docs/label/2024/213976s000lbl.pdf. Accessed September 3, 2025.\r\nHirano I, Collins MH, Katzka DA, Mukkada VA, Falk GW, Morey R, et al; ORBIT1/SHP621-301 Investigators. Budesonide oral suspension improves outcomes in patients with eosinophilic \resophagitis: Results from a Phase 3 trial. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Clin Gastroenterol Hepatol. "}
                </span>
                <React.Fragment>{"2021:S1542-3565(21)00456-0."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs2") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Chehade M, McGowan EC, Wright BL, et al. Barriers to timely diagnosis of eosinophilic gastrointestinal diseases. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Clin Immunol Pract. "}
                </span>
                <React.Fragment>
                  {
                    "2024;12(2):302\u20138.\r\nDellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>
                  {
                    "2025;120(1):31.\r\nFuruta GT, Katzka DA. Eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"N Engl J Med."}
                </span>
                <React.Fragment>
                  {
                    " 2015;373(17):1640-1648.\r\nFuruta GT, Liacouras CA, Collins MH, et al. Eosinophilic esophagitis in children and adults: A systematic review and consensus recommendations for diagnosis and treatment. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"\rGastroenterology. "}
                </span>
                <React.Fragment>{"2007;133(4):1342-1363."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm2Hs1") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Peterson K, Firszt R, Fang J, Wong J, Smith KR, Brady KA. Risk of autoimmunity in EoE and families: A population-based cohort study. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>
                  {
                    "2016;111(7):926-932.\r\nXue Z, Miller TL, Abramson L, et al. Association of eosinophilic esophagitis with autoimmune and connective tissue disorders, and the impact on treatment response. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Dis Esophagus."}
                </span>
                <React.Fragment>{"\r2022;36(1):doac043."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs4") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Dellon ES, Khoury P, Muir AB, et al. A clinical severity index for eosinophilic esophagitis: Development, consensus, and future directions. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology."}
                </span>
                <React.Fragment>
                  {
                    " 2022;163(1):59-76.\r\nA clinical severity index tool (I-SEE) for eosinophilic esophagitis. American Gastroenterological Association. Available at gastro.org/clinical-guidance/i-see-index-of-severity-for-eoe-tool/.\rAccessed September 2, 2025."
                  }
                </React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs3") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Chehade M, Dellon E, Spergel J, et al. Dupilumab improves histologic and endoscopic outcomes in children aged 1 to <12 years with eosinophilic esophagitis (EoE): 52-week results from\rthe Phase 3 EoE KIDS Trial. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Immunol. "}
                </span>
                <React.Fragment>
                  {
                    "2024;156(2):SAB266.\r\nDellon ES, Rothenberg ME, Collins MH, et al. Dupilumab in adults and adolescents with eosinophilic esophagitis."
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {" N Engl J Med. "}
                </span>
                <React.Fragment>
                  {
                    "2022;387(25):2317-2330.\n\rGupta M, Grinman M. Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"CMAJ. "}
                </span>
                <React.Fragment>{"2024;196(4):E121-E128."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs2") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Dellon ES, Muir AB, Katzka DA, et al. ACG clinical guideline: Diagnosis and management of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Am J Gastroenterol. "}
                </span>
                <React.Fragment>
                  {
                    "2025;120(1):31.\r\nErdle SC, Carr S, Chan ES, Robertson K, Watson W. Eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Allergy Asthma Clin Immunol. "}
                </span>
                <React.Fragment>
                  {
                    "2024;20(S3):72.\r Furuta GT, Liacouras CA, Collins MH, et al. Eosinophilic esophagitis in children and adults: A systematic review and consensus recommendations for diagnosis and treatment. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"\rGastroenterology. "}
                </span>
                <React.Fragment>{"2007;133(4):1342-1363."}</React.Fragment>
              </React.Fragment>
            ) : hasVariant($state, "modal", "rm1Hs1") ? (
              <React.Fragment>
                <React.Fragment>
                  {
                    "Dellon ES, Hirano I. Epidemiology and natural history of eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology. "}
                </span>
                <React.Fragment>
                  {
                    "2018;154(2):319-332.e3.\r\nJensen ET, Kappelman MD, Kim HP, Ringel-Kulka T, Dellon ES. Early life exposures as risk factors for pediatric eosinophilic esophagitis. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Pediatr Gastroenterol Nutr. "}
                </span>
                <React.Fragment>
                  {
                    "2013;57:67\u201371.\r\nKapel RC, Miller JK, Torres C, Aksoy S, Lash R, Katzka DA. Eosinophilic esophagitis: a prevalent disease in the United States that affects all age groups. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"Gastroenterology."}
                </span>
                <React.Fragment>
                  {
                    " 2008;134:1316\u201321.\r\nvan Nimwegen FA, Penders J, Stobberingh EE, et al. Mode and place of delivery, gastrointestinal microbiota, and their influence on asthma and atopy. "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"J Allergy Clin Immunol. "}
                </span>
                <React.Fragment>
                  {"2011;128(5):\r948.e3\u201355.e3."}
                </React.Fragment>
              </React.Fragment>
            ) : (
              "Enter some text"
            )}
          </div>
        </ReferencePanel>
      ) : null}
      <div
        data-plasmic-name={"questionContainer"}
        data-plasmic-override={overrides.questionContainer}
        className={classNames(projectcss.all, sty.questionContainer, {
          [sty.questionContainermodal_ivanPcp4]: hasVariant(
            $state,
            "modal",
            "ivanPcp4"
          ),
          [sty.questionContainermodal_kelvinDoor]: hasVariant(
            $state,
            "modal",
            "kelvinDoor"
          ),
          [sty.questionContainermodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.questionContainermodal_rm1Hs1]: hasVariant(
            $state,
            "modal",
            "rm1Hs1"
          ),
          [sty.questionContainermodal_rm1Hs2]: hasVariant(
            $state,
            "modal",
            "rm1Hs2"
          ),
          [sty.questionContainermodal_rm1Hs4]: hasVariant(
            $state,
            "modal",
            "rm1Hs4"
          ),
          [sty.questionContainermodal_rm2Hs1]: hasVariant(
            $state,
            "modal",
            "rm2Hs1"
          ),
          [sty.questionContainermodal_rm3Hs1]: hasVariant(
            $state,
            "modal",
            "rm3Hs1"
          ),
          [sty.questionContainermodal_rm3Hs3]: hasVariant(
            $state,
            "modal",
            "rm3Hs3"
          ),
          [sty.questionContainermodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.questionContainermodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.questionContainermodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          )
        })}
      >
        <QuestionModal
          data-plasmic-name={"computer"}
          data-plasmic-override={overrides.computer}
          active={
            hasVariant($state, "modal", "rm3Hs3")
              ? true
              : hasVariant($state, "modal", "kelvinDoor")
                ? true
                : hasVariant($state, "modal", "rm1Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs1")
                        ? true
                        : undefined
          }
          answerA={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[0].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          answerB={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[1].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          answerC={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[2].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          answerD={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[18].options[3].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[3].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          className={classNames("__wab_instance", sty.computer, {
            [sty.computermodal_ivanDoor]: hasVariant(
              $state,
              "modal",
              "ivanDoor"
            ),
            [sty.computermodal_kelvinDoor]: hasVariant(
              $state,
              "modal",
              "kelvinDoor"
            ),
            [sty.computermodal_kelvinPcp1]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            ),
            [sty.computermodal_lamp]: hasVariant($state, "modal", "lamp"),
            [sty.computermodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
            [sty.computermodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
            [sty.computermodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
            [sty.computermodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
            [sty.computermodal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
            [sty.computermodal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
            [sty.computermodal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
            [sty.computermodal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
            [sty.computermodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
            [sty.computermodal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
            [sty.computermodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3"),
            [sty.computermodal_shareseDoor]: hasVariant(
              $state,
              "modal",
              "shareseDoor"
            )
          })}
          correctReasoning={
            <div
              className={classNames(projectcss.all, sty.freeBox__v3Jy, {
                [sty.freeBoxmodal_rm1Hs1__v3JyX9Qua]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                ),
                [sty.freeBoxmodal_rm1Hs2__v3JyHoV8R]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs2"
                ),
                [sty.freeBoxmodal_rm3Hs3__v3JyT1D7C]: hasVariant(
                  $state,
                  "modal",
                  "rm3Hs3"
                )
              })}
            >
              <div className={classNames(projectcss.all, sty.freeBox__bnsUa)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ydecf,
                    {
                      [sty.textmodal_rm3Hs3__ydecft1D7C]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs3"
                      )
                    }
                  )}
                >
                  {"Correct answer: B"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___19JFs)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ecPot
                  )}
                >
                  {
                    "Studies have found that these factors have a higher risk of developing EoE:"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__twlA)}>
                <div className={classNames(projectcss.all, sty.freeBox__sbJKo)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__thCyq)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__t43Z7)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"15%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/bornPrematureoyOrViaCSectionSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nqzLy
                      )}
                    >
                      {"Individuals born prematurely\r or via C-section"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ffc9P)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lJfeB)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"15%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/infantsWhoReceivedAntibioticsSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__whcTq
                      )}
                    >
                      {"Infants who received antibiotic"}
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__lmmN2)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dzXlN)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__mFyVk)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"15%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/thoseNotExclusivelyBreastfedSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q8So7
                      )}
                    >
                      {"Those not\r exclusively breastfed"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__chJzy
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      "These factors are also believed to contribute to the development of other\rconditions that are part of the \u201c"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"allergic (or atopic) march,"}
                  </span>
                  <React.Fragment>
                    {"\u201d including\r allergies, asthma, and eczema."}
                  </React.Fragment>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0ITr
                )}
              >
                {"Why are the other answers incorrect?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3LW3E
                )}
              >
                {
                  "Males are three times more likely to be diagnosed with EoE than females.\r Smoking and an unbalanced diet have not been shown to increase an \rindividual\u2019s risk of developing EoE."
                }
              </div>
            </div>
          }
          incorrectReasoning={
            <WrongAnswer
              className={classNames("__wab_instance", sty.wrongAnswer__mlUsZ, {
                [sty.wrongAnswermodal_rm1Hs1__mlUsZx9Qua]: hasVariant(
                  $state,
                  "modal",
                  "rm1Hs1"
                )
              })}
            />
          }
          isSelected={generateStateValueProp($state, [
            "computer",
            "isSelected"
          ])}
          onClickClose={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onClickSubmit={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onIsSelectedChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["computer", "isSelected"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          onStepChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["computer", "step"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          question={
            hasVariant($state, "modal", "ivanDoor")
              ? `${$props.questions.questions[19].questionText}
`
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[18].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[0].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
          }
          questionId={
            hasVariant($state, "modal", "ivanDoor")
              ? (() => {
                  try {
                    return $props.questions.questions[19].id;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm3Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[18].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs2")
                  ? (() => {
                      try {
                        return $props.questions.questions[17].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "undefined";
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs1")
                    ? `q1${$props.questions.questions[0].id}`
                    : undefined
          }
          questions={
            hasVariant($state, "modal", "rm1Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[0];
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              : undefined
          }
        />

        {(
          hasVariant($state, "modal", "kelvinPcp1")
            ? true
            : hasVariant($state, "modal", "rm3Hs4")
              ? true
              : hasVariant($state, "modal", "rm3Hs1")
                ? true
                : hasVariant($state, "modal", "shareseDoor")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs1")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs3")
                            ? true
                            : hasVariant($state, "modal", "rm1Hs2")
                              ? true
                              : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanSpecialist4"}
            data-plasmic-override={overrides.ivanSpecialist4}
            active={
              hasVariant($state, "modal", "rm3Hs4")
                ? true
                : hasVariant($state, "modal", "kelvinDoor")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs1")
                          ? true
                          : undefined
            }
            answerA={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[19].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerB={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[19].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerC={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[19].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            answerD={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[19].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            className={classNames("__wab_instance", sty.ivanSpecialist4, {
              [sty.ivanSpecialist4modal_ivanPcp2]: hasVariant(
                $state,
                "modal",
                "ivanPcp2"
              ),
              [sty.ivanSpecialist4modal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.ivanSpecialist4modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.ivanSpecialist4modal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.ivanSpecialist4modal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.ivanSpecialist4modal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.ivanSpecialist4modal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.ivanSpecialist4modal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.ivanSpecialist4modal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.ivanSpecialist4modal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.ivanSpecialist4modal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.ivanSpecialist4modal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.ivanSpecialist4modal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.ivanSpecialist4modal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.ivanSpecialist4modal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.ivanSpecialist4modal_rm3Hs4]: hasVariant(
                $state,
                "modal",
                "rm3Hs4"
              ),
              [sty.ivanSpecialist4modal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.ivanSpecialist4modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__xkDjx, {
                  [sty.freeBoxmodal_rm3Hs1__xkDjXxjzOf]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs1"
                  ),
                  [sty.freeBoxmodal_rm3Hs2__xkDjxBlyoB]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  ),
                  [sty.freeBoxmodal_rm3Hs3__xkDjXt1D7C]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs3"
                  ),
                  [sty.freeBoxmodal_rm3Hs4__xkDjXgBHb]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs4"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox___41HL)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8HbU6,
                      {
                        [sty.textmodal_rm3Hs2___8HbU6BlyoB]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3___8HbU6T1D7C]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3")
                      ? "Correct answer: D"
                      : hasVariant($state, "modal", "rm3Hs2")
                        ? "Correct answer: C"
                        : "Correct answer: D"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d1Vp,
                    {
                      [sty.textmodal_rm3Hs3__d1VpT1D7C]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs3"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "modal", "rm3Hs3") ? (
                    <React.Fragment>
                      <React.Fragment>
                        {"Studies have demonstrated that collecting "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"six or more biopsies "}
                      </span>
                      <React.Fragment>
                        {
                          "leads to\ra diagnostic sensitivity of nearly 100% in patients with suspected EoE."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  ) : (
                    "Tezepelumab is a potential first-in-class monoclonal antibody that\rinhibits the action of thymic stromal lymphopoietin. Tezepelumab was\rgranted orphan drug designation by the FDA for the treatment of\rEoE in 2021."
                  )}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pky5M,
                    {
                      [sty.textmodal_rm3Hs4__pky5MgBHb]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    }
                  )}
                >
                  {
                    "Phase 3 studies of tezepelumab have been conducted in patients with:"
                  }
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__lf0I9, {
                    [sty.freeBoxmodal_rm3Hs4__lf0I9GBHb]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs4"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1YkG, {
                      [sty.freeBoxmodal_rm3Hs4___1YkGgBHb]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__kZq9P,
                        {
                          [sty.freeBoxmodal_rm3Hs4__kZq9PgBHb]: hasVariant(
                            $state,
                            "modal",
                            "rm3Hs4"
                          )
                        }
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___0JfZy, {
                          [sty.imgmodal_rm3Hs4___0JfZYgBHb]: hasVariant(
                            $state,
                            "modal",
                            "rm3Hs4"
                          )
                        })}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"20%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/escape_room/images/nasalSpraySvg.svg",
                          fullWidth: 61,
                          fullHeight: 61,
                          aspectRatio: 1
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__l7Twb,
                          {
                            [sty.textmodal_rm3Hs4__l7TwBgBHb]: hasVariant(
                              $state,
                              "modal",
                              "rm3Hs4"
                            )
                          }
                        )}
                      >
                        {
                          "Patients with asthma (it is\r approved for this indication)"
                        }
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bMxm4, {
                      [sty.freeBoxmodal_rm3Hs4__bMxm4GBHb]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5BTkE,
                        {
                          [sty.freeBoxmodal_rm3Hs4___5BTkEgBHb]: hasVariant(
                            $state,
                            "modal",
                            "rm3Hs4"
                          )
                        }
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__mV25Z, {
                          [sty.imgmodal_rm3Hs4__mV25ZgBHb]: hasVariant(
                            $state,
                            "modal",
                            "rm3Hs4"
                          )
                        })}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"20%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/escape_room/images/copdSvg.svg",
                          fullWidth: 61,
                          fullHeight: 61,
                          aspectRatio: 1
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0JvSp,
                          {
                            [sty.textmodal_rm3Hs4___0JvSPgBHb]: hasVariant(
                              $state,
                              "modal",
                              "rm3Hs4"
                            )
                          }
                        )}
                      >
                        {"COPD"}
                      </div>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hEtwX, {
                      [sty.freeBoxmodal_rm3Hs4__hEtwXgBHb]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__rFnyE,
                        {
                          [sty.freeBoxmodal_rm3Hs4__rFnyEgBHb]: hasVariant(
                            $state,
                            "modal",
                            "rm3Hs4"
                          )
                        }
                      )}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__cmmY, {
                          [sty.imgmodal_rm3Hs4__cmmYgBHb]: hasVariant(
                            $state,
                            "modal",
                            "rm3Hs4"
                          )
                        })}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"20%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/escape_room/images/chronicRhinosinusitisSvg.svg",
                          fullWidth: 61,
                          fullHeight: 61,
                          aspectRatio: 1
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eu1Ne,
                          {
                            [sty.textmodal_rm3Hs4__eu1NEgBHb]: hasVariant(
                              $state,
                              "modal",
                              "rm3Hs4"
                            )
                          }
                        )}
                      >
                        {"Severe chronic rhinosinusitis"}
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pTf7Y,
                    {
                      [sty.textmodal_rm3Hs4__pTf7YgBHb]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    }
                  )}
                >
                  {
                    "A phase 3 trial in EoE is currently underway, with planned completion \rin 2027. \rEtrasimod, an oral, once-daily, selective sphingosine 1-phosphate\rreceptor modulator, is another novel treatment currently under \rinvestigation for the treatment of EoE."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3Jb7R,
                    {
                      [sty.textmodal_rm2Hs4___3Jb7RpHpy7]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs4"
                      ),
                      [sty.textmodal_rm3Hs2___3Jb7RBlyoB]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      ),
                      [sty.textmodal_rm3Hs4___3Jb7RgBHb]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pbyVe,
                    {
                      [sty.textmodal_rm3Hs2__pbyVeBlyoB]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      ),
                      [sty.textmodal_rm3Hs4__pbyVegBHb]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs4"
                      )
                    }
                  )}
                >
                  {
                    "The other drugs listed here are being investigated for the treatment\rof other GI conditions, but not in EoE."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__lkIHz,
                  {
                    [sty.wrongAnswermodal_rm3Hs4__lkIHzgBHb]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs4"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "ivanSpecialist4",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanSpecialist4",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanSpecialist4",
                "step"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[19].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            questionId={
              hasVariant($state, "modal", "kelvinPcp1")
                ? (() => {
                    try {
                      return $props.questions.questions[24].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[19].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? (() => {
                        try {
                          return $props.questions.questions[16].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "shareseDoor")
                      ? (() => {
                          try {
                            return $props.questions.questions[32].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? (() => {
                            try {
                              return $props.questions.questions[11].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[10].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? (() => {
                                try {
                                  return $props.questions.questions[9].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[8].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[2].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "undefined";
                                      }
                                      throw e;
                                    }
                                  })()
                                : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "ivanPcp2")
            ? true
            : hasVariant($state, "modal", "kelvinPcp1")
              ? true
              : hasVariant($state, "modal", "rm3Hs4")
                ? true
                : hasVariant($state, "modal", "rm3Hs3")
                  ? true
                  : hasVariant($state, "modal", "rm3Hs1")
                    ? true
                    : hasVariant($state, "modal", "shareseDoor")
                      ? true
                      : hasVariant($state, "modal", "rm2Hs4")
                        ? true
                        : hasVariant($state, "modal", "rm2Hs3")
                          ? true
                          : hasVariant($state, "modal", "rm2Hs2")
                            ? true
                            : hasVariant($state, "modal", "rm2Hs1")
                              ? true
                              : hasVariant($state, "modal", "rm1Hs3")
                                ? true
                                : hasVariant($state, "modal", "rm1Hs2")
                                  ? true
                                  : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanShelf"}
            data-plasmic-override={overrides.ivanShelf}
            active={
              hasVariant($state, "modal", "rm3Hs3")
                ? true
                : hasVariant($state, "modal", "kelvinDoor")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs1")
                          ? true
                          : undefined
            }
            answerA={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[18].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[0].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[0].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[0].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[0].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[0].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerB={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[18].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[1].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[1].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[1].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[1].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[1].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerC={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[18].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[2].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[2].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[2].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[2].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[2].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            answerD={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[18].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .options[3].text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .options[3].text;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .options[3].text;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .options[3].text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .options[3].text;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            className={classNames("__wab_instance", sty.ivanShelf, {
              [sty.ivanShelfmodal_ivanPcp2]: hasVariant(
                $state,
                "modal",
                "ivanPcp2"
              ),
              [sty.ivanShelfmodal_ivanPcp3]: hasVariant(
                $state,
                "modal",
                "ivanPcp3"
              ),
              [sty.ivanShelfmodal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.ivanShelfmodal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.ivanShelfmodal_kelvinPcp2]: hasVariant(
                $state,
                "modal",
                "kelvinPcp2"
              ),
              [sty.ivanShelfmodal_kelvinPcp4]: hasVariant(
                $state,
                "modal",
                "kelvinPcp4"
              ),
              [sty.ivanShelfmodal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.ivanShelfmodal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.ivanShelfmodal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.ivanShelfmodal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.ivanShelfmodal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.ivanShelfmodal_rm2Hs2]: hasVariant(
                $state,
                "modal",
                "rm2Hs2"
              ),
              [sty.ivanShelfmodal_rm2Hs3]: hasVariant(
                $state,
                "modal",
                "rm2Hs3"
              ),
              [sty.ivanShelfmodal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.ivanShelfmodal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.ivanShelfmodal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              ),
              [sty.ivanShelfmodal_rm3Hs3]: hasVariant(
                $state,
                "modal",
                "rm3Hs3"
              ),
              [sty.ivanShelfmodal_rm3Hs4]: hasVariant(
                $state,
                "modal",
                "rm3Hs4"
              ),
              [sty.ivanShelfmodal_shareseDoor]: hasVariant(
                $state,
                "modal",
                "shareseDoor"
              ),
              [sty.ivanShelfmodal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox___8Zk92, {
                  [sty.freeBoxmodal_rm3Hs1___8Zk92XjzOf]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs1"
                  ),
                  [sty.freeBoxmodal_rm3Hs2___8Zk92BlyoB]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  ),
                  [sty.freeBoxmodal_rm3Hs3___8Zk92T1D7C]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs3"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__giGs8)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rmUyM,
                      {
                        [sty.textmodal_rm3Hs2__rmUyMBlyoB]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        ),
                        [sty.textmodal_rm3Hs3__rmUyMt1D7C]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3")
                      ? "Correct answer: D"
                      : hasVariant($state, "modal", "rm3Hs2")
                        ? "Correct answer: C"
                        : "Correct answer: A"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eo9Sa,
                    {
                      [sty.textmodal_rm3Hs3__eo9Sat1D7C]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs3"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "modal", "rm3Hs3") ? (
                    <React.Fragment>
                      <React.Fragment>
                        {"Studies have demonstrated that collecting "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"six or more biopsies "}
                      </span>
                      <React.Fragment>
                        {
                          "leads to\ra diagnostic sensitivity of nearly 100% in patients with suspected EoE."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  ) : (
                    "Studies have demonstrated that collecting six or more biopsies leads to\ra diagnostic sensitivity of nearly 100% in patients with suspected EoE."
                  )}
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__yMFm, {
                    [sty.freeBoxmodal_rm3Hs2__yMFmBlyoB]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    ),
                    [sty.freeBoxmodal_rm3Hs3__yMFmt1D7C]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs3"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fccZj,
                      {
                        [sty.textmodal_rm3Hs3__fccZjt1D7C]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs3"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs3") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "The 2025 ACG Guidelines\r recommend collecting at least \r\u00a0"
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"six biopsies"}
                        </span>
                        <React.Fragment>
                          {"\u00a0 from a minimum of "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"\rtwo different locations"}
                        </span>
                        <React.Fragment>
                          {
                            " in the \resophagus (e.g., proximal, mid,\r and distal) while concentrating \ron sections that show visual\r inflammation, if available."
                          }
                        </React.Fragment>
                      </React.Fragment>
                    ) : (
                      "The 2025 ACG Guidelines\r recommend collecting at least \r\u00a0six biopsies\u00a0 from a minimum of \u00a0\rtwo different locations\u00a0 in the \resophagus (e.g., proximal, mid,\r and distal) while concentrating \ron sections that show visual\r inflammation, if available."
                    )}
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__g2U6M, {
                      [sty.imgmodal_rm3Hs3__g2U6Mt1D7C]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs3"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant($state, "modal", "rm3Hs3") ? "50%" : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/image17.svg",
                      fullWidth: 444.34,
                      fullHeight: 438.51,
                      aspectRatio: 1.013295
                    }}
                  />
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__cKj7X,
                  {
                    [sty.wrongAnswermodal_rm3Hs3__cKj7Xt1D7C]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs3"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "ivanShelf",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanShelf",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["ivanShelf", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[18].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16]
                                .questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11]
                                    .questionText;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10]
                                      .questionText;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9]
                                        .questionText;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8]
                                          .questionText;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .questionText;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questionId={
              hasVariant($state, "modal", "ivanPcp2")
                ? (() => {
                    try {
                      return $props.questions.questions[41].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "kelvinPcp1")
                  ? (() => {
                      try {
                        return $props.questions.questions[24].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm3Hs4")
                    ? (() => {
                        try {
                          return $props.questions.questions[40].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm3Hs3")
                      ? (() => {
                          try {
                            return $props.questions.questions[17].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[16].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "shareseDoor")
                          ? (() => {
                              try {
                                return $props.questions.questions[32].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : hasVariant($state, "modal", "rm2Hs4")
                            ? (() => {
                                try {
                                  return $props.questions.questions[11].id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            : hasVariant($state, "modal", "rm2Hs3")
                              ? (() => {
                                  try {
                                    return $props.questions.questions[10].id;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })()
                              : hasVariant($state, "modal", "rm2Hs2")
                                ? (() => {
                                    try {
                                      return $props.questions.questions[9].id;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                : hasVariant($state, "modal", "rm2Hs1")
                                  ? (() => {
                                      try {
                                        return $props.questions.questions[8].id;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()
                                  : hasVariant($state, "modal", "rm1Hs3")
                                    ? (() => {
                                        try {
                                          return $props.questions.questions[2]
                                            .id;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "undefined";
                                          }
                                          throw e;
                                        }
                                      })()
                                    : undefined
            }
            questions={
              hasVariant($state, "modal", "kelvinPcp1")
                ? []
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "rm3Hs2")
            ? true
            : hasVariant($state, "modal", "rm3Hs1")
              ? true
              : hasVariant($state, "modal", "rm1Hs3")
                ? true
                : hasVariant($state, "modal", "rm1Hs2")
                  ? true
                  : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"ivanScreen"}
            data-plasmic-override={overrides.ivanScreen}
            active={
              hasVariant($state, "modal", "rm3Hs2")
                ? true
                : hasVariant($state, "modal", "rm3Hs1")
                  ? true
                  : hasVariant($state, "modal", "kelvinDoor")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs4")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs2")
                          ? true
                          : hasVariant($state, "modal", "rm1Hs1")
                            ? true
                            : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[17].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
            }
            className={classNames("__wab_instance", sty.ivanScreen, {
              [sty.ivanScreenmodal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.ivanScreenmodal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.ivanScreenmodal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.ivanScreenmodal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.ivanScreenmodal_rm1Hs4]: hasVariant(
                $state,
                "modal",
                "rm1Hs4"
              ),
              [sty.ivanScreenmodal_rm2Hs1]: hasVariant(
                $state,
                "modal",
                "rm2Hs1"
              ),
              [sty.ivanScreenmodal_rm2Hs4]: hasVariant(
                $state,
                "modal",
                "rm2Hs4"
              ),
              [sty.ivanScreenmodal_rm3Hs1]: hasVariant(
                $state,
                "modal",
                "rm3Hs1"
              ),
              [sty.ivanScreenmodal_rm3Hs2]: hasVariant(
                $state,
                "modal",
                "rm3Hs2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__fiQsb, {
                  [sty.freeBoxmodal_rm3Hs1__fiQsBxjzOf]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs1"
                  ),
                  [sty.freeBoxmodal_rm3Hs2__fiQsbBlyoB]: hasVariant(
                    $state,
                    "modal",
                    "rm3Hs2"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__cNPo)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zxDtC,
                      {
                        [sty.textmodal_rm3Hs2__zxDtCBlyoB]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs2")
                      ? "Correct answer: C"
                      : "Correct answer: A"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__n9Ls4, {
                    [sty.freeBoxmodal_rm3Hs2__n9Ls4BlyoB]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    )
                  })}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___8BbLp, {
                      [sty.imgmodal_rm3Hs2___8BbLpBlyoB]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={
                      hasVariant($state, "modal", "rm3Hs2") ? "50%" : "100%"
                    }
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/image16.png",
                      fullWidth: 970,
                      fullHeight: 333,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hrcao,
                      {
                        [sty.textmodal_rm3Hs1__hrcaOxjzOf]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs1"
                        ),
                        [sty.textmodal_rm3Hs2__hrcaoBlyoB]: hasVariant(
                          $state,
                          "modal",
                          "rm3Hs2"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "modal", "rm3Hs2")
                      ? "Data support the long-term \refficacy of PPIs, with several\r studies showing 70-85% of patients with EoE maintaining\r PPI response after 1 year."
                      : hasVariant($state, "modal", "rm3Hs1")
                        ? "The 2025 ACG guidelines update eliminated \rthe requirement for a PPI trial before\r diagnosing EoE to rule out inflammation\r related to GERD. This change was based on \rextensive data indicating that patients \rresponding to PPIs exhibit similar clinical,\r endoscopic, histological, immunological, and\r molecular characteristics as those with EoE who do not respond \rto PPIs."
                        : "The 2025 ACG guidelines update eliminated\rthe requirement for a PPI trial before\rdiagnosing EoE to rule out inflammation\rrelated to GERD. This change was based on\rextensive data indicating that patients\rresponding to PPIs exhibit similar clinical,\rendoscopic, histological, immunological, and\rmolecular characteristics as those with EoE who do not respond\rto PPIs."}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kxVDh,
                    {
                      [sty.textmodal_rm3Hs1__kxVDhxjzOf]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs1"
                      ),
                      [sty.textmodal_rm3Hs2__kxVDhBlyoB]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "modal", "rm3Hs2")
                    ? "Additionally, one study showed histologic and symptom PPI responses\rthat were maintained in 60% of adults after a mean of 3.6 years."
                    : hasVariant($state, "modal", "rm3Hs1")
                      ? "This suggests that PPIs are an effective treatment for EoE through \rnovel mechanisms and not solely through gastric acid \rsuppression. Furthermore, research shows a complex relationship \rbetween EoE and GERD, and not an independent disease course\r as previously suspected."
                      : "This suggests that PPIs are an effective treatment for EoE through\rnovel mechanisms and not solely through gastric acid\rsuppression. Furthermore, research shows a complex relationship\rbetween EoE and GERD, and not an independent disease course\ras previously suspected."}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6Lkv,
                    {
                      [sty.textmodal_rm2Hs4___6LkvpHpy7]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs4"
                      ),
                      [sty.textmodal_rm3Hs2___6LkvBlyoB]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__u0Bla,
                    {
                      [sty.textmodal_rm3Hs2__u0BlaBlyoB]: hasVariant(
                        $state,
                        "modal",
                        "rm3Hs2"
                      )
                    }
                  )}
                >
                  {
                    "Choices A, B, and D listed here are all novel mechanisms described as\rpart of PPI therapy in patients with EoE."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__kPlJo,
                  {
                    [sty.wrongAnswermodal_rm3Hs1__kPlJoxjzOf]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs1"
                    ),
                    [sty.wrongAnswermodal_rm3Hs2__kPlJoBlyoB]: hasVariant(
                      $state,
                      "modal",
                      "rm3Hs2"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "ivanScreen",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "ivanScreen",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["ivanScreen", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[17].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[17].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm3Hs1")
                  ? (() => {
                      try {
                        return $props.questions.questions[16].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[2].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "undefined";
                          }
                          throw e;
                        }
                      })()
                    : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        <QuestionModal
          data-plasmic-name={"sharese1"}
          data-plasmic-override={overrides.sharese1}
          active={
            hasVariant($state, "modal", "rm2Hs1")
              ? true
              : hasVariant($state, "modal", "kelvinDoor")
                ? true
                : hasVariant($state, "modal", "rm1Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs1")
                        ? true
                        : undefined
          }
          answerA={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[0].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          answerB={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[1].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          answerC={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[2].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          answerD={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].options[3].text;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          className={classNames("__wab_instance", sty.sharese1, {
            [sty.sharese1modal_kelvinDoor]: hasVariant(
              $state,
              "modal",
              "kelvinDoor"
            ),
            [sty.sharese1modal_kelvinPcp1]: hasVariant(
              $state,
              "modal",
              "kelvinPcp1"
            ),
            [sty.sharese1modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
            [sty.sharese1modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
            [sty.sharese1modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
            [sty.sharese1modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
            [sty.sharese1modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
            [sty.sharese1modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
            [sty.sharese1modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
            [sty.sharese1modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
            [sty.sharese1modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
            [sty.sharese1modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2")
          })}
          correctReasoning={
            <div
              className={classNames(projectcss.all, sty.freeBox___316Ny, {
                [sty.freeBoxmodal_rm2Hs1___316NycWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
            >
              <div className={classNames(projectcss.all, sty.freeBox__qCXvt)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rPaA
                  )}
                >
                  {"Correct answer: C"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__bkWRj)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hWnul
                  )}
                >
                  {
                    "EoE is commonly associated with autoimmune and connective tissue \rdiseases. According to studies, patients or patients with first-degree \rfamily members diagnosed with these diseases are at increased risk of\rdeveloping EoE:"
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__erfpE)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y3Y4S
                  )}
                >
                  {
                    "\u2022 Celiac disease\r\n\u2022 Common variable\r immunodeficiency (CVID)\r\n\u2022 Crohn\u2019s disease\n\r\u2022 Hashimoto\u2019s thyroiditis"
                  }
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jc0X)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nMD
                    )}
                  >
                    {
                      "\u2022 IgA deficiency\r\n\u2022 Multiple sclerosis\r\n\u2022 Rheumatoid arthritis\n\r\u2022 Ulcerative colitis"
                    }
                  </div>
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__iv1J2
                )}
              >
                {"CLICK TO SEE:"}
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__aZkQp)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8IyW5
                  )}
                >
                  {
                    "Relative risk of specific autoimmune diseases in EoE\rprobands and first-degree relatives (FDRs) of EoE probands"
                  }
                </div>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fy3I
                )}
              >
                {"Why are the other answers incorrect?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6Wxrk
                )}
              >
                {
                  "A personal or family history of kidney disease, type 1 diabetes, and\rleukocytosis are not known to increase an individual\u2019s risk of\r developing EoE."
                }
              </div>
            </div>
          }
          incorrectReasoning={
            <WrongAnswer
              className={classNames("__wab_instance", sty.wrongAnswer__sAuE8, {
                [sty.wrongAnswermodal_rm2Hs1__sAuE8CWWw]: hasVariant(
                  $state,
                  "modal",
                  "rm2Hs1"
                )
              })}
            />
          }
          isSelected={generateStateValueProp($state, [
            "sharese1",
            "isSelected"
          ])}
          onClickClose={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onClickSubmit={async event => {
            const $steps = {};

            $steps["updateModal"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "modal",
                    operation: 0,
                    value: []
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    $stateSet($state, vgroup, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              $steps["updateModal"] != null &&
              typeof $steps["updateModal"] === "object" &&
              typeof $steps["updateModal"].then === "function"
            ) {
              $steps["updateModal"] = await $steps["updateModal"];
            }
          }}
          onIsSelectedChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["sharese1", "isSelected"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          onStepChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["sharese1", "step"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          question={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].questionText;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          questionId={
            hasVariant($state, "modal", "rm3Hs1")
              ? (() => {
                  try {
                    return $props.questions.questions[16].id;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()
              : hasVariant($state, "modal", "rm2Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[8].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm1Hs3")
                  ? (() => {
                      try {
                        return $props.questions.questions[2].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "undefined";
                        }
                        throw e;
                      }
                    })()
                  : undefined
          }
          questions={
            hasVariant($state, "modal", "rm1Hs3")
              ? (() => {
                  try {
                    return $props.questions.questions[2];
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              : undefined
          }
        />

        {(
          hasVariant($state, "modal", "sharesePcp2")
            ? true
            : hasVariant($state, "modal", "rm3Hs1")
              ? true
              : hasVariant($state, "modal", "rm2Hs4")
                ? true
                : hasVariant($state, "modal", "rm2Hs3")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs2")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs1")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs2")
                          ? true
                          : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharese2"}
            data-plasmic-override={overrides.sharese2}
            active={
              hasVariant($state, "modal", "kelvinDoor")
                ? true
                : hasVariant($state, "modal", "rm1Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs1")
                        ? true
                        : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            className={classNames("__wab_instance", sty.sharese2, {
              [sty.sharese2modal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.sharese2modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.sharese2modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.sharese2modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.sharese2modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.sharese2modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.sharese2modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.sharese2modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.sharese2modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.sharese2modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.sharese2modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2"),
              [sty.sharese2modal_sharesePcp2]: hasVariant(
                $state,
                "modal",
                "sharesePcp2"
              )
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__wj66U, {
                  [sty.freeBoxmodal_rm2Hs2__wj66UJ1J0]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs2"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__ygXbV)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fJxor
                    )}
                  >
                    {"Correct answer: B"}
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___0SciD)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ib2SR
                    )}
                  >
                    {
                      "EoE patients with longstanding dysphagia may develop coping behaviors \rto manage their eating difficulties. This may result in minimization of\rsymptoms and delayed diagnosis. Clinicians should evaluate patients with\rsuspected and diagnosed EoE for behaviors using the IMPACT acronym:"
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__iFzUt)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nlRYf
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"I"}
                      </span>
                      <React.Fragment>
                        {"mbibe fluids with meals\r\n\u2022"}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {" M"}
                      </span>
                      <React.Fragment>{"odify food\r\n\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"P"}
                      </span>
                      <React.Fragment>{"rolong mealtimes"}</React.Fragment>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cfUir
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"\u2022 "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"A"}
                      </span>
                      <React.Fragment>
                        {"void hard texture foods\r\n\u2022 "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"C"}
                      </span>
                      <React.Fragment>
                        {"hew excessively\n\r\u2022 "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"T"}
                      </span>
                      <React.Fragment>
                        {"urn away tablets/pills"}
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer___8COq1,
                  {
                    [sty.wrongAnswermodal_rm2Hs2___8COq1J1J0]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs2"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "sharese2",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharese2",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharese2", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "undefined";
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "kelvinPcp1")
            ? true
            : hasVariant($state, "modal", "rm3Hs1")
              ? true
              : hasVariant($state, "modal", "rm2Hs4")
                ? true
                : hasVariant($state, "modal", "rm2Hs3")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs2")
                    ? true
                    : hasVariant($state, "modal", "rm2Hs1")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs3")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs2")
                          ? true
                          : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharese3"}
            data-plasmic-override={overrides.sharese3}
            active={
              hasVariant($state, "modal", "rm2Hs3")
                ? true
                : hasVariant($state, "modal", "kelvinDoor")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs1")
                          ? true
                          : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            className={classNames("__wab_instance", sty.sharese3, {
              [sty.sharese3modal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.sharese3modal_kelvinPcp1]: hasVariant(
                $state,
                "modal",
                "kelvinPcp1"
              ),
              [sty.sharese3modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.sharese3modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.sharese3modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.sharese3modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.sharese3modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.sharese3modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.sharese3modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.sharese3modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.sharese3modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.sharese3modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__qcmki, {
                  [sty.freeBoxmodal_rm2Hs2__qcmkiJ1J0]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs2"
                  ),
                  [sty.freeBoxmodal_rm2Hs3__qcmkiPvEsk]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs3"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__vhSZq)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1Hvdy
                    )}
                  >
                    {"Correct answer: D"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__udLjH)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__k0Z1E,
                      {
                        [sty.textmodal_rm2Hs3__k0Z1EPvEsk]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs3"
                        )
                      }
                    )}
                  >
                    {
                      "The FDA-approved dosing for budesonide oral suspension (BOS) is 2 mg\r twice daily (it should be noted that the 2025 ACG guidelines suggest a\r dosage of 2-4 mg either once or twice daily)."
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__yDmH, {
                    [sty.freeBoxmodal_rm2Hs3__yDmHPvEsk]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs3"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dVmf3, {
                      [sty.freeBoxmodal_rm2Hs3__dVmf3PvEsk]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs3"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___13DS,
                        {
                          [sty.textmodal_rm2Hs3___13DSPvEsk]: hasVariant(
                            $state,
                            "modal",
                            "rm2Hs3"
                          )
                        }
                      )}
                    >
                      {"FDA-approved dosage"}
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__kdAcG, {
                        [sty.imgmodal_rm2Hs3__kdAcGPvEsk]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs3"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"50%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/image11.svg",
                        fullWidth: 284.61,
                        fullHeight: 105.88,
                        aspectRatio: 2.688043
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aevk1, {
                      [sty.freeBoxmodal_rm2Hs3__aevk1PvEsk]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs3"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lJxU,
                        {
                          [sty.textmodal_rm2Hs3__lJxUPvEsk]: hasVariant(
                            $state,
                            "modal",
                            "rm2Hs3"
                          )
                        }
                      )}
                    >
                      {"2025 ACG guidelines"}
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__rui5Z, {
                        [sty.imgmodal_rm2Hs3__rui5ZPvEsk]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs3"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"50%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/image12.svg",
                        fullWidth: 359.24,
                        fullHeight: 105.88,
                        aspectRatio: 3.392898
                      }}
                    />
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__hyRs, {
                    [sty.freeBoxmodal_rm2Hs3__hyRsPvEsk]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs3"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__caby4
                    )}
                  >
                    {
                      "BOS is an immediate-release topical corticosteroid given as a viscous\rsuspension to lengthen its survival time on the esophageal mucosal surface \rfollowing oral administration. BOS is currently approved for the treatment\rof EoE in individuals aged 11 years and older based on data from a pair of\r phase 3 trials showing that patients treated with BOS 2 mg twice daily were\r significantly more likely than those treated with placebo to achieve both\rstringent histological and symptom response at 12 weeks. Improved\r endoscopic outcomes were also seen in these trials."
                    }
                  </div>
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__h85Nl,
                  {
                    [sty.wrongAnswermodal_rm2Hs3__h85NlPvEsk]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs3"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "sharese3",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharese3",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharese3", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[10].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "undefined";
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "rm1Hs3")
            ? true
            : hasVariant($state, "modal", "rm1Hs2")
              ? true
              : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"diagram"}
            data-plasmic-override={overrides.diagram}
            active={
              hasVariant($state, "modal", "kelvinDoor")
                ? true
                : hasVariant($state, "modal", "rm1Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs1")
                        ? true
                        : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            className={classNames("__wab_instance", sty.diagram, {
              [sty.diagrammodal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.diagrammodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.diagrammodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.diagrammodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.diagrammodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.diagrammodal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__ltpMr, {
                  [sty.freeBoxmodal_rm1Hs3__ltpMrGtgMk]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__jCnGs)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q1VNw
                    )}
                  >
                    {"Correct answer: B"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox___6J1T)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jwm8Q
                    )}
                  >
                    {
                      "Dupilumab, a fully human monoclonal antibody targeting IL-4R\u03b1, reduces\rtype 2 inflammation by blocking the following signaling pathways:"
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__mQl)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__o6XUb)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__oKz6S)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/image8.svg",
                        fullWidth: 287.79,
                        fullHeight: 172.31,
                        aspectRatio: 1.670187
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a0Yya
                      )}
                    >
                      {"IL-4"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zgunM)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xiIxe)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/image9.svg",
                        fullWidth: 287.79,
                        fullHeight: 172.31,
                        aspectRatio: 1.670187
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ak1T9
                      )}
                    >
                      {"IL-13"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sxzP7)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kEqG3
                      )}
                    >
                      {
                        "These cytokines play a role\rin the development of \rallergic and inflammatory\r diseases such as EoE."
                      }
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__in4Mn
                  )}
                >
                  {
                    "Dupilumab is currently FDA approved for use in children with EoE ages\r1 year and older. A three-part, phase 3 trial showed that EoE patient s\rtreated with dupilumab weekly were significantly more likely to achieve \rhistologic remission and see amelioration of symptoms compared to\r those treated with placebo."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zfmXa
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__usgbc
                  )}
                >
                  {
                    "Cendakimab and tezepelumab are currently being studied for use in EoE \rbut are not yet FDA approved for this indication. Mepolizumab is approved\r for use in several different conditions, including severe eosinophilic \rasthma, but a recent study in EoE patients found that mepolizumab was\r not more effective than placebo at improving dysphagia symptoms."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__cxDy3,
                  {
                    [sty.wrongAnswermodal_rm1Hs3__cxDy3GtgMk]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs3"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "diagram",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "diagram",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["diagram", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "rm3Hs1")
            ? true
            : hasVariant($state, "modal", "rm2Hs4")
              ? true
              : hasVariant($state, "modal", "rm2Hs3")
                ? true
                : hasVariant($state, "modal", "rm2Hs2")
                  ? true
                  : hasVariant($state, "modal", "rm2Hs1")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs2")
                        ? true
                        : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"sharese4"}
            data-plasmic-override={overrides.sharese4}
            active={
              hasVariant($state, "modal", "rm2Hs4")
                ? true
                : hasVariant($state, "modal", "kelvinDoor")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs4")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs3")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs2")
                        ? true
                        : hasVariant($state, "modal", "rm1Hs1")
                          ? true
                          : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[0].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[0].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[0]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[0]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[0]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[1].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[1].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[1]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[1]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[1]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[2].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[2].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[2]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[2]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[2]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].options[3].text;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].options[3].text;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].options[3]
                              .text;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].options[3]
                                .text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].options[3]
                                  .text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            className={classNames("__wab_instance", sty.sharese4, {
              [sty.sharese4modal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.sharese4modal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.sharese4modal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.sharese4modal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.sharese4modal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4"),
              [sty.sharese4modal_rm2Hs1]: hasVariant($state, "modal", "rm2Hs1"),
              [sty.sharese4modal_rm2Hs2]: hasVariant($state, "modal", "rm2Hs2"),
              [sty.sharese4modal_rm2Hs3]: hasVariant($state, "modal", "rm2Hs3"),
              [sty.sharese4modal_rm2Hs4]: hasVariant($state, "modal", "rm2Hs4"),
              [sty.sharese4modal_rm3Hs1]: hasVariant($state, "modal", "rm3Hs1"),
              [sty.sharese4modal_rm3Hs2]: hasVariant($state, "modal", "rm3Hs2")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__t9ZJa, {
                  [sty.freeBoxmodal_rm2Hs2__t9ZJaJ1J0]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs2"
                  ),
                  [sty.freeBoxmodal_rm2Hs3__t9ZJaPvEsk]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs3"
                  ),
                  [sty.freeBoxmodal_rm2Hs4__t9ZJapHpy7]: hasVariant(
                    $state,
                    "modal",
                    "rm2Hs4"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___8WlCk)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__im9Nc
                    )}
                  >
                    {"Correct answer: D"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__cRgFv)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ybSqv,
                      {
                        [sty.textmodal_rm2Hs3__ybSqvPvEsk]: hasVariant(
                          $state,
                          "modal",
                          "rm2Hs3"
                        )
                      }
                    )}
                  >
                    {
                      "The Esophageal String Test (EST) involves the swallowing of\ra weighted string capsule that remains in the esophagus for\r1 hour to absorb inflammatory factors. It has demonstrated\ra strong correlation with endoscopic results in studies of\rpediatric and adult patients with EoE."
                    }
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__fofL3, {
                      [sty.imgmodal_rm2Hs4__fofL3PHpy7]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"15%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/image13.svg",
                      fullWidth: 139.08,
                      fullHeight: 117.26,
                      aspectRatio: 1.186082
                    }}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ulyX2, {
                    [sty.freeBoxmodal_rm2Hs3__ulyX2PvEsk]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs3"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__br5S
                    )}
                  >
                    {
                      "Another non-invasive option for assessing esophageal\reosinophil levels is the cytosponge, in which a small, round\rbrush inside a capsule on a string is swallowed, allowed to\rexpand in the esophagus for 5-10 minutes, and then pulled\r out through the mouth. The brush collects cells from the\r esophagus for testing."
                    }
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__jMjOo, {
                      [sty.imgmodal_rm2Hs4__jMjOopHpy7]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs4"
                      )
                    })}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"15%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/escape_room/images/image15.svg",
                      fullWidth: 139.08,
                      fullHeight: 117.26,
                      aspectRatio: 1.186082
                    }}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__z5Sk,
                    {
                      [sty.textmodal_rm2Hs4__z5SkpHpy7]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs4"
                      )
                    }
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ysoLr,
                    {
                      [sty.textmodal_rm2Hs4__ysoLRpHpy7]: hasVariant(
                        $state,
                        "modal",
                        "rm2Hs4"
                      )
                    }
                  )}
                >
                  {
                    "There are currently no validated noninvasive biomarkers to assess\r treatment response in EoE. Barium swallow esophagram and EndoFLIP\r (which is used during upper EGD) are only used for assessment of\rfibrostenosis or strictures. Symptom presentation is not a suitable\rmeasure of histological and biological response to treatment."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer___9AlPo,
                  {
                    [sty.wrongAnswermodal_rm2Hs4___9AlPOpHpy7]: hasVariant(
                      $state,
                      "modal",
                      "rm2Hs4"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "sharese4",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "sharese4",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sharese4", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].questionText;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].questionText;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].questionText;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].questionText;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2]
                                  .questionText;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm3Hs1")
                ? (() => {
                    try {
                      return $props.questions.questions[16].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : hasVariant($state, "modal", "rm2Hs4")
                  ? (() => {
                      try {
                        return $props.questions.questions[11].id;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()
                  : hasVariant($state, "modal", "rm2Hs3")
                    ? (() => {
                        try {
                          return $props.questions.questions[10].id;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()
                    : hasVariant($state, "modal", "rm2Hs2")
                      ? (() => {
                          try {
                            return $props.questions.questions[9].id;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()
                      : hasVariant($state, "modal", "rm2Hs1")
                        ? (() => {
                            try {
                              return $props.questions.questions[8].id;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        : hasVariant($state, "modal", "rm1Hs3")
                          ? (() => {
                              try {
                                return $props.questions.questions[2].id;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "undefined";
                                }
                                throw e;
                              }
                            })()
                          : undefined
            }
            questions={
              hasVariant($state, "modal", "rm1Hs3")
                ? (() => {
                    try {
                      return $props.questions.questions[2];
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(hasVariant($state, "modal", "rm1Hs2") ? true : false) ? (
          <QuestionModal
            data-plasmic-name={"bookshelf"}
            data-plasmic-override={overrides.bookshelf}
            active={
              hasVariant($state, "modal", "kelvinDoor")
                ? true
                : hasVariant($state, "modal", "rm1Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs1")
                        ? true
                        : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            className={classNames("__wab_instance", sty.bookshelf, {
              [sty.bookshelfmodal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.bookshelfmodal_rm1Hs1]: hasVariant(
                $state,
                "modal",
                "rm1Hs1"
              ),
              [sty.bookshelfmodal_rm1Hs2]: hasVariant(
                $state,
                "modal",
                "rm1Hs2"
              ),
              [sty.bookshelfmodal_rm1Hs3]: hasVariant(
                $state,
                "modal",
                "rm1Hs3"
              ),
              [sty.bookshelfmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__muEt7, {
                  [sty.freeBoxmodal_rm1Hs2__muEt7HoV8R]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs2"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__xx3VM)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mP6Eq
                    )}
                  >
                    {"Correct answer: C"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__jT3N)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__udcVr
                    )}
                  >
                    {
                      "EoE signs and symptoms vary across age groups. Click to reveal\r the primary symptoms in patients of different ages:"
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__byQwG)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__biXJy)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gkHrt
                      )}
                    >
                      {"\u22645 years"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ap2Bx)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1RmTe
                      )}
                    >
                      {"6-14 years"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__u62IL)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__r1QlU
                      )}
                    >
                      {"Adults"}
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kFqsN
                  )}
                >
                  {
                    "However, EoE symptoms are often nonspecific and may be\rconsistent with other conditions, making the diagnosis challenging.\r\n\nIn younger children, feeding difficulties may be mistaken for \u201ctypical\u201d\r fussy eating, while in older individuals, symptoms of dysphagia may\rbe masked by adaptive behaviors and food avoidance.\r\n\nThese sorts of issues can all contribute to the delayed diagnosis of\r EoE, which has been frequently cited as a problem across the\rhealthcare spectrum. Tools such as the IMPACT behavioral\r assessment can be used to distinguish EoE from other diagnoses\rwith overlapping presentation patterns."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__krLx7
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bVReE
                  )}
                >
                  {
                    "Persistent sore throat is more commonly found among infants and\ryoung children under the age of 5. Weight gain and chronic\rdiarrhea are not typically associated with EoE at any age."
                  }
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__gXuR7,
                  {
                    [sty.wrongAnswermodal_rm1Hs2__gXuR7HoV8R]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs2"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, [
              "bookshelf",
              "isSelected"
            ])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "bookshelf",
                "isSelected"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["bookshelf", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm1Hs2")
                ? (() => {
                    try {
                      return $props.questions.questions[1].id;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "undefined";
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
          />
        ) : null}
        {(
          hasVariant($state, "modal", "lamp")
            ? true
            : hasVariant($state, "modal", "rm1Hs4")
              ? true
              : hasVariant($state, "modal", "rm1Hs2")
                ? true
                : false
        ) ? (
          <QuestionModal
            data-plasmic-name={"bed"}
            data-plasmic-override={overrides.bed}
            active={
              hasVariant($state, "modal", "kelvinDoor")
                ? true
                : hasVariant($state, "modal", "rm1Hs4")
                  ? true
                  : hasVariant($state, "modal", "rm1Hs3")
                    ? true
                    : hasVariant($state, "modal", "rm1Hs2")
                      ? true
                      : hasVariant($state, "modal", "rm1Hs1")
                        ? true
                        : undefined
            }
            answerA={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[0].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerB={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[1].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerC={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[2].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            answerD={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].options[3].text;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            className={classNames("__wab_instance", sty.bed, {
              [sty.bedmodal_kelvinDoor]: hasVariant(
                $state,
                "modal",
                "kelvinDoor"
              ),
              [sty.bedmodal_lamp]: hasVariant($state, "modal", "lamp"),
              [sty.bedmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
              [sty.bedmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
              [sty.bedmodal_rm1Hs3]: hasVariant($state, "modal", "rm1Hs3"),
              [sty.bedmodal_rm1Hs4]: hasVariant($state, "modal", "rm1Hs4")
            })}
            correctReasoning={
              <div
                className={classNames(projectcss.all, sty.freeBox__mLkLu, {
                  [sty.freeBoxmodal_rm1Hs3__mLkLuGtgMk]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs3"
                  ),
                  [sty.freeBoxmodal_rm1Hs4__mLkLUqEe8P]: hasVariant(
                    $state,
                    "modal",
                    "rm1Hs4"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.freeBox__qIkEv)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__k0F4
                    )}
                  >
                    {"Correct answer: B"}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__fRc1Z)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oNjfb
                    )}
                  >
                    {
                      "The I-SEE provides a simplified scoring system of clinical severity\rbased on three domains:"
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__pAphS)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__d2Ng3)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___0TlLq)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"30%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/symptomsAndComplicationsSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tc8T
                      )}
                    >
                      {"Symptoms and\rcomplications"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yw08)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__yltyy)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"30%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/inflammatoryFeaturesSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t6W3R
                      )}
                    >
                      {"Inflammatory Fibrostenosis\rfeatures"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kRrz3)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__mfKb1, {
                        [sty.imgmodal_rm1Hs4__mfKb1QEe8P]: hasVariant(
                          $state,
                          "modal",
                          "rm1Hs4"
                        )
                      })}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"30%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/escape_room/images/fibrostenosisSvg.svg",
                        fullWidth: 61,
                        fullHeight: 61,
                        aspectRatio: 1
                      }}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7XeYm
                      )}
                    >
                      {"Fibrostenosis\n"}
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2CmC6
                  )}
                >
                  {
                    "I-SEE categorizes patients based on disease severity (inactive, mild,\rmoderate, or severe). It is a useful tool for assessing disease at initial\rdiagnosis and during monitoring visits. I-SEE also provides a means\rto facilitate communication among providers and with\rpatients/caregivers."
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mhvqM
                  )}
                >
                  {"Why are the other answers incorrect?"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__azgjw
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "I-SEE serves as a complementary tool to, but does not replace,\rvalidated instruments such as the EREFS, which evaluates "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"E"}
                    </span>
                    <React.Fragment>{"dema,\r "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"R"}
                    </span>
                    <React.Fragment>{"ings, "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"E"}
                    </span>
                    <React.Fragment>{"xudates, "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"F"}
                    </span>
                    <React.Fragment>{"urrows, and "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"S"}
                    </span>
                    <React.Fragment>
                      {
                        "trictures. I-SEE is not used to assess\rrisk factors or treatment contraindications.\n\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {
                        "The I-SEE tool can be accessed in the Resources bookshelf."
                      }
                    </span>
                  </React.Fragment>
                </div>
              </div>
            }
            incorrectReasoning={
              <WrongAnswer
                className={classNames(
                  "__wab_instance",
                  sty.wrongAnswer__nNrLu,
                  {
                    [sty.wrongAnswermodal_rm1Hs4__nNrLUqEe8P]: hasVariant(
                      $state,
                      "modal",
                      "rm1Hs4"
                    )
                  }
                )}
              />
            }
            isSelected={generateStateValueProp($state, ["bed", "isSelected"])}
            onClickClose={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onClickSubmit={async event => {
              const $steps = {};

              $steps["updateModal"] = true
                ? (() => {
                    const actionArgs = {
                      vgroup: "modal",
                      operation: 0,
                      value: []
                    };
                    return (({ vgroup, value }) => {
                      if (typeof value === "string") {
                        value = [value];
                      }

                      $stateSet($state, vgroup, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateModal"] != null &&
                typeof $steps["updateModal"] === "object" &&
                typeof $steps["updateModal"].then === "function"
              ) {
                $steps["updateModal"] = await $steps["updateModal"];
              }
            }}
            onIsSelectedChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["bed", "isSelected"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStepChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["bed", "step"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            question={
              hasVariant($state, "modal", "rm1Hs4")
                ? (() => {
                    try {
                      return $props.questions.questions[3].questionText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()
                : undefined
            }
            questionId={
              hasVariant($state, "modal", "rm1Hs4") ? "q4" : undefined
            }
          />
        ) : null}
      </div>
      <BottomToolbar
        data-plasmic-name={"bottomToolbar"}
        data-plasmic-override={overrides.bottomToolbar}
        className={classNames("__wab_instance", sty.bottomToolbar, {
          [sty.bottomToolbarmodal_ivanDoor]: hasVariant(
            $state,
            "modal",
            "ivanDoor"
          ),
          [sty.bottomToolbarmodal_ivanPcp2]: hasVariant(
            $state,
            "modal",
            "ivanPcp2"
          ),
          [sty.bottomToolbarmodal_ivanPcp3]: hasVariant(
            $state,
            "modal",
            "ivanPcp3"
          ),
          [sty.bottomToolbarmodal_ivanPcp4]: hasVariant(
            $state,
            "modal",
            "ivanPcp4"
          ),
          [sty.bottomToolbarmodal_kelvinDoor]: hasVariant(
            $state,
            "modal",
            "kelvinDoor"
          ),
          [sty.bottomToolbarmodal_kelvinPcp1]: hasVariant(
            $state,
            "modal",
            "kelvinPcp1"
          ),
          [sty.bottomToolbarmodal_kelvinPcp2]: hasVariant(
            $state,
            "modal",
            "kelvinPcp2"
          ),
          [sty.bottomToolbarmodal_kelvinPcp3]: hasVariant(
            $state,
            "modal",
            "kelvinPcp3"
          ),
          [sty.bottomToolbarmodal_kelvinPcp4]: hasVariant(
            $state,
            "modal",
            "kelvinPcp4"
          ),
          [sty.bottomToolbarmodal_lamp]: hasVariant($state, "modal", "lamp"),
          [sty.bottomToolbarmodal_rm1Hs1]: hasVariant(
            $state,
            "modal",
            "rm1Hs1"
          ),
          [sty.bottomToolbarmodal_rm1Hs2]: hasVariant(
            $state,
            "modal",
            "rm1Hs2"
          ),
          [sty.bottomToolbarmodal_rm1Hs3]: hasVariant(
            $state,
            "modal",
            "rm1Hs3"
          ),
          [sty.bottomToolbarmodal_rm1Hs4]: hasVariant(
            $state,
            "modal",
            "rm1Hs4"
          ),
          [sty.bottomToolbarmodal_rm2Hs1]: hasVariant(
            $state,
            "modal",
            "rm2Hs1"
          ),
          [sty.bottomToolbarmodal_rm2Hs2]: hasVariant(
            $state,
            "modal",
            "rm2Hs2"
          ),
          [sty.bottomToolbarmodal_rm2Hs3]: hasVariant(
            $state,
            "modal",
            "rm2Hs3"
          ),
          [sty.bottomToolbarmodal_rm2Hs4]: hasVariant(
            $state,
            "modal",
            "rm2Hs4"
          ),
          [sty.bottomToolbarmodal_rm3Hs1]: hasVariant(
            $state,
            "modal",
            "rm3Hs1"
          ),
          [sty.bottomToolbarmodal_rm3Hs2]: hasVariant(
            $state,
            "modal",
            "rm3Hs2"
          ),
          [sty.bottomToolbarmodal_rm3Hs3]: hasVariant(
            $state,
            "modal",
            "rm3Hs3"
          ),
          [sty.bottomToolbarmodal_rm3Hs4]: hasVariant(
            $state,
            "modal",
            "rm3Hs4"
          ),
          [sty.bottomToolbarmodal_shareseDoor]: hasVariant(
            $state,
            "modal",
            "shareseDoor"
          ),
          [sty.bottomToolbarmodal_sharesePcp2]: hasVariant(
            $state,
            "modal",
            "sharesePcp2"
          ),
          [sty.bottomToolbarmodal_sharesePcp3]: hasVariant(
            $state,
            "modal",
            "sharesePcp3"
          ),
          [sty.bottomToolbarmodal_sharesePcp4]: hasVariant(
            $state,
            "modal",
            "sharesePcp4"
          ),
          [sty.bottomToolbarmodal_unnamedVariant]: hasVariant(
            $state,
            "modal",
            "unnamedVariant"
          )
        })}
        hasReference={
          hasVariant($state, "modal", "unnamedVariant")
            ? "visible"
            : hasVariant($state, "modal", "ivanPcp4")
              ? "visible"
              : hasVariant($state, "modal", "ivanPcp3")
                ? "visible"
                : hasVariant($state, "modal", "ivanPcp2")
                  ? "visible"
                  : hasVariant($state, "modal", "sharesePcp4")
                    ? "visible"
                    : hasVariant($state, "modal", "sharesePcp3")
                      ? "visible"
                      : hasVariant($state, "modal", "sharesePcp2")
                        ? "visible"
                        : hasVariant($state, "modal", "kelvinPcp4")
                          ? "visible"
                          : hasVariant($state, "modal", "kelvinPcp3")
                            ? "visible"
                            : hasVariant($state, "modal", "kelvinPcp2")
                              ? "visible"
                              : hasVariant($state, "modal", "kelvinPcp1")
                                ? "visible"
                                : hasVariant($state, "modal", "lamp")
                                  ? "visible"
                                  : hasVariant($state, "modal", "ivanDoor")
                                    ? "visible"
                                    : hasVariant($state, "modal", "rm3Hs4")
                                      ? "visible"
                                      : hasVariant($state, "modal", "rm3Hs3")
                                        ? "visible"
                                        : hasVariant($state, "modal", "rm3Hs2")
                                          ? "visible"
                                          : hasVariant(
                                                $state,
                                                "modal",
                                                "rm3Hs1"
                                              )
                                            ? "visible"
                                            : hasVariant(
                                                  $state,
                                                  "modal",
                                                  "shareseDoor"
                                                )
                                              ? "visible"
                                              : hasVariant(
                                                    $state,
                                                    "modal",
                                                    "rm2Hs4"
                                                  )
                                                ? "visible"
                                                : hasVariant(
                                                      $state,
                                                      "modal",
                                                      "rm2Hs3"
                                                    )
                                                  ? "visible"
                                                  : hasVariant(
                                                        $state,
                                                        "modal",
                                                        "rm2Hs2"
                                                      )
                                                    ? "visible"
                                                    : hasVariant(
                                                          $state,
                                                          "modal",
                                                          "rm2Hs1"
                                                        )
                                                      ? "visible"
                                                      : hasVariant(
                                                            $state,
                                                            "modal",
                                                            "kelvinDoor"
                                                          )
                                                        ? "visible"
                                                        : hasVariant(
                                                              $state,
                                                              "modal",
                                                              "rm1Hs4"
                                                            )
                                                          ? "visible"
                                                          : hasVariant(
                                                                $state,
                                                                "modal",
                                                                "rm1Hs3"
                                                              )
                                                            ? "visible"
                                                            : hasVariant(
                                                                  $state,
                                                                  "modal",
                                                                  "rm1Hs2"
                                                                )
                                                              ? "visible"
                                                              : hasVariant(
                                                                    $state,
                                                                    "modal",
                                                                    "rm1Hs1"
                                                                  )
                                                                ? "visible"
                                                                : undefined
        }
      />

      <ClueModal
        data-plasmic-name={"clueModal"}
        data-plasmic-override={overrides.clueModal}
        className={classNames("__wab_instance", sty.clueModal, {
          [sty.clueModalmodal_rm1Hs1]: hasVariant($state, "modal", "rm1Hs1"),
          [sty.clueModalmodal_rm1Hs2]: hasVariant($state, "modal", "rm1Hs2"),
          [sty.clueModalmodal_rm3Hs3]: hasVariant($state, "modal", "rm3Hs3")
        })}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "roomPlan",
    "roomScene",
    "kelvinTitleBanner",
    "kelvinSpecialist",
    "bookshelf3",
    "shareseSpecialist",
    "hotspot3",
    "bookshelf4",
    "shareseBookshelf",
    "hotspot4",
    "hotspot2",
    "hotspot1",
    "ivanSpecialist",
    "bookshelf2",
    "referencePanel",
    "questionContainer",
    "computer",
    "ivanSpecialist4",
    "ivanShelf",
    "ivanScreen",
    "sharese1",
    "sharese2",
    "sharese3",
    "diagram",
    "sharese4",
    "bookshelf",
    "bed",
    "bottomToolbar",
    "clueModal"
  ],
  roomPlan: ["roomPlan"],
  roomScene: [
    "roomScene",
    "kelvinTitleBanner",
    "kelvinSpecialist",
    "bookshelf3",
    "shareseSpecialist",
    "hotspot3",
    "bookshelf4",
    "shareseBookshelf",
    "hotspot4",
    "hotspot2",
    "hotspot1",
    "ivanSpecialist",
    "bookshelf2"
  ],
  kelvinTitleBanner: ["kelvinTitleBanner"],
  kelvinSpecialist: ["kelvinSpecialist", "bookshelf3"],
  bookshelf3: ["bookshelf3"],
  shareseSpecialist: [
    "shareseSpecialist",
    "hotspot3",
    "bookshelf4",
    "shareseBookshelf",
    "hotspot4",
    "hotspot2",
    "hotspot1"
  ],
  hotspot3: ["hotspot3"],
  bookshelf4: ["bookshelf4", "shareseBookshelf"],
  shareseBookshelf: ["shareseBookshelf"],
  hotspot4: ["hotspot4"],
  hotspot2: ["hotspot2"],
  hotspot1: ["hotspot1"],
  ivanSpecialist: ["ivanSpecialist", "bookshelf2"],
  bookshelf2: ["bookshelf2"],
  referencePanel: ["referencePanel"],
  questionContainer: [
    "questionContainer",
    "computer",
    "ivanSpecialist4",
    "ivanShelf",
    "ivanScreen",
    "sharese1",
    "sharese2",
    "sharese3",
    "diagram",
    "sharese4",
    "bookshelf",
    "bed"
  ],
  computer: ["computer"],
  ivanSpecialist4: ["ivanSpecialist4"],
  ivanShelf: ["ivanShelf"],
  ivanScreen: ["ivanScreen"],
  sharese1: ["sharese1"],
  sharese2: ["sharese2"],
  sharese3: ["sharese3"],
  diagram: ["diagram"],
  sharese4: ["sharese4"],
  bookshelf: ["bookshelf"],
  bed: ["bed"],
  bottomToolbar: ["bottomToolbar"],
  clueModal: ["clueModal"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  roomPlan: "div";
  roomScene: "div";
  kelvinTitleBanner: "div";
  kelvinSpecialist: "div";
  bookshelf3: "div";
  shareseSpecialist: "div";
  hotspot3: "div";
  bookshelf4: "div";
  shareseBookshelf: typeof PlasmicImg__;
  hotspot4: "div";
  hotspot2: "div";
  hotspot1: "div";
  ivanSpecialist: "div";
  bookshelf2: "div";
  referencePanel: typeof ReferencePanel;
  questionContainer: "div";
  computer: typeof QuestionModal;
  ivanSpecialist4: typeof QuestionModal;
  ivanShelf: typeof QuestionModal;
  ivanScreen: typeof QuestionModal;
  sharese1: typeof QuestionModal;
  sharese2: typeof QuestionModal;
  sharese3: typeof QuestionModal;
  diagram: typeof QuestionModal;
  sharese4: typeof QuestionModal;
  bookshelf: typeof QuestionModal;
  bed: typeof QuestionModal;
  bottomToolbar: typeof BottomToolbar;
  clueModal: typeof ClueModal;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicExamRoomSpecialty__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicExamRoomSpecialty__VariantsArgs;
    args?: PlasmicExamRoomSpecialty__ArgsType;
    overrides?: NodeOverridesType<T>;
  } &
    // Specify variants directly as props
    Omit<PlasmicExamRoomSpecialty__VariantsArgs, ReservedPropsType> &
    // Specify args directly as props
    Omit<PlasmicExamRoomSpecialty__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicExamRoomSpecialty__ArgProps,
          internalVariantPropNames: PlasmicExamRoomSpecialty__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicExamRoomSpecialty__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicExamRoomSpecialty";
  } else {
    func.displayName = `PlasmicExamRoomSpecialty.${nodeName}`;
  }
  return func;
}

export const PlasmicExamRoomSpecialty = Object.assign(
  // Top-level PlasmicExamRoomSpecialty renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    roomPlan: makeNodeComponent("roomPlan"),
    roomScene: makeNodeComponent("roomScene"),
    kelvinTitleBanner: makeNodeComponent("kelvinTitleBanner"),
    kelvinSpecialist: makeNodeComponent("kelvinSpecialist"),
    bookshelf3: makeNodeComponent("bookshelf3"),
    shareseSpecialist: makeNodeComponent("shareseSpecialist"),
    hotspot3: makeNodeComponent("hotspot3"),
    bookshelf4: makeNodeComponent("bookshelf4"),
    shareseBookshelf: makeNodeComponent("shareseBookshelf"),
    hotspot4: makeNodeComponent("hotspot4"),
    hotspot2: makeNodeComponent("hotspot2"),
    hotspot1: makeNodeComponent("hotspot1"),
    ivanSpecialist: makeNodeComponent("ivanSpecialist"),
    bookshelf2: makeNodeComponent("bookshelf2"),
    referencePanel: makeNodeComponent("referencePanel"),
    questionContainer: makeNodeComponent("questionContainer"),
    computer: makeNodeComponent("computer"),
    ivanSpecialist4: makeNodeComponent("ivanSpecialist4"),
    ivanShelf: makeNodeComponent("ivanShelf"),
    ivanScreen: makeNodeComponent("ivanScreen"),
    sharese1: makeNodeComponent("sharese1"),
    sharese2: makeNodeComponent("sharese2"),
    sharese3: makeNodeComponent("sharese3"),
    diagram: makeNodeComponent("diagram"),
    sharese4: makeNodeComponent("sharese4"),
    bookshelf: makeNodeComponent("bookshelf"),
    bed: makeNodeComponent("bed"),
    bottomToolbar: makeNodeComponent("bottomToolbar"),
    clueModal: makeNodeComponent("clueModal"),

    // Metadata about props expected for PlasmicExamRoomSpecialty
    internalVariantProps: PlasmicExamRoomSpecialty__VariantProps,
    internalArgProps: PlasmicExamRoomSpecialty__ArgProps
  }
);

export default PlasmicExamRoomSpecialty;
/* prettier-ignore-end */
