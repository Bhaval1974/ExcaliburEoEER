/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 7WvC14QG9b5jXarkiBh2yY
// Component: s3TM3cB53fwQ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import AnswerButton from "../../AnswerButton"; // plasmic-import: AxrUA-GaPp8F/component
import InfographEdButton from "../../InfographEdButton"; // plasmic-import: TjjevRS570P0/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 7WvC14QG9b5jXarkiBh2yY/projectcss
import sty from "./PlasmicTutorialShell.module.css"; // plasmic-import: s3TM3cB53fwQ/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: ZMoSd5dtyVZ7/icon
import Lock1SvgIcon from "./icons/PlasmicIcon__Lock1Svg"; // plasmic-import: w2AEEyZLPBdy/icon
import HotspotSvgIcon from "./icons/PlasmicIcon__HotspotSvg"; // plasmic-import: iR0TWb2fF60H/icon

createPlasmicElementProxy;

export type PlasmicTutorialShell__VariantMembers = {
  page: "_1" | "_2" | "_3" | "_4" | "_5" | "_6" | "_7" | "_8";
};
export type PlasmicTutorialShell__VariantsArgs = {
  page?: SingleChoiceArg<"_1" | "_2" | "_3" | "_4" | "_5" | "_6" | "_7" | "_8">;
};
type VariantPropType = keyof PlasmicTutorialShell__VariantsArgs;
export const PlasmicTutorialShell__VariantProps = new Array<VariantPropType>(
  "page"
);

export type PlasmicTutorialShell__ArgsType = {};
type ArgPropType = keyof PlasmicTutorialShell__ArgsType;
export const PlasmicTutorialShell__ArgProps = new Array<ArgPropType>();

export type PlasmicTutorialShell__OverridesType = {
  root?: Flex__<"div">;
  page1?: Flex__<"div">;
  page2?: Flex__<"div">;
  page3?: Flex__<"div">;
  page4?: Flex__<"div">;
  page5?: Flex__<"div">;
  page6?: Flex__<"div">;
  page7?: Flex__<"div">;
  page8?: Flex__<"div">;
};

export interface DefaultTutorialShellProps {
  page?: SingleChoiceArg<"_1" | "_2" | "_3" | "_4" | "_5" | "_6" | "_7" | "_8">;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTutorialShell__RenderFunc(props: {
  variants: PlasmicTutorialShell__VariantsArgs;
  args: PlasmicTutorialShell__ArgsType;
  overrides: PlasmicTutorialShell__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "page",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.page
      },
      {
        path: "currentStep",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "stepsTotal",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 9
      },
      {
        path: "tutorialDone",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        sty.root,
        {
          [sty.rootpage__1]: hasVariant($state, "page", "_1"),
          [sty.rootpage__2]: hasVariant($state, "page", "_2"),
          [sty.rootpage__3]: hasVariant($state, "page", "_3"),
          [sty.rootpage__4]: hasVariant($state, "page", "_4"),
          [sty.rootpage__5]: hasVariant($state, "page", "_5"),
          [sty.rootpage__6]: hasVariant($state, "page", "_6"),
          [sty.rootpage__7]: hasVariant($state, "page", "_7"),
          [sty.rootpage__8]: hasVariant($state, "page", "_8")
        }
      )}
    >
      {(
        hasVariant($state, "page", "_1")
          ? true
          : (() => {
              try {
                return $state.currentStep == 1;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return true;
                }
                throw e;
              }
            })()
      ) ? (
        <div
          data-plasmic-name={"page1"}
          data-plasmic-override={overrides.page1}
          className={classNames(projectcss.all, sty.page1, {
            [sty.page1page__1]: hasVariant($state, "page", "_1")
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox__baZu4)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__pHT)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image2.svg",
                fullWidth: 645.49,
                fullHeight: 364.11,
                aspectRatio: 1.772788
              }}
            />
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__qs5Yb)}>
            <div className={classNames(projectcss.all, sty.freeBox__h3FUi)}>
              <CheckSvgIcon
                className={classNames(projectcss.all, sty.svg__o5GMl)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__w1MJm
                )}
              >
                {"The pin shows which room you are currently in."}
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__h5Plv)}>
              <CheckSvgIcon
                className={classNames(projectcss.all, sty.svg__kwu1B)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5FtD0
                )}
              >
                {"A check mark will appear once you complete a room."}
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__so2Wl)}>
              <CheckSvgIcon
                className={classNames(projectcss.all, sty.svg__vg4Z)}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__igdAn
                )}
              >
                {
                  "A lock indicates a restricted room. You will first need to complete other available rooms."
                }
              </div>
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant($state, "page", "_2")
          ? true
          : hasVariant($state, "page", "_1")
            ? true
            : (() => {
                try {
                  return $state.currentStep == 2;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })()
      ) ? (
        <div
          data-plasmic-name={"page2"}
          data-plasmic-override={overrides.page2}
          className={classNames(projectcss.all, sty.page2, {
            [sty.page2page__1]: hasVariant($state, "page", "_1"),
            [sty.page2page__2]: hasVariant($state, "page", "_2")
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox___1Y7N)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__oPUrv, {
                [sty.imgpage__1__oPUrv3SPjq]: hasVariant($state, "page", "_1")
              })}
              displayHeight={"auto"}
              displayMaxHeight={"300px"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image2.svg",
                fullWidth: 645.49,
                fullHeight: 364.11,
                aspectRatio: 1.772788
              }}
            />

            <div
              className={classNames(projectcss.all, sty.freeBox__p6OWr, {
                [sty.freeBoxpage__2__p6OWrwX7Lq]: hasVariant(
                  $state,
                  "page",
                  "_2"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__ihQuH, {
                  [sty.freeBoxpage__2__ihQuHwX7Lq]: hasVariant(
                    $state,
                    "page",
                    "_2"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__npJ,
                    {
                      [sty.textpage__2__npJWX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    }
                  )}
                >
                  {
                    "It's 4:00 p.m. on Tuesday afternoon. You have\r\nthree more patients left on your schedule before\r\nyou are done with work. Each patient is now in\r\ntheir exam room waiting to be seen.\n\n\r\nCan you successfully complete the unique\r\nchallenges presented by each of these patients to\r\nbeat the traffic home?"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4C5Mo,
                    {
                      [sty.textpage__2___4C5MowX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    }
                  )}
                >
                  {
                    "You are given 100 points at the start of each room. At each hotspot, you will earn additional points for answering questions correctly on the first try. At the escape door of each room, you will be given the opportunity to wager your points based on your confidence level. Choose wisely because what you wager will either add or subtract to your final points."
                  }
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__aRcn5, {
                  [sty.freeBoxpage__2__aRcn5WX7Lq]: hasVariant(
                    $state,
                    "page",
                    "_2"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__uZp4X, {
                    [sty.freeBoxpage__2__uZp4XwX7Lq]: hasVariant(
                      $state,
                      "page",
                      "_2"
                    )
                  })}
                />

                <div
                  className={classNames(projectcss.all, sty.freeBox__e2D96, {
                    [sty.freeBoxpage__2__e2D96WX7Lq]: hasVariant(
                      $state,
                      "page",
                      "_2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hfzJ,
                      {
                        [sty.textpage__2__hfzJwX7Lq]: hasVariant(
                          $state,
                          "page",
                          "_2"
                        )
                      }
                    )}
                  >
                    {"Kelvin Thompkins"}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___3Mrbb, {
                      [sty.freeBoxpage__2___3MrbbwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__jJusm, {
                      [sty.freeBoxpage__2__jJusmwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xVoJs,
                        {
                          [sty.textpage__2__xVoJswX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Age:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wFkfG,
                        {
                          [sty.textpage__2__wFkfGwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"3"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__h5X8A, {
                      [sty.freeBoxpage__2__h5X8AwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v6CvK,
                        {
                          [sty.textpage__2__v6CvKwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Sex:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__svwFc,
                        {
                          [sty.textpage__2__svwFCwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Male"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___70X5R, {
                      [sty.freeBoxpage__2___70X5RwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6Jmfw,
                        {
                          [sty.textpage__2___6JmfwwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Race:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qexPn,
                        {
                          [sty.textpage__2__qexPNwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Black"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox___4Lada, {
                  [sty.freeBoxpage__2___4LadawX7Lq]: hasVariant(
                    $state,
                    "page",
                    "_2"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__qIm04, {
                    [sty.freeBoxpage__2__qIm04WX7Lq]: hasVariant(
                      $state,
                      "page",
                      "_2"
                    )
                  })}
                >
                  <Lock1SvgIcon
                    className={classNames(projectcss.all, sty.svg__alLtM, {
                      [sty.svgpage__2__alLtMwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__gRdor, {
                    [sty.freeBoxpage__2__gRdoRwX7Lq]: hasVariant(
                      $state,
                      "page",
                      "_2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pHMcP,
                      {
                        [sty.textpage__2__pHMcPwX7Lq]: hasVariant(
                          $state,
                          "page",
                          "_2"
                        )
                      }
                    )}
                  >
                    {"Sharese Lopez"}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hJy9N, {
                      [sty.freeBoxpage__2__hJy9NwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___4SSPw, {
                      [sty.freeBoxpage__2___4SSPwwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mx2Gx,
                        {
                          [sty.textpage__2__mx2GxwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Age:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cueTp,
                        {
                          [sty.textpage__2__cueTpwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"3"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tdBCa, {
                      [sty.freeBoxpage__2__tdBCawX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xmWo2,
                        {
                          [sty.textpage__2__xmWo2WX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Sex:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wUlTm,
                        {
                          [sty.textpage__2__wUlTMwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Male"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wjMwQ, {
                      [sty.freeBoxpage__2__wjMwQwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lpIpi,
                        {
                          [sty.textpage__2__lpIpiwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Race:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vmxXj,
                        {
                          [sty.textpage__2__vmxXJwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Black"}
                    </div>
                  </div>
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__m7Vmm, {
                  [sty.freeBoxpage__2__m7VmMwX7Lq]: hasVariant(
                    $state,
                    "page",
                    "_2"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__sHNmo, {
                    [sty.freeBoxpage__2__sHNmowX7Lq]: hasVariant(
                      $state,
                      "page",
                      "_2"
                    )
                  })}
                >
                  <Lock1SvgIcon
                    className={classNames(projectcss.all, sty.svg__xnb5H, {
                      [sty.svgpage__2__xnb5HwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__eVCn, {
                    [sty.freeBoxpage__2__eVCnwX7Lq]: hasVariant(
                      $state,
                      "page",
                      "_2"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ti136,
                      {
                        [sty.textpage__2__ti136WX7Lq]: hasVariant(
                          $state,
                          "page",
                          "_2"
                        )
                      }
                    )}
                  >
                    {"Ivan Mikkelson"}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__guPel, {
                      [sty.freeBoxpage__2__guPeLwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___7AUtI, {
                      [sty.freeBoxpage__2___7AUtIwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s5Mml,
                        {
                          [sty.textpage__2__s5MmLwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Age:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nnitW,
                        {
                          [sty.textpage__2__nnitWwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"3"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__khriY, {
                      [sty.freeBoxpage__2__khriYwX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iokDp,
                        {
                          [sty.textpage__2__iokDPwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Sex:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7OW8,
                        {
                          [sty.textpage__2___7OW8WX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Male"}
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sQhg, {
                      [sty.freeBoxpage__2__sQhgWX7Lq]: hasVariant(
                        $state,
                        "page",
                        "_2"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kuSAn,
                        {
                          [sty.textpage__2__kuSAnwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Race:"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pjFcZ,
                        {
                          [sty.textpage__2__pjFcZwX7Lq]: hasVariant(
                            $state,
                            "page",
                            "_2"
                          )
                        }
                      )}
                    >
                      {"Black"}
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__cwu2G)}>
            <div className={classNames(projectcss.all, sty.freeBox__vnkz2)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__k14Ha
                )}
              >
                {
                  "Return to the waiting room to go back and review the other patient and enter their exam room. "
                }
              </div>
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant($state, "page", "_3")
          ? true
          : hasVariant($state, "page", "_2")
            ? true
            : hasVariant($state, "page", "_1")
              ? true
              : (() => {
                  try {
                    return $state.currentStep == 3;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return true;
                    }
                    throw e;
                  }
                })()
      ) ? (
        <div
          data-plasmic-name={"page3"}
          data-plasmic-override={overrides.page3}
          className={classNames(projectcss.all, sty.page3, {
            [sty.page3page__1]: hasVariant($state, "page", "_1"),
            [sty.page3page__2]: hasVariant($state, "page", "_2"),
            [sty.page3page__3]: hasVariant($state, "page", "_3"),
            [sty.page3page__4]: hasVariant($state, "page", "_4")
          })}
        >
          <div className={classNames(projectcss.all, sty.freeBox___2QM6K)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__wOlVn, {
                [sty.imgpage__1__wOlVn3SPjq]: hasVariant($state, "page", "_1")
              })}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"300px"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/escape_room/images/image.png",
                fullWidth: 1594,
                fullHeight: 713,
                aspectRatio: undefined
              }}
            />
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__uOtPs)}>
            <div className={classNames(projectcss.all, sty.freeBox___44OpL)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__y0NAc
                )}
              >
                {
                  "Each room has multiple hotspots which will be\r\npresented one at a time."
                }
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox___6IpMn, {
                [sty.freeBoxpage__3___6IpMnN2SoW]: hasVariant(
                  $state,
                  "page",
                  "_3"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pFenP
                )}
              >
                {"Click"}
              </div>
              <HotspotSvgIcon
                className={classNames(projectcss.all, sty.svg___2V9Wc, {
                  [sty.svgpage__3___2V9WcN2SoW]: hasVariant(
                    $state,
                    "page",
                    "_3"
                  )
                })}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kiKf,
                  {
                    [sty.textpage__3__kiKfn2SoW]: hasVariant(
                      $state,
                      "page",
                      "_3"
                    )
                  }
                )}
              >
                {"to access more information. "}
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox___3BS2C, {
                [sty.freeBoxpage__3___3BS2CN2SoW]: hasVariant(
                  $state,
                  "page",
                  "_3"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hOoBv
                )}
              >
                {"A check mark"}
              </div>
              <HotspotSvgIcon
                className={classNames(projectcss.all, sty.svg__fZKv, {
                  [sty.svgpage__3__fZKvN2SoW]: hasVariant($state, "page", "_3")
                })}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qIRdk,
                  {
                    [sty.textpage__3__qIRdkN2SoW]: hasVariant(
                      $state,
                      "page",
                      "_3"
                    )
                  }
                )}
              >
                {
                  "will appear once you answered a question and obtained the clue. Click the check mark to go back and review the question. "
                }
              </div>
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant($state, "page", "_4")
          ? true
          : hasVariant($state, "page", "_3")
            ? true
            : hasVariant($state, "page", "_2")
              ? true
              : hasVariant($state, "page", "_1")
                ? true
                : (() => {
                    try {
                      return $state.currentStep == 4;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return true;
                      }
                      throw e;
                    }
                  })()
      ) ? (
        <div
          data-plasmic-name={"page4"}
          data-plasmic-override={overrides.page4}
          className={classNames(projectcss.all, sty.page4, {
            [sty.page4page__1]: hasVariant($state, "page", "_1"),
            [sty.page4page__2]: hasVariant($state, "page", "_2"),
            [sty.page4page__3]: hasVariant($state, "page", "_3"),
            [sty.page4page__4]: hasVariant($state, "page", "_4"),
            [sty.page4page__5]: hasVariant($state, "page", "_5")
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__oAdYy, {
              [sty.freeBoxpage__4__oAdYyeQd5A]: hasVariant($state, "page", "_4")
            })}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__eLfrE,
                {
                  [sty.textpage__4__eLfrEeQd5A]: hasVariant(
                    $state,
                    "page",
                    "_4"
                  )
                }
              )}
            >
              {hasVariant($state, "page", "_4")
                ? "Select the best answer"
                : "Enter some text"}
            </div>
            <AnswerButton
              className={classNames("__wab_instance", sty.answerButton__fZlIz, {
                [sty.answerButtonpage__4__fZlIzEQd5A]: hasVariant(
                  $state,
                  "page",
                  "_4"
                )
              })}
              slot={
                hasVariant($state, "page", "_4") ? "Answer" : "Enter some text"
              }
              style2={hasVariant($state, "page", "_4") ? "final" : undefined}
            />

            <AnswerButton
              className={classNames("__wab_instance", sty.answerButton__hxzzt, {
                [sty.answerButtonpage__4__hxzzteQd5A]: hasVariant(
                  $state,
                  "page",
                  "_4"
                )
              })}
              slot={
                hasVariant($state, "page", "_4") ? "Answer" : "Enter some text"
              }
              style2={hasVariant($state, "page", "_4") ? "final" : undefined}
            >
              {hasVariant($state, "page", "_4") ? "B" : "A"}
            </AnswerButton>
            <InfographEdButton
              className={classNames(
                "__wab_instance",
                sty.infographEdButton__eCoxj,
                {
                  [sty.infographEdButtonpage__4__eCoxjEQd5A]: hasVariant(
                    $state,
                    "page",
                    "_4"
                  )
                }
              )}
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__oxPpu, {
              [sty.freeBoxpage__4__oxPpueQd5A]: hasVariant($state, "page", "_4")
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox___7Zmn4, {
                [sty.freeBoxpage__4___7Zmn4EQd5A]: hasVariant(
                  $state,
                  "page",
                  "_4"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___82Tuu,
                  {
                    [sty.textpage__4___82TuuEQd5A]: hasVariant(
                      $state,
                      "page",
                      "_4"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_4")
                  ? "\rAnswer questions by selecting an answer and\r\nclicking \u201cSubmit\u201d.\n\n\r\nYou must answer each question, using as many\r\ntries as it takes, to continue to the next question."
                  : "Each room has multiple hotspots which will be\r\npresented one at a time."}
              </div>
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant($state, "page", "_5")
          ? true
          : hasVariant($state, "page", "_4")
            ? true
            : hasVariant($state, "page", "_3")
              ? true
              : hasVariant($state, "page", "_2")
                ? true
                : hasVariant($state, "page", "_1")
                  ? true
                  : (() => {
                      try {
                        return $state.currentStep == 5;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return true;
                        }
                        throw e;
                      }
                    })()
      ) ? (
        <div
          data-plasmic-name={"page5"}
          data-plasmic-override={overrides.page5}
          className={classNames(projectcss.all, sty.page5, {
            [sty.page5page__1]: hasVariant($state, "page", "_1"),
            [sty.page5page__2]: hasVariant($state, "page", "_2"),
            [sty.page5page__3]: hasVariant($state, "page", "_3"),
            [sty.page5page__4]: hasVariant($state, "page", "_4"),
            [sty.page5page__5]: hasVariant($state, "page", "_5")
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__o1JjZ, {
              [sty.freeBoxpage__4__o1JjZeQd5A]: hasVariant(
                $state,
                "page",
                "_4"
              ),
              [sty.freeBoxpage__5__o1JjZfPd0L]: hasVariant($state, "page", "_5")
            })}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__a8Tm2, {
                [sty.imgpage__5__a8Tm2FPd0L]: hasVariant($state, "page", "_5")
              })}
              displayHeight={
                hasVariant($state, "page", "_5") ? "100px" : "auto"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={
                hasVariant($state, "page", "_5")
                  ? {
                      src: "/plasmic/escape_room/images/clue1Svg.svg",
                      fullWidth: 76.02,
                      fullHeight: 76.02,
                      aspectRatio: 1
                    }
                  : undefined
              }
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__cCqM, {
              [sty.freeBoxpage__4__cCqMEQd5A]: hasVariant($state, "page", "_4")
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__g3Wpu, {
                [sty.freeBoxpage__4__g3WpuEQd5A]: hasVariant(
                  $state,
                  "page",
                  "_4"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5LKMx,
                  {
                    [sty.textpage__4___5LKMxEQd5A]: hasVariant(
                      $state,
                      "page",
                      "_4"
                    ),
                    [sty.textpage__5___5LKMxfPd0L]: hasVariant(
                      $state,
                      "page",
                      "_5"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_5")
                  ? "Clues will appear at the bottom of the screen.\n\r\nClick on the clue to review them at any time."
                  : hasVariant($state, "page", "_4")
                    ? "\rAnswer questions by selecting an answer and\r\nclicking \u201cSubmit\u201d.\n\n\r\nYou must answer each question, using as many\r\ntries as it takes, to continue to the next question."
                    : "Each room has multiple hotspots which will be\r\npresented one at a time."}
              </div>
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant($state, "page", "_6")
          ? true
          : hasVariant($state, "page", "_5")
            ? true
            : hasVariant($state, "page", "_4")
              ? true
              : hasVariant($state, "page", "_3")
                ? true
                : hasVariant($state, "page", "_2")
                  ? true
                  : hasVariant($state, "page", "_1")
                    ? true
                    : (() => {
                        try {
                          return $state.currentStep == 6;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return true;
                          }
                          throw e;
                        }
                      })()
      ) ? (
        <div
          data-plasmic-name={"page6"}
          data-plasmic-override={overrides.page6}
          className={classNames(projectcss.all, sty.page6, {
            [sty.page6page__1]: hasVariant($state, "page", "_1"),
            [sty.page6page__2]: hasVariant($state, "page", "_2"),
            [sty.page6page__3]: hasVariant($state, "page", "_3"),
            [sty.page6page__4]: hasVariant($state, "page", "_4"),
            [sty.page6page__5]: hasVariant($state, "page", "_5"),
            [sty.page6page__6]: hasVariant($state, "page", "_6"),
            [sty.page6page__7]: hasVariant($state, "page", "_7")
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__ucc0N, {
              [sty.freeBoxpage__4__ucc0NEQd5A]: hasVariant(
                $state,
                "page",
                "_4"
              ),
              [sty.freeBoxpage__5__ucc0NfPd0L]: hasVariant(
                $state,
                "page",
                "_5"
              ),
              [sty.freeBoxpage__6__ucc0N1SPt7]: hasVariant($state, "page", "_6")
            })}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__v7Tcl, {
                [sty.imgpage__5__v7TclfPd0L]: hasVariant($state, "page", "_5"),
                [sty.imgpage__6__v7Tcl1SPt7]: hasVariant($state, "page", "_6")
              })}
              displayHeight={
                hasVariant($state, "page", "_6")
                  ? "50px"
                  : hasVariant($state, "page", "_5")
                    ? "100px"
                    : "auto"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={
                hasVariant($state, "page", "_6")
                  ? {
                      src: "/plasmic/escape_room/images/image3.svg",
                      fullWidth: 76.24,
                      fullHeight: 76.24,
                      aspectRatio: 1
                    }
                  : hasVariant($state, "page", "_5")
                    ? {
                        src: "/plasmic/escape_room/images/clue1Svg.svg",
                        fullWidth: 76.02,
                        fullHeight: 76.02,
                        aspectRatio: 1
                      }
                    : undefined
              }
            />

            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__vRaSt, {
                [sty.imgpage__5__vRaStfPd0L]: hasVariant($state, "page", "_5"),
                [sty.imgpage__6__vRaSt1SPt7]: hasVariant($state, "page", "_6")
              })}
              displayHeight={
                hasVariant($state, "page", "_6")
                  ? "50px"
                  : hasVariant($state, "page", "_5")
                    ? "100px"
                    : "auto"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={
                hasVariant($state, "page", "_6")
                  ? {
                      src: "/plasmic/escape_room/images/image3.svg",
                      fullWidth: 76.24,
                      fullHeight: 76.24,
                      aspectRatio: 1
                    }
                  : hasVariant($state, "page", "_5")
                    ? {
                        src: "/plasmic/escape_room/images/clue1Svg.svg",
                        fullWidth: 76.02,
                        fullHeight: 76.02,
                        aspectRatio: 1
                      }
                    : undefined
              }
            />

            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__hVmoz, {
                [sty.imgpage__5__hVmozfPd0L]: hasVariant($state, "page", "_5"),
                [sty.imgpage__6__hVmoz1SPt7]: hasVariant($state, "page", "_6")
              })}
              displayHeight={
                hasVariant($state, "page", "_6")
                  ? "50px"
                  : hasVariant($state, "page", "_5")
                    ? "100px"
                    : "auto"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={
                hasVariant($state, "page", "_6")
                  ? {
                      src: "/plasmic/escape_room/images/image3.svg",
                      fullWidth: 76.24,
                      fullHeight: 76.24,
                      aspectRatio: 1
                    }
                  : hasVariant($state, "page", "_5")
                    ? {
                        src: "/plasmic/escape_room/images/clue1Svg.svg",
                        fullWidth: 76.02,
                        fullHeight: 76.02,
                        aspectRatio: 1
                      }
                    : undefined
              }
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__qj1PS, {
              [sty.freeBoxpage__4__qj1PSeQd5A]: hasVariant($state, "page", "_4")
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__d6D6T, {
                [sty.freeBoxpage__4__d6D6TEQd5A]: hasVariant(
                  $state,
                  "page",
                  "_4"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hSuud,
                  {
                    [sty.textpage__4__hSuudeQd5A]: hasVariant(
                      $state,
                      "page",
                      "_4"
                    ),
                    [sty.textpage__5__hSuuDfPd0L]: hasVariant(
                      $state,
                      "page",
                      "_5"
                    ),
                    [sty.textpage__6__hSuud1SPt7]: hasVariant(
                      $state,
                      "page",
                      "_6"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_6")
                  ? "Use the controls to play,\r\npause, and stop the audio."
                  : hasVariant($state, "page", "_5")
                    ? "Clues will appear at the bottom of the screen.\n\r\nClick on the clue to review them at any time."
                    : hasVariant($state, "page", "_4")
                      ? "\rAnswer questions by selecting an answer and\r\nclicking \u201cSubmit\u201d.\n\n\r\nYou must answer each question, using as many\r\ntries as it takes, to continue to the next question."
                      : "Each room has multiple hotspots which will be\r\npresented one at a time."}
              </div>
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant($state, "page", "_7")
          ? true
          : hasVariant($state, "page", "_6")
            ? true
            : hasVariant($state, "page", "_5")
              ? true
              : hasVariant($state, "page", "_4")
                ? true
                : hasVariant($state, "page", "_3")
                  ? true
                  : hasVariant($state, "page", "_2")
                    ? true
                    : hasVariant($state, "page", "_1")
                      ? true
                      : (() => {
                          try {
                            return $state.currentStep == 7;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return true;
                            }
                            throw e;
                          }
                        })()
      ) ? (
        <div
          data-plasmic-name={"page7"}
          data-plasmic-override={overrides.page7}
          className={classNames(projectcss.all, sty.page7, {
            [sty.page7page__1]: hasVariant($state, "page", "_1"),
            [sty.page7page__2]: hasVariant($state, "page", "_2"),
            [sty.page7page__3]: hasVariant($state, "page", "_3"),
            [sty.page7page__4]: hasVariant($state, "page", "_4"),
            [sty.page7page__5]: hasVariant($state, "page", "_5"),
            [sty.page7page__6]: hasVariant($state, "page", "_6"),
            [sty.page7page__7]: hasVariant($state, "page", "_7"),
            [sty.page7page__8]: hasVariant($state, "page", "_8")
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__dwq8I, {
              [sty.freeBoxpage__4__dwq8IeQd5A]: hasVariant(
                $state,
                "page",
                "_4"
              ),
              [sty.freeBoxpage__5__dwq8IfPd0L]: hasVariant(
                $state,
                "page",
                "_5"
              ),
              [sty.freeBoxpage__6__dwq8I1SPt7]: hasVariant(
                $state,
                "page",
                "_6"
              ),
              [sty.freeBoxpage__7__dwq8I9AoNr]: hasVariant($state, "page", "_7")
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__hvrS5, {
                [sty.freeBoxpage__7__hvrS59AoNr]: hasVariant(
                  $state,
                  "page",
                  "_7"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__oVyRr,
                  {
                    [sty.textpage__7__oVyRr9AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_7")
                  ? "Less confident"
                  : "Enter some text"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3QHKp,
                  {
                    [sty.textpage__7___3QHKp9AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_7") ? "3" : "Enter some text"}
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__cb1By, {
                [sty.freeBoxpage__7__cb1By9AoNr]: hasVariant(
                  $state,
                  "page",
                  "_7"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qIhrf,
                  {
                    [sty.textpage__7__qIhrf9AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_7")
                  ? "Confident"
                  : "Enter some text"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5Km7,
                  {
                    [sty.textpage__7___5Km79AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_7") ? "7" : "Enter some text"}
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__nUpcP, {
                [sty.freeBoxpage__7__nUpcP9AoNr]: hasVariant(
                  $state,
                  "page",
                  "_7"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uLcO8,
                  {
                    [sty.textpage__7__uLcO89AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_7")
                  ? "Very confident"
                  : "Enter some text"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aDom,
                  {
                    [sty.textpage__7__aDom9AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_7") ? "10" : "Enter some text"}
              </div>
            </div>
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox__g9IKm, {
              [sty.freeBoxpage__4__g9IKmeQd5A]: hasVariant($state, "page", "_4")
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__zctuR, {
                [sty.freeBoxpage__4__zctuReQd5A]: hasVariant(
                  $state,
                  "page",
                  "_4"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xe0Rb,
                  {
                    [sty.textpage__4__xe0RbEQd5A]: hasVariant(
                      $state,
                      "page",
                      "_4"
                    ),
                    [sty.textpage__5__xe0RbfPd0L]: hasVariant(
                      $state,
                      "page",
                      "_5"
                    ),
                    [sty.textpage__6__xe0Rb1SPt7]: hasVariant(
                      $state,
                      "page",
                      "_6"
                    ),
                    [sty.textpage__7__xe0Rb9AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_7")
                  ? "At each escape door, you will be asked to\r\nwager a portion of your points based on\r\nyour confidence level."
                  : hasVariant($state, "page", "_6")
                    ? "Use the controls to play,\r\npause, and stop the audio."
                    : hasVariant($state, "page", "_5")
                      ? "Clues will appear at the bottom of the screen.\n\r\nClick on the clue to review them at any time."
                      : hasVariant($state, "page", "_4")
                        ? "\rAnswer questions by selecting an answer and\r\nclicking \u201cSubmit\u201d.\n\n\r\nYou must answer each question, using as many\r\ntries as it takes, to continue to the next question."
                        : "Each room has multiple hotspots which will be\r\npresented one at a time."}
              </div>
            </div>
          </div>
        </div>
      ) : null}
      {(
        hasVariant($state, "page", "_8")
          ? true
          : hasVariant($state, "page", "_7")
            ? true
            : hasVariant($state, "page", "_6")
              ? true
              : hasVariant($state, "page", "_5")
                ? true
                : hasVariant($state, "page", "_4")
                  ? true
                  : hasVariant($state, "page", "_3")
                    ? true
                    : hasVariant($state, "page", "_2")
                      ? true
                      : hasVariant($state, "page", "_1")
                        ? true
                        : (() => {
                            try {
                              return $state.currentStep == 8;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return true;
                              }
                              throw e;
                            }
                          })()
      ) ? (
        <div
          data-plasmic-name={"page8"}
          data-plasmic-override={overrides.page8}
          className={classNames(projectcss.all, sty.page8, {
            [sty.page8page__1]: hasVariant($state, "page", "_1"),
            [sty.page8page__2]: hasVariant($state, "page", "_2"),
            [sty.page8page__3]: hasVariant($state, "page", "_3"),
            [sty.page8page__4]: hasVariant($state, "page", "_4"),
            [sty.page8page__5]: hasVariant($state, "page", "_5"),
            [sty.page8page__6]: hasVariant($state, "page", "_6"),
            [sty.page8page__7]: hasVariant($state, "page", "_7"),
            [sty.page8page__8]: hasVariant($state, "page", "_8")
          })}
        >
          <div
            className={classNames(projectcss.all, sty.freeBox__mKbn1, {
              [sty.freeBoxpage__4__mKbn1EQd5A]: hasVariant(
                $state,
                "page",
                "_4"
              ),
              [sty.freeBoxpage__5__mKbn1FPd0L]: hasVariant(
                $state,
                "page",
                "_5"
              ),
              [sty.freeBoxpage__6__mKbn11SPt7]: hasVariant(
                $state,
                "page",
                "_6"
              ),
              [sty.freeBoxpage__7__mKbn19AoNr]: hasVariant(
                $state,
                "page",
                "_7"
              ),
              [sty.freeBoxpage__8__mKbn18E9HC]: hasVariant($state, "page", "_8")
            })}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__pGr2H, {
                [sty.imgpage__8__pGr2H8E9HC]: hasVariant($state, "page", "_8")
              })}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={
                hasVariant($state, "page", "_8")
                  ? {
                      src: "/plasmic/escape_room/images/image5.png",
                      fullWidth: 776,
                      fullHeight: 495,
                      aspectRatio: undefined
                    }
                  : undefined
              }
            />
          </div>
          <div
            className={classNames(projectcss.all, sty.freeBox___4Ph7O, {
              [sty.freeBoxpage__4___4Ph7OEQd5A]: hasVariant(
                $state,
                "page",
                "_4"
              )
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__bQXx, {
                [sty.freeBoxpage__4__bQXxEQd5A]: hasVariant(
                  $state,
                  "page",
                  "_4"
                )
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__asNo9,
                  {
                    [sty.textpage__4__asNo9EQd5A]: hasVariant(
                      $state,
                      "page",
                      "_4"
                    ),
                    [sty.textpage__5__asNo9FPd0L]: hasVariant(
                      $state,
                      "page",
                      "_5"
                    ),
                    [sty.textpage__6__asNo91SPt7]: hasVariant(
                      $state,
                      "page",
                      "_6"
                    ),
                    [sty.textpage__7__asNo99AoNr]: hasVariant(
                      $state,
                      "page",
                      "_7"
                    ),
                    [sty.textpage__8__asNo98E9HC]: hasVariant(
                      $state,
                      "page",
                      "_8"
                    )
                  }
                )}
              >
                {hasVariant($state, "page", "_8")
                  ? "Scroll down to reveal more information"
                  : hasVariant($state, "page", "_7")
                    ? "At each escape door, you will be asked to\r\nwager a portion of your points based on\r\nyour confidence level."
                    : hasVariant($state, "page", "_6")
                      ? "Use the controls to play,\r\npause, and stop the audio."
                      : hasVariant($state, "page", "_5")
                        ? "Clues will appear at the bottom of the screen.\n\r\nClick on the clue to review them at any time."
                        : hasVariant($state, "page", "_4")
                          ? "\rAnswer questions by selecting an answer and\r\nclicking \u201cSubmit\u201d.\n\n\r\nYou must answer each question, using as many\r\ntries as it takes, to continue to the next question."
                          : "Each room has multiple hotspots which will be\r\npresented one at a time."}
              </div>
            </div>
          </div>
        </div>
      ) : null}
      <InfographEdButton
        className={classNames("__wab_instance", sty.infographEdButton__h3U, {
          [sty.infographEdButtonpage__1__h3U3SPjq]: hasVariant(
            $state,
            "page",
            "_1"
          ),
          [sty.infographEdButtonpage__2__h3UwX7Lq]: hasVariant(
            $state,
            "page",
            "_2"
          ),
          [sty.infographEdButtonpage__3__h3UN2SoW]: hasVariant(
            $state,
            "page",
            "_3"
          ),
          [sty.infographEdButtonpage__4__h3UEQd5A]: hasVariant(
            $state,
            "page",
            "_4"
          ),
          [sty.infographEdButtonpage__5__h3UfPd0L]: hasVariant(
            $state,
            "page",
            "_5"
          ),
          [sty.infographEdButtonpage__6__h3U1SPt7]: hasVariant(
            $state,
            "page",
            "_6"
          ),
          [sty.infographEdButtonpage__7__h3U9AoNr]: hasVariant(
            $state,
            "page",
            "_7"
          ),
          [sty.infographEdButtonpage__8__h3U8E9HC]: hasVariant(
            $state,
            "page",
            "_8"
          )
        })}
        onClick={async event => {
          const $steps = {};

          $steps["updateCurrentStep"] = true
            ? (() => {
                const actionArgs = {
                  variable: {
                    objRoot: $state,
                    variablePath: ["currentStep"]
                  },
                  operation: 0,
                  value: Math.min($state.currentStep + 1, $state.stepsTotal)
                };
                return (({ variable, value, startIndex, deleteCount }) => {
                  if (!variable) {
                    return;
                  }
                  const { objRoot, variablePath } = variable;

                  $stateSet(objRoot, variablePath, value);
                  return value;
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
          if (
            $steps["updateCurrentStep"] != null &&
            typeof $steps["updateCurrentStep"] === "object" &&
            typeof $steps["updateCurrentStep"].then === "function"
          ) {
            $steps["updateCurrentStep"] = await $steps["updateCurrentStep"];
          }

          $steps["updateCurrentStep4"] = true
            ? (() => {
                const actionArgs = {
                  destination: `/tutorial#${(() => {
                    try {
                      return "step-" + $state.currentStep;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}`
                };
                return (({ destination }) => {
                  if (
                    typeof destination === "string" &&
                    destination.startsWith("#")
                  ) {
                    document
                      .getElementById(destination.substr(1))
                      .scrollIntoView({ behavior: "smooth" });
                  } else {
                    __nextRouter?.push(destination);
                  }
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
          if (
            $steps["updateCurrentStep4"] != null &&
            typeof $steps["updateCurrentStep4"] === "object" &&
            typeof $steps["updateCurrentStep4"].then === "function"
          ) {
            $steps["updateCurrentStep4"] = await $steps["updateCurrentStep4"];
          }

          $steps["updateCurrentStep2"] =
            $state.currentStep == $state.stepsTotal
              ? (() => {
                  const actionArgs = {
                    variable: {
                      objRoot: $state,
                      variablePath: ["tutorialDone"]
                    },
                    operation: 4
                  };
                  return (({ variable, value, startIndex, deleteCount }) => {
                    if (!variable) {
                      return;
                    }
                    const { objRoot, variablePath } = variable;

                    const oldValue = $stateGet(objRoot, variablePath);
                    $stateSet(objRoot, variablePath, !oldValue);
                    return !oldValue;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
          if (
            $steps["updateCurrentStep2"] != null &&
            typeof $steps["updateCurrentStep2"] === "object" &&
            typeof $steps["updateCurrentStep2"].then === "function"
          ) {
            $steps["updateCurrentStep2"] = await $steps["updateCurrentStep2"];
          }

          $steps["updateCurrentStep3"] =
            $state.tutorialDone == true
              ? (() => {
                  const actionArgs = { destination: `/faculty` };
                  return (({ destination }) => {
                    if (
                      typeof destination === "string" &&
                      destination.startsWith("#")
                    ) {
                      document
                        .getElementById(destination.substr(1))
                        .scrollIntoView({ behavior: "smooth" });
                    } else {
                      __nextRouter?.push(destination);
                    }
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
          if (
            $steps["updateCurrentStep3"] != null &&
            typeof $steps["updateCurrentStep3"] === "object" &&
            typeof $steps["updateCurrentStep3"].then === "function"
          ) {
            $steps["updateCurrentStep3"] = await $steps["updateCurrentStep3"];
          }
        }}
      >
        {"Continue"}
      </InfographEdButton>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "page1",
    "page2",
    "page3",
    "page4",
    "page5",
    "page6",
    "page7",
    "page8"
  ],
  page1: ["page1"],
  page2: ["page2"],
  page3: ["page3"],
  page4: ["page4"],
  page5: ["page5"],
  page6: ["page6"],
  page7: ["page7"],
  page8: ["page8"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  page1: "div";
  page2: "div";
  page3: "div";
  page4: "div";
  page5: "div";
  page6: "div";
  page7: "div";
  page8: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTutorialShell__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTutorialShell__VariantsArgs;
    args?: PlasmicTutorialShell__ArgsType;
    overrides?: NodeOverridesType<T>;
  } &
    // Specify variants directly as props
    Omit<PlasmicTutorialShell__VariantsArgs, ReservedPropsType> &
    // Specify args directly as props
    Omit<PlasmicTutorialShell__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTutorialShell__ArgProps,
          internalVariantPropNames: PlasmicTutorialShell__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTutorialShell__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTutorialShell";
  } else {
    func.displayName = `PlasmicTutorialShell.${nodeName}`;
  }
  return func;
}

export const PlasmicTutorialShell = Object.assign(
  // Top-level PlasmicTutorialShell renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    page1: makeNodeComponent("page1"),
    page2: makeNodeComponent("page2"),
    page3: makeNodeComponent("page3"),
    page4: makeNodeComponent("page4"),
    page5: makeNodeComponent("page5"),
    page6: makeNodeComponent("page6"),
    page7: makeNodeComponent("page7"),
    page8: makeNodeComponent("page8"),

    // Metadata about props expected for PlasmicTutorialShell
    internalVariantProps: PlasmicTutorialShell__VariantProps,
    internalArgProps: PlasmicTutorialShell__ArgProps
  }
);

export default PlasmicTutorialShell;
/* prettier-ignore-end */
